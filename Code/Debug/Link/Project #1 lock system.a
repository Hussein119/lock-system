;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;char keypad();
;unsigned char EE_Read(unsigned int address);
;void EE_Write(unsigned int address, unsigned char data);
;void EE_WriteString(unsigned int address, const char *str);
;void EE_ReadString(unsigned int address, char *buffer, unsigned int length);
;void initializeUsers();
;void displayMessage(char *message, int delay_ms_value);
;int enterValueWithKeypad(char *buffer);
;void generateTone();

	.DSEG
;void main(void)
; 0000 002D {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 002E 
; 0000 002F // Set keypad ports
; 0000 0030 DDRC = 0b00000111; // 1 unused pin , 4 rows (input) , 3 cloumns (output)
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0031 PORTC = 0b11111000; // pull up resistance
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0032 
; 0000 0033 // Initialize the LCD
; 0000 0034 lcd_init(16);
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0035 
; 0000 0036 
; 0000 0037 // Set the door as input (now by default the door is closed)
; 0000 0038 DDRB .0 = 0;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0039 PORTB .0 = 1; // turn on pull up resistance
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 003A 
; 0000 003B // Set the speaker as a output
; 0000 003C DDRD.7 = 1;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 003D PORTD.7 = 1; // Set it to 1 initially
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 003E 
; 0000 003F // Initialize user data in EEPROM
; 0000 0040 initializeUsers();
;PCODE: $0000001C VOL: 0
; 0000 0041 
; 0000 0042 DDRB.2 = 0; // make button as input
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0043 PORTB.2 = 1; // turn on pull up resistance for INT2 intrrupt
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0044 
; 0000 0045 // actual casue INT2
; 0000 0046 bit_set(MCUCSR, 6);
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0047 
; 0000 0048 DDRD.2 = 0; // make button as input
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0049 PORTD.2 = 1; // turn on pull up resistance for INT0 intrrupt
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 004A 
; 0000 004B // actual casue (The falling edge of INT0)
; 0000 004C bit_set(MCUCR, 1);
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 004D bit_clr(MCUCR, 0);
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 004E 
; 0000 004F // actual casue (The falling edge of INT1)
; 0000 0050 bit_set(MCUCR, 3);
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0051 bit_clr(MCUCR, 2);
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0052 
; 0000 0053 DDRD.3 = 0; // make button SetPC as input
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0054 PORTD.3 = 1; // turn on pull up resistance
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0055 
; 0000 0056 // Enable global interrupts
; 0000 0057 #asm("sei")
;PCODE: $00000038 VOL: 0
; 0000 0058 
; 0000 0059 // GICR INT1 (bit no 7) , SetPC spacific enable
; 0000 005A bit_set(GICR, 7);
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 005B 
; 0000 005C // GICR INT2 (bit no 5) , open spacific enable
; 0000 005D bit_set(GICR, 5);
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 005E 
; 0000 005F // GICR INT0 (bit no 6) , admin spacific enable
; 0000 0060 bit_set(GICR, 6);
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0061 }
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;interrupt [3] void SetPC (void)
; 0000 0064 {
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0065 char enteredID[5];  // Change data type to string
; 0000 0066 User currentUser;
; 0000 0067 unsigned int address = 0;
; 0000 0068 int userFound = 0;
; 0000 0069 int i;
; 0000 006A char enteredNewPC[5]; // define enteredNewPC array to hold the new PC
; 0000 006B char reenteredNewPC[5]; // define reenteredNewPC array to hold the Re-entered new PC
; 0000 006C 
; 0000 006D lcd_clear();
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;	enteredID -> Y+30
;	currentUser -> Y+16
;	address -> R16,R17
;	userFound -> R18,R19
;	i -> R20,R21
;	enteredNewPC -> Y+11
;	reenteredNewPC -> Y+6
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 006E displayMessage("Enter your ID:", 1000);
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 006F lcd_gotoxy(0, 1);
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0070 if (enterValueWithKeypad(enteredID))
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0071 {
; 0000 0072 // char enteredPC[4];
; 0000 0073 char enteredOldPC[5];
; 0000 0074 // search for the entered ID in the user data
; 0000 0075 for (i = 0; i < sizeof(users) / sizeof(users[0]); ++i)
;PCODE: $0000005B VOL: 0
;	enteredID -> Y+35
;	currentUser -> Y+21
;	enteredNewPC -> Y+16
;	reenteredNewPC -> Y+11
;	enteredOldPC -> Y+0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 0076 {
; 0000 0077 address += sizeof(users[i].name);
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 0078 EE_ReadString(address, currentUser.id, sizeof(currentUser.id));  // Read ID as a string
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0079 
; 0000 007A if (strcmp(currentUser.id, enteredID) == 0)
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 007B {
; 0000 007C // ID found, verify the old PC
; 0000 007D address += sizeof(currentUser.id);
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 007E EE_ReadString(address, currentUser.pc, sizeof(currentUser.pc));  // Read PC as a string
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 007F displayMessage("Enter old PC:", 1000);
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 0080 lcd_gotoxy(0, 1);
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 0081 
; 0000 0082 if (enterValueWithKeypad(enteredOldPC))
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 0083 {
; 0000 0084 if (strcmp(currentUser.pc, enteredOldPC) == 0)
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 0085 {
; 0000 0086 // Old PC verified
; 0000 0087 displayMessage("Enter new PC:", 1000);
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 0088 lcd_gotoxy(0, 1);
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 0089 enterValueWithKeypad(enteredNewPC);
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 008A 
; 0000 008B lcd_clear();
;PCODE: $00000099 VOL: 0
; 0000 008C displayMessage("Re-enter new PC:", 1000);
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 008D lcd_gotoxy(0, 1);
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 008E enterValueWithKeypad(reenteredNewPC);
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 008F 
; 0000 0090 if (strcmp(enteredNewPC, reenteredNewPC) == 0)
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 0091 {
; 0000 0092 // If new PC entered correctly, store it
; 0000 0093 EE_WriteString(address, enteredNewPC);
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 0094 displayMessage("New PC stored", 1000);
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 0095 DDRB.0 = 1;
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 0096 }
; 0000 0097 else
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 0098 {
; 0000 0099 displayMessage("New PC mismatch, Contact admin", 1000);
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 009A generateTone();
;PCODE: $000000BC VOL: 0
; 0000 009B generateTone();
;PCODE: $000000BD VOL: 0
; 0000 009C }
;PCODE: $000000BE VOL: 0
; 0000 009D }
; 0000 009E else
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 009F {
; 0000 00A0 displayMessage("Wrong old PC,   Contact admin", 1000);
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 00A1 
; 0000 00A2 generateTone();
;PCODE: $000000C6 VOL: 0
; 0000 00A3 generateTone();
;PCODE: $000000C7 VOL: 0
; 0000 00A4 }
;PCODE: $000000C8 VOL: 0
; 0000 00A5 }
; 0000 00A6 
; 0000 00A7 userFound = 1;
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 00A8 break;
;PCODE: $000000CC VOL: 0
; 0000 00A9 }
; 0000 00AA 
; 0000 00AB address += sizeof(users[i].id);
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0000 00AC address += sizeof(users[i].pc);
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 00AD 
; 0000 00AE }
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0000 00AF 
; 0000 00B0 if (!userFound)
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 00B1 {
; 0000 00B2 displayMessage("Wrong ID", 1000);
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
; 0000 00B3 generateTone();
;PCODE: $000000DE VOL: 0
; 0000 00B4 generateTone();
;PCODE: $000000DF VOL: 0
; 0000 00B5 }
; 0000 00B6 delay_ms(5000);
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0000 00B7 // close the door and clear lcd
; 0000 00B8 DDRB .0 = 0;
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 00B9 lcd_clear();
;PCODE: $000000E5 VOL: 0
; 0000 00BA }
;PCODE: $000000E6 VOL: 0
; 0000 00BB }
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0

	.DSEG
_0x19:
	.BYTE 0x90
;interrupt [19] void open (void)
; 0000 00BE {

	.CSEG
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
; 0000 00BF // action on click on a button
; 0000 00C0 
; 0000 00C1 char enteredID[4];  // Change data type to string
; 0000 00C2 User currentUser;
; 0000 00C3 unsigned int address = 0;
; 0000 00C4 int userFound = 0;
; 0000 00C5 int i;
; 0000 00C6 
; 0000 00C7 displayMessage("Enter your ID: ", 1000);
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;	enteredID -> Y+20
;	currentUser -> Y+6
;	address -> R16,R17
;	userFound -> R18,R19
;	i -> R20,R21
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0000 00C8 lcd_gotoxy(0, 1);
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0000 00C9 
; 0000 00CA if (enterValueWithKeypad(enteredID))
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
; 0000 00CB {
; 0000 00CC char enteredPC[4];
; 0000 00CD for (i = 0; i < sizeof(users) / sizeof(users[0]); ++i)
;PCODE: $00000102 VOL: 0
;	enteredID -> Y+24
;	currentUser -> Y+10
;	enteredPC -> Y+0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0000 00CE {
; 0000 00CF EE_ReadString(address, currentUser.name, sizeof(users[i].name));
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
; 0000 00D0 address += sizeof(users[i].name);
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0000 00D1 EE_ReadString(address, currentUser.id, sizeof(currentUser.id));  // Read ID as a string
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 00D2 
; 0000 00D3 if (strcmp(currentUser.id, enteredID) == 0)
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
; 0000 00D4 {
; 0000 00D5 
; 0000 00D6 address += sizeof(users[i].id);
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0000 00D7 EE_ReadString(address, currentUser.pc, sizeof(currentUser.pc));  // Read PC as a string
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
; 0000 00D8 
; 0000 00D9 displayMessage("Enter your PC: ", 1000);
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0000 00DA lcd_gotoxy(0, 1);
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
; 0000 00DB 
; 0000 00DC if (enterValueWithKeypad(enteredPC))
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
; 0000 00DD {
; 0000 00DE if (strcmp(currentUser.pc, enteredPC) == 0)
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
; 0000 00DF {
; 0000 00E0 lcd_clear();
;PCODE: $0000013B VOL: 0
; 0000 00E1 lcd_puts("Welcome, ");
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
; 0000 00E2 lcd_puts(currentUser.name);
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
; 0000 00E3 // Open the door
; 0000 00E4 DDRB .0 = 1;
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
; 0000 00E5 }
; 0000 00E6 else
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0000 00E7 {
; 0000 00E8 displayMessage("Sorry wrong PC", 1000);
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0000 00E9 // one peep alarm
; 0000 00EA generateTone();
;PCODE: $0000014A VOL: 0
; 0000 00EB }
;PCODE: $0000014B VOL: 0
; 0000 00EC }
; 0000 00ED userFound = 1;
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
; 0000 00EE break;
;PCODE: $0000014F VOL: 0
; 0000 00EF }
; 0000 00F0 
; 0000 00F1 address += sizeof(users[i].id);
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
; 0000 00F2 address += sizeof(users[i].pc);
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
; 0000 00F3 }
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
; 0000 00F4 }
;PCODE: $0000015A VOL: 0
; 0000 00F5 
; 0000 00F6 if (!userFound)
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
; 0000 00F7 {
; 0000 00F8 displayMessage("Wrong ID", 1000);
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
; 0000 00F9 // Two peeps alarm
; 0000 00FA generateTone();
;PCODE: $00000163 VOL: 0
; 0000 00FB generateTone();
;PCODE: $00000164 VOL: 0
; 0000 00FC }
; 0000 00FD delay_ms(5000);
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
; 0000 00FE // close the door and clear lcd
; 0000 00FF DDRB .0 = 0;
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
; 0000 0100 lcd_clear();
;PCODE: $0000016A VOL: 0
; 0000 0101 }
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0

	.DSEG
_0x29:
	.BYTE 0x42
;interrupt [2] void admin (void)
; 0000 0104 {

	.CSEG
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
; 0000 0105 // action on interrupt
; 0000 0106 char enteredPC[4];
; 0000 0107 char enteredStudentID[4];
; 0000 0108 char enteredNewPC[4];
; 0000 0109 User student;
; 0000 010A User admin;
; 0000 010B unsigned int adminPCAddress = 0;
; 0000 010C unsigned int address = 0;
; 0000 010D int userFound = 0;
; 0000 010E int i;
; 0000 010F 
; 0000 0110 for (i = 0; i < sizeof(users) / sizeof(users[0]); ++i)
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;	enteredPC -> Y+44
;	enteredStudentID -> Y+40
;	enteredNewPC -> Y+36
;	student -> Y+22
;	admin -> Y+8
;	adminPCAddress -> R16,R17
;	address -> R18,R19
;	userFound -> R20,R21
;	i -> Y+6
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
; 0000 0111 {
; 0000 0112 EE_ReadString(address, admin.name, sizeof(users[i].name));
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
; 0000 0113 if (strcmp(admin.name, "Prof") == 0)
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
; 0000 0114 {
; 0000 0115 address += sizeof(users[i].name);
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
; 0000 0116 EE_ReadString(address, admin.id, sizeof(admin.id));
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
; 0000 0117 address += sizeof(users[i].id);
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
; 0000 0118 EE_ReadString(address, admin.pc, sizeof(admin.pc));
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
; 0000 0119 adminPCAddress = address;
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
; 0000 011A break;
;PCODE: $000001A3 VOL: 0
; 0000 011B }
; 0000 011C address += sizeof(users[i].pc);
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
; 0000 011D }
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
; 0000 011E 
; 0000 011F address = 0; // reset the address
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
; 0000 0120 
; 0000 0121 displayMessage("Enter Admin PC: ", 1000);
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
; 0000 0122 lcd_gotoxy(0, 1);
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
; 0000 0123 
; 0000 0124 if (enterValueWithKeypad(enteredPC))
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
; 0000 0125 {
; 0000 0126 
; 0000 0127 if (strcmp(admin.pc, enteredPC) == 0)
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
; 0000 0128 {
; 0000 0129 displayMessage("Enter Student ID: ", 1000);
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
; 0000 012A lcd_gotoxy(0, 1);
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
; 0000 012B 
; 0000 012C if (enterValueWithKeypad(enteredStudentID))
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
; 0000 012D {
; 0000 012E int j;
; 0000 012F for (j = 0; j < sizeof(users) / sizeof(users[0]); ++j)
;PCODE: $000001CF VOL: 0
;	enteredPC -> Y+46
;	enteredStudentID -> Y+42
;	enteredNewPC -> Y+38
;	student -> Y+24
;	admin -> Y+10
;	i -> Y+8
;	j -> Y+0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
; 0000 0130 {
; 0000 0131 address += sizeof(users[j].name);
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
; 0000 0132 EE_ReadString(address, student.id, sizeof(student.id));
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
; 0000 0133 address += sizeof(users[j].id);
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
; 0000 0134 if (strcmp(student.id, enteredStudentID) == 0)
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
; 0000 0135 {
; 0000 0136 displayMessage("Enter student's new PC: ", 1000);
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
; 0000 0137 lcd_gotoxy(0, 1);
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
; 0000 0138 if (enterValueWithKeypad(enteredNewPC))
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
; 0000 0139 {
; 0000 013A // Set the new pc for this student, address is for student PC
; 0000 013B EE_WriteString(address, enteredNewPC);
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
; 0000 013C displayMessage("Student PC is stored", 3000);
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
; 0000 013D userFound = 1;
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
; 0000 013E break;
;PCODE: $00000201 VOL: 0
; 0000 013F }
; 0000 0140 }
;PCODE: $00000202 VOL: 0
; 0000 0141 else if (strcmp(admin.id, enteredStudentID) == 0)
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
; 0000 0142 {
; 0000 0143 displayMessage("Enter your new PC: ", 1000);
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
; 0000 0144 lcd_gotoxy(0, 1);
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
; 0000 0145 if (enterValueWithKeypad(enteredNewPC))
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
; 0000 0146 {
; 0000 0147 // Set the new pc for this user (Admin),  address is for admin PC
; 0000 0148 EE_WriteString(adminPCAddress, enteredNewPC);
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
; 0000 0149 displayMessage("Your PC is stored", 3000);
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
; 0000 014A userFound = 1;
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
; 0000 014B break;
;PCODE: $00000222 VOL: 0
; 0000 014C }
; 0000 014D }
;PCODE: $00000223 VOL: 0
; 0000 014E address += sizeof(users[i].pc);
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
; 0000 014F }
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
; 0000 0150 }
;PCODE: $0000022E VOL: 0
; 0000 0151 }
;PCODE: $0000022F VOL: 0
; 0000 0152 }
;PCODE: $00000230 VOL: 0
; 0000 0153 
; 0000 0154 if (!userFound)
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
; 0000 0155 {
; 0000 0156 displayMessage("Contact Admin", 3000);
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
; 0000 0157 // Two peeps alarm
; 0000 0158 generateTone();
;PCODE: $00000239 VOL: 0
; 0000 0159 generateTone();
;PCODE: $0000023A VOL: 0
; 0000 015A }
; 0000 015B delay_ms(5000);
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
; 0000 015C lcd_clear();
;PCODE: $0000023E VOL: 0
; 0000 015D }
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0

	.DSEG
_0x3B:
	.BYTE 0x8B
;char keypad()
; 0000 0160 {

	.CSEG
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
; 0000 0161 while (1)
;PCODE: $00000246 VOL: 0
; 0000 0162 {
; 0000 0163 PORTC .0 = 0;
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
; 0000 0164 PORTC .1 = 1;
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
; 0000 0165 PORTC .2 = 1;
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
; 0000 0166 
; 0000 0167 
; 0000 0168 switch (PINC)
;PCODE: $0000024D VOL: 0
; 0000 0169 {
; 0000 016A case 0b11110110:
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
; 0000 016B while (PINC .3 == 0);
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
; 0000 016C return 1;
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
; 0000 016D case 0b11101110:
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
; 0000 016E while (PINC .4 == 0);
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
; 0000 016F return 4;
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
; 0000 0170 case 0b11011110:
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
; 0000 0171 while (PINC .5 == 0);
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
; 0000 0172 return 7;
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
; 0000 0173 case 0b10111110:
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
; 0000 0174 while (PINC .6 == 0);
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
; 0000 0175 return '*';
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
; 0000 0176 }
;PCODE: $00000279 VOL: 0
; 0000 0177 
; 0000 0178 PORTC .0 = 1;
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
; 0000 0179 PORTC .1 = 0;
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
; 0000 017A PORTC .2 = 1;
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
; 0000 017B 
; 0000 017C switch (PINC)
;PCODE: $00000280 VOL: 0
; 0000 017D {
; 0000 017E case 0b11110101:
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
; 0000 017F while (PINC .3 == 0);
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
; 0000 0180 return 2;
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
; 0000 0181 case 0b11101101:
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
; 0000 0182 while (PINC .4 == 0);
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
; 0000 0183 return 5;
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
; 0000 0184 case 0b11011101:
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
; 0000 0185 while (PINC .5 == 0);
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
; 0000 0186 return 8;
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
; 0000 0187 case 0b10111101:
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
; 0000 0188 while (PINC .6 == 0);
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
; 0000 0189 return 0;
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
; 0000 018A }
;PCODE: $000002AC VOL: 0
; 0000 018B 
; 0000 018C PORTC .0 = 1;
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
; 0000 018D PORTC .1 = 1;
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
; 0000 018E PORTC .2 = 0;
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
; 0000 018F 
; 0000 0190 switch (PINC)
;PCODE: $000002B3 VOL: 0
; 0000 0191 {
; 0000 0192 case 0b11110011:
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
; 0000 0193 while (PINC .3 == 0);
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
; 0000 0194 return 3;
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
; 0000 0195 case 0b11101011:
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
; 0000 0196 while (PINC .4 == 0);
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
; 0000 0197 return 6;
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
; 0000 0198 case 0b11011011:
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
; 0000 0199 while (PINC .5 == 0);
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
; 0000 019A return 9;
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
; 0000 019B case 0b10111011:
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
; 0000 019C while (PINC .6 == 0);
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
; 0000 019D return 11;
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
; 0000 019E }
;PCODE: $000002DF VOL: 0
; 0000 019F }
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
; 0000 01A0 }
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
;unsigned char EE_Read(unsigned int address)
; 0000 01A3 {
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
; 0000 01A4 while (EECR .1 == 1); // Wait till EEPROM is ready
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
;	address -> R16,R17
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
; 0000 01A5 EEAR = address;       // Prepare the address you want to read from
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
; 0000 01A6 EECR .0 = 1;          // Execute read command
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
; 0000 01A7 return EEDR;
;PCODE: $000002F3 VOL: 0
;PCODE: $000002F4 VOL: 0
;PCODE: $000002F5 VOL: 0
; 0000 01A8 }
;PCODE: $000002F6 VOL: 0
;void EE_Write(unsigned int address, unsigned char data)
; 0000 01AB {
;PCODE: $000002F7 VOL: 0
;PCODE: $000002F8 VOL: 0
; 0000 01AC while (EECR .1 == 1); // Wait till EEPROM is ready
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;	address -> R18,R19
;	data -> R17
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
; 0000 01AD EEAR = address;       // Prepare the address you want to read from
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
; 0000 01AE EEDR = data;          // Prepare the data you want to write in the address above
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
; 0000 01AF EECR .2 = 1;          // Master write enable
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
; 0000 01B0 EECR .1 = 1;          // Write Enable
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
; 0000 01B1 }
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
;void EE_WriteString(unsigned int address, const char *str)
; 0000 01B4 {
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
; 0000 01B5 // Write each character of the string to EEPROM
; 0000 01B6 while (*str)
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
;	address -> R18,R19
;	*str -> R16,R17
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
; 0000 01B7 EE_Write(address++, *str++);
;PCODE: $0000031A VOL: 0
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
;PCODE: $00000324 VOL: 0
; 0000 01B9 EE_Write(address, '\0');
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
;PCODE: $00000327 VOL: 0
; 0000 01BA }
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
;void EE_ReadString(unsigned int address, char *buffer, unsigned int length)
; 0000 01BD {
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
; 0000 01BE unsigned int i;
; 0000 01BF for (i = 0; i < length; ++i)
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
;PCODE: $00000330 VOL: 0
;PCODE: $00000331 VOL: 0
;	address -> Y+8
;	*buffer -> R20,R21
;	length -> R18,R19
;	i -> R16,R17
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
; 0000 01C0 {
; 0000 01C1 buffer[i] = EE_Read(address + i);
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
;PCODE: $0000033E VOL: 0
;PCODE: $0000033F VOL: 0
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
; 0000 01C2 if (buffer[i] == '\0')
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
; 0000 01C3 break;
;PCODE: $00000348 VOL: 0
; 0000 01C4 }
;PCODE: $00000349 VOL: 0
;PCODE: $0000034A VOL: 0
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
;PCODE: $0000034D VOL: 0
;PCODE: $0000034E VOL: 0
; 0000 01C5 }
;PCODE: $0000034F VOL: 0
;PCODE: $00000350 VOL: 0
;PCODE: $00000351 VOL: 0
;PCODE: $00000352 VOL: 0
;void initializeUsers()
; 0000 01C8 {
;PCODE: $00000353 VOL: 0
;PCODE: $00000354 VOL: 0
; 0000 01C9 unsigned int address = 0;
; 0000 01CA int i;
; 0000 01CB for (i = 0; i < sizeof(users) / sizeof(users[0]); ++i)
;PCODE: $00000355 VOL: 0
;	address -> R16,R17
;	i -> R18,R19
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
;PCODE: $0000035D VOL: 0
;PCODE: $0000035E VOL: 0
;PCODE: $0000035F VOL: 0
;PCODE: $00000360 VOL: 0
; 0000 01CC {
; 0000 01CD EE_WriteString(address, users[i].name);
;PCODE: $00000361 VOL: 0
;PCODE: $00000362 VOL: 0
;PCODE: $00000363 VOL: 0
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
;PCODE: $00000366 VOL: 0
; 0000 01CE address += sizeof(users[i].name);
;PCODE: $00000367 VOL: 0
;PCODE: $00000368 VOL: 0
; 0000 01CF 
; 0000 01D0 EE_WriteString(address, users[i].id);
;PCODE: $00000369 VOL: 0
;PCODE: $0000036A VOL: 0
;PCODE: $0000036B VOL: 0
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
;PCODE: $0000036F VOL: 0
; 0000 01D1 address += sizeof(users[i].id);
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
; 0000 01D2 
; 0000 01D3 EE_WriteString(address, users[i].pc);
;PCODE: $00000372 VOL: 0
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
;PCODE: $00000375 VOL: 0
;PCODE: $00000376 VOL: 0
;PCODE: $00000377 VOL: 0
;PCODE: $00000378 VOL: 0
; 0000 01D4 address += sizeof(users[i].pc);
;PCODE: $00000379 VOL: 0
;PCODE: $0000037A VOL: 0
; 0000 01D5 }
;PCODE: $0000037B VOL: 0
;PCODE: $0000037C VOL: 0
;PCODE: $0000037D VOL: 0
;PCODE: $0000037E VOL: 0
;PCODE: $0000037F VOL: 0
; 0000 01D6 }
;PCODE: $00000380 VOL: 0
;PCODE: $00000381 VOL: 0
;PCODE: $00000382 VOL: 0
;PCODE: $00000383 VOL: 0
;void displayMessage(char *message, int delay_ms_value)
; 0000 01D9 {
;PCODE: $00000384 VOL: 0
;PCODE: $00000385 VOL: 0
; 0000 01DA lcd_clear();
;PCODE: $00000386 VOL: 0
;PCODE: $00000387 VOL: 0
;PCODE: $00000388 VOL: 0
;PCODE: $00000389 VOL: 0
;	*message -> R18,R19
;	delay_ms_value -> R16,R17
;PCODE: $0000038A VOL: 0
; 0000 01DB lcd_puts(message);
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
; 0000 01DC delay_ms(delay_ms_value);
;PCODE: $0000038D VOL: 0
;PCODE: $0000038E VOL: 0
; 0000 01DD }
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 0
;int enterValueWithKeypad(char *buffer)
; 0000 01E0 {
;PCODE: $00000393 VOL: 0
;PCODE: $00000394 VOL: 0
; 0000 01E1 buffer[0] = keypad() + '0';
;PCODE: $00000395 VOL: 0
;PCODE: $00000396 VOL: 0
;PCODE: $00000397 VOL: 0
;	*buffer -> R16,R17
;PCODE: $00000398 VOL: 0
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
;PCODE: $0000039B VOL: 0
; 0000 01E2 lcd_putchar(buffer[0]);
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
;PCODE: $0000039E VOL: 0
; 0000 01E3 buffer[1] = keypad() + '0';
;PCODE: $0000039F VOL: 0
;PCODE: $000003A0 VOL: 0
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
; 0000 01E4 lcd_putchar(buffer[1]);
;PCODE: $000003A3 VOL: 0
;PCODE: $000003A4 VOL: 0
;PCODE: $000003A5 VOL: 0
; 0000 01E5 buffer[2] = keypad() + '0';
;PCODE: $000003A6 VOL: 0
;PCODE: $000003A7 VOL: 0
;PCODE: $000003A8 VOL: 0
;PCODE: $000003A9 VOL: 0
; 0000 01E6 lcd_putchar(buffer[2]);
;PCODE: $000003AA VOL: 0
;PCODE: $000003AB VOL: 0
;PCODE: $000003AC VOL: 0
; 0000 01E7 buffer[3] = '\0';  // Null-terminate the string
;PCODE: $000003AD VOL: 0
;PCODE: $000003AE VOL: 0
;PCODE: $000003AF VOL: 0
;PCODE: $000003B0 VOL: 0
; 0000 01E8 
; 0000 01E9 delay_ms(1000);
;PCODE: $000003B1 VOL: 0
;PCODE: $000003B2 VOL: 0
; 0000 01EA 
; 0000 01EB return 1;  // Return a non-zero value to indicate success
;PCODE: $000003B3 VOL: 0
;PCODE: $000003B4 VOL: 0
;PCODE: $000003B5 VOL: 0
; 0000 01EC }
;PCODE: $000003B6 VOL: 0
;void generateTone()
; 0000 01EF {
;PCODE: $000003B7 VOL: 0
;PCODE: $000003B8 VOL: 0
; 0000 01F0 PORTD.7 = 1;  // Set PD7 HIGH
;PCODE: $000003B9 VOL: 0
;PCODE: $000003BA VOL: 0
; 0000 01F1 delay_ms(500);  // Adjust duration as needed
;PCODE: $000003BB VOL: 0
;PCODE: $000003BC VOL: 0
; 0000 01F2 PORTD.7 = 0;  // Set PD7 LOW
;PCODE: $000003BD VOL: 0
;PCODE: $000003BE VOL: 0
; 0000 01F3 delay_ms(500);  // Pause between tones
;PCODE: $000003BF VOL: 0
;PCODE: $000003C0 VOL: 0
; 0000 01F4 PORTD.7 = 1;  // Set PD7 HIGH (optional: restore to high for a brief moment)
;PCODE: $000003C1 VOL: 0
;PCODE: $000003C2 VOL: 0
; 0000 01F5 }
;PCODE: $000003C3 VOL: 0
;PCODE: $000003C4 VOL: 0


;CodeVisionAVR C Compiler V4.00a 
;(C) Copyright 1998-2023 Pavel Haiduc, HP InfoTech S.R.L.
;http://www.hpinfotech.ro

;Build configuration    : Debug
;Chip type              : ATmega16
;Program type           : Application
;Clock frequency        : 8.000000 MHz
;Memory model           : Small
;Optimize for           : Size
;(s)printf features     : int, width
;(s)scanf features      : int, width
;External RAM size      : 0
;Data Stack size        : 256 byte(s)
;Heap size              : 0 byte(s)
;Promote 'char' to 'int': Yes
;'char' is unsigned     : Yes
;8 bit enums            : Yes
;Global 'const' stored in FLASH: No
;Enhanced function parameter passing: Mode 2
;Enhanced core instructions: On
;Automatic register allocation for global variables: On
;Smart register allocation: On

	#define _MODEL_SMALL_

	#pragma AVRPART ADMIN PART_NAME ATmega16
	#pragma AVRPART MEMORY PROG_FLASH 16384
	#pragma AVRPART MEMORY EEPROM 512
	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60

	#define CALL_SUPPORTED 1

	.LISTMAC

	.EQU UDRE=0x5
	.EQU RXC=0x7
	.EQU USR=0xB
	.EQU UDR=0xC
	.EQU SPSR=0xE
	.EQU SPDR=0xF
	.EQU EERE=0x0
	.EQU EEWE=0x1
	.EQU EEMWE=0x2
	.EQU EECR=0x1C
	.EQU EEDR=0x1D
	.EQU EEARL=0x1E
	.EQU EEARH=0x1F
	.EQU WDTCR=0x21
	.EQU MCUCR=0x35
	.EQU SPMCSR=0x37
	.EQU GICR=0x3B
	.EQU SPL=0x3D
	.EQU SPH=0x3E
	.EQU SREG=0x3F

	.DEF R0X0=R0
	.DEF R0X1=R1
	.DEF R0X2=R2
	.DEF R0X3=R3
	.DEF R0X4=R4
	.DEF R0X5=R5
	.DEF R0X6=R6
	.DEF R0X7=R7
	.DEF R0X8=R8
	.DEF R0X9=R9
	.DEF R0XA=R10
	.DEF R0XB=R11
	.DEF R0XC=R12
	.DEF R0XD=R13
	.DEF R0XE=R14
	.DEF R0XF=R15
	.DEF R0X10=R16
	.DEF R0X11=R17
	.DEF R0X12=R18
	.DEF R0X13=R19
	.DEF R0X14=R20
	.DEF R0X15=R21
	.DEF R0X16=R22
	.DEF R0X17=R23
	.DEF R0X18=R24
	.DEF R0X19=R25
	.DEF R0X1A=R26
	.DEF R0X1B=R27
	.DEF R0X1C=R28
	.DEF R0X1D=R29
	.DEF R0X1E=R30
	.DEF R0X1F=R31

	.EQU __SRAM_START=0x0060
	.EQU __SRAM_END=0x045F
	.EQU __DSTACK_SIZE=0x0100
	.EQU __HEAP_SIZE=0x0000
	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1

	.EQU __FLASH_PAGE_SIZE=0x40

	.MACRO __CPD1N
	CPI  R30,LOW(@0)
	LDI  R26,HIGH(@0)
	CPC  R31,R26
	LDI  R26,BYTE3(@0)
	CPC  R22,R26
	LDI  R26,BYTE4(@0)
	CPC  R23,R26
	.ENDM

	.MACRO __CPD2N
	CPI  R26,LOW(@0)
	LDI  R30,HIGH(@0)
	CPC  R27,R30
	LDI  R30,BYTE3(@0)
	CPC  R24,R30
	LDI  R30,BYTE4(@0)
	CPC  R25,R30
	.ENDM

	.MACRO __CPWRR
	CP   R@0,R@2
	CPC  R@1,R@3
	.ENDM

	.MACRO __CPWRN
	CPI  R@0,LOW(@2)
	LDI  R30,HIGH(@2)
	CPC  R@1,R30
	.ENDM

	.MACRO __ADDB1MN
	SUBI R30,LOW(-@0-(@1))
	.ENDM

	.MACRO __ADDB2MN
	SUBI R26,LOW(-@0-(@1))
	.ENDM

	.MACRO __ADDW1MN
	SUBI R30,LOW(-@0-(@1))
	SBCI R31,HIGH(-@0-(@1))
	.ENDM

	.MACRO __ADDW2MN
	SUBI R26,LOW(-@0-(@1))
	SBCI R27,HIGH(-@0-(@1))
	.ENDM

	.MACRO __ADDW1FN
	SUBI R30,LOW(-2*@0-(@1))
	SBCI R31,HIGH(-2*@0-(@1))
	.ENDM

	.MACRO __ADDD1FN
	SUBI R30,LOW(-2*@0-(@1))
	SBCI R31,HIGH(-2*@0-(@1))
	SBCI R22,BYTE3(-2*@0-(@1))
	.ENDM

	.MACRO __ADDD1N
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	SBCI R22,BYTE3(-@0)
	SBCI R23,BYTE4(-@0)
	.ENDM

	.MACRO __ADDD2N
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	SBCI R24,BYTE3(-@0)
	SBCI R25,BYTE4(-@0)
	.ENDM

	.MACRO __SUBD1N
	SUBI R30,LOW(@0)
	SBCI R31,HIGH(@0)
	SBCI R22,BYTE3(@0)
	SBCI R23,BYTE4(@0)
	.ENDM

	.MACRO __SUBD2N
	SUBI R26,LOW(@0)
	SBCI R27,HIGH(@0)
	SBCI R24,BYTE3(@0)
	SBCI R25,BYTE4(@0)
	.ENDM

	.MACRO __ANDBMNN
	LDS  R30,@0+(@1)
	ANDI R30,LOW(@2)
	STS  @0+(@1),R30
	.ENDM

	.MACRO __ANDWMNN
	LDS  R30,@0+(@1)
	ANDI R30,LOW(@2)
	STS  @0+(@1),R30
	LDS  R30,@0+(@1)+1
	ANDI R30,HIGH(@2)
	STS  @0+(@1)+1,R30
	.ENDM

	.MACRO __ANDD1N
	ANDI R30,LOW(@0)
	ANDI R31,HIGH(@0)
	ANDI R22,BYTE3(@0)
	ANDI R23,BYTE4(@0)
	.ENDM

	.MACRO __ANDD2N
	ANDI R26,LOW(@0)
	ANDI R27,HIGH(@0)
	ANDI R24,BYTE3(@0)
	ANDI R25,BYTE4(@0)
	.ENDM

	.MACRO __ORBMNN
	LDS  R30,@0+(@1)
	ORI  R30,LOW(@2)
	STS  @0+(@1),R30
	.ENDM

	.MACRO __ORWMNN
	LDS  R30,@0+(@1)
	ORI  R30,LOW(@2)
	STS  @0+(@1),R30
	LDS  R30,@0+(@1)+1
	ORI  R30,HIGH(@2)
	STS  @0+(@1)+1,R30
	.ENDM

	.MACRO __ORD1N
	ORI  R30,LOW(@0)
	ORI  R31,HIGH(@0)
	ORI  R22,BYTE3(@0)
	ORI  R23,BYTE4(@0)
	.ENDM

	.MACRO __ORD2N
	ORI  R26,LOW(@0)
	ORI  R27,HIGH(@0)
	ORI  R24,BYTE3(@0)
	ORI  R25,BYTE4(@0)
	.ENDM

	.MACRO __DELAY_USB
	LDI  R24,LOW(@0)
__DELAY_USB_LOOP:
	DEC  R24
	BRNE __DELAY_USB_LOOP
	.ENDM

	.MACRO __DELAY_USW
	LDI  R24,LOW(@0)
	LDI  R25,HIGH(@0)
__DELAY_USW_LOOP:
	SBIW R24,1
	BRNE __DELAY_USW_LOOP
	.ENDM

	.MACRO __GETW1P
	LD   R30,X+
	LD   R31,X
	SBIW R26,1
	.ENDM

	.MACRO __GETD1S
	LDD  R30,Y+@0
	LDD  R31,Y+@0+1
	LDD  R22,Y+@0+2
	LDD  R23,Y+@0+3
	.ENDM

	.MACRO __GETD2S
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	LDD  R24,Y+@0+2
	LDD  R25,Y+@0+3
	.ENDM

	.MACRO __GETD1P_INC
	LD   R30,X+
	LD   R31,X+
	LD   R22,X+
	LD   R23,X+
	.ENDM

	.MACRO __GETD1P_DEC
	LD   R23,-X
	LD   R22,-X
	LD   R31,-X
	LD   R30,-X
	.ENDM

	.MACRO __PUTDP1
	ST   X+,R30
	ST   X+,R31
	ST   X+,R22
	ST   X,R23
	.ENDM

	.MACRO __PUTDP1_DEC
	ST   -X,R23
	ST   -X,R22
	ST   -X,R31
	ST   -X,R30
	.ENDM

	.MACRO __PUTD1S
	STD  Y+@0,R30
	STD  Y+@0+1,R31
	STD  Y+@0+2,R22
	STD  Y+@0+3,R23
	.ENDM

	.MACRO __PUTD2S
	STD  Y+@0,R26
	STD  Y+@0+1,R27
	STD  Y+@0+2,R24
	STD  Y+@0+3,R25
	.ENDM

	.MACRO __PUTDZ2
	STD  Z+@0,R26
	STD  Z+@0+1,R27
	STD  Z+@0+2,R24
	STD  Z+@0+3,R25
	.ENDM

	.MACRO __CLRD1S
	STD  Y+@0,R30
	STD  Y+@0+1,R30
	STD  Y+@0+2,R30
	STD  Y+@0+3,R30
	.ENDM

	.MACRO __CPD10
	SBIW R30,0
	SBCI R22,0
	SBCI R23,0
	.ENDM

	.MACRO __CPD20
	SBIW R26,0
	SBCI R24,0
	SBCI R25,0
	.ENDM

	.MACRO __ADDD12
	ADD  R30,R26
	ADC  R31,R27
	ADC  R22,R24
	ADC  R23,R25
	.ENDM

	.MACRO __ADDD21
	ADD  R26,R30
	ADC  R27,R31
	ADC  R24,R22
	ADC  R25,R23
	.ENDM

	.MACRO __SUBD12
	SUB  R30,R26
	SBC  R31,R27
	SBC  R22,R24
	SBC  R23,R25
	.ENDM

	.MACRO __SUBD21
	SUB  R26,R30
	SBC  R27,R31
	SBC  R24,R22
	SBC  R25,R23
	.ENDM

	.MACRO __ANDD12
	AND  R30,R26
	AND  R31,R27
	AND  R22,R24
	AND  R23,R25
	.ENDM

	.MACRO __ORD12
	OR   R30,R26
	OR   R31,R27
	OR   R22,R24
	OR   R23,R25
	.ENDM

	.MACRO __XORD12
	EOR  R30,R26
	EOR  R31,R27
	EOR  R22,R24
	EOR  R23,R25
	.ENDM

	.MACRO __XORD21
	EOR  R26,R30
	EOR  R27,R31
	EOR  R24,R22
	EOR  R25,R23
	.ENDM

	.MACRO __COMD1
	COM  R30
	COM  R31
	COM  R22
	COM  R23
	.ENDM

	.MACRO __MULD2_2
	LSL  R26
	ROL  R27
	ROL  R24
	ROL  R25
	.ENDM

	.MACRO __LSRD1
	LSR  R23
	ROR  R22
	ROR  R31
	ROR  R30
	.ENDM

	.MACRO __LSLD1
	LSL  R30
	ROL  R31
	ROL  R22
	ROL  R23
	.ENDM

	.MACRO __ASRB4
	ASR  R30
	ASR  R30
	ASR  R30
	ASR  R30
	.ENDM

	.MACRO __ASRW8
	MOV  R30,R31
	CLR  R31
	SBRC R30,7
	SER  R31
	.ENDM

	.MACRO __LSRD16
	MOV  R30,R22
	MOV  R31,R23
	LDI  R22,0
	LDI  R23,0
	.ENDM

	.MACRO __LSLD16
	MOV  R22,R30
	MOV  R23,R31
	LDI  R30,0
	LDI  R31,0
	.ENDM

	.MACRO __CWD1
	MOV  R22,R31
	ADD  R22,R22
	SBC  R22,R22
	MOV  R23,R22
	.ENDM

	.MACRO __CWD2
	MOV  R24,R27
	ADD  R24,R24
	SBC  R24,R24
	MOV  R25,R24
	.ENDM

	.MACRO __SETMSD1
	SER  R31
	SER  R22
	SER  R23
	.ENDM

	.MACRO __ADDW1R15
	CLR  R0
	ADD  R30,R15
	ADC  R31,R0
	.ENDM

	.MACRO __ADDW2R15
	CLR  R0
	ADD  R26,R15
	ADC  R27,R0
	.ENDM

	.MACRO __EQB12
	CP   R30,R26
	LDI  R30,1
	BREQ PC+2
	CLR  R30
	.ENDM

	.MACRO __NEB12
	CP   R30,R26
	LDI  R30,1
	BRNE PC+2
	CLR  R30
	.ENDM

	.MACRO __LEB12
	CP   R30,R26
	LDI  R30,1
	BRGE PC+2
	CLR  R30
	.ENDM

	.MACRO __GEB12
	CP   R26,R30
	LDI  R30,1
	BRGE PC+2
	CLR  R30
	.ENDM

	.MACRO __LTB12
	CP   R26,R30
	LDI  R30,1
	BRLT PC+2
	CLR  R30
	.ENDM

	.MACRO __GTB12
	CP   R30,R26
	LDI  R30,1
	BRLT PC+2
	CLR  R30
	.ENDM

	.MACRO __LEB12U
	CP   R30,R26
	LDI  R30,1
	BRSH PC+2
	CLR  R30
	.ENDM

	.MACRO __GEB12U
	CP   R26,R30
	LDI  R30,1
	BRSH PC+2
	CLR  R30
	.ENDM

	.MACRO __LTB12U
	CP   R26,R30
	LDI  R30,1
	BRLO PC+2
	CLR  R30
	.ENDM

	.MACRO __GTB12U
	CP   R30,R26
	LDI  R30,1
	BRLO PC+2
	CLR  R30
	.ENDM

	.MACRO __CPW01
	CLR  R0
	CP   R0,R30
	CPC  R0,R31
	.ENDM

	.MACRO __CPW02
	CLR  R0
	CP   R0,R26
	CPC  R0,R27
	.ENDM

	.MACRO __CPD12
	CP   R30,R26
	CPC  R31,R27
	CPC  R22,R24
	CPC  R23,R25
	.ENDM

	.MACRO __CPD21
	CP   R26,R30
	CPC  R27,R31
	CPC  R24,R22
	CPC  R25,R23
	.ENDM

	.MACRO __BSTB1
	CLT
	TST  R30
	BREQ PC+2
	SET
	.ENDM

	.MACRO __LNEGB1
	TST  R30
	LDI  R30,1
	BREQ PC+2
	CLR  R30
	.ENDM

	.MACRO __LNEGW1
	OR   R30,R31
	LDI  R30,1
	BREQ PC+2
	LDI  R30,0
	.ENDM

	.MACRO __POINTB1MN
	LDI  R30,LOW(@0+(@1))
	.ENDM

	.MACRO __POINTW1MN
	LDI  R30,LOW(@0+(@1))
	LDI  R31,HIGH(@0+(@1))
	.ENDM

	.MACRO __POINTD1M
	LDI  R30,LOW(@0)
	LDI  R31,HIGH(@0)
	LDI  R22,BYTE3(@0)
	LDI  R23,BYTE4(@0)
	.ENDM

	.MACRO __POINTW1FN
	LDI  R30,LOW(2*@0+(@1))
	LDI  R31,HIGH(2*@0+(@1))
	.ENDM

	.MACRO __POINTD1FN
	LDI  R30,LOW(2*@0+(@1))
	LDI  R31,HIGH(2*@0+(@1))
	LDI  R22,BYTE3(2*@0+(@1))
	LDI  R23,BYTE4(2*@0+(@1))
	.ENDM

	.MACRO __POINTB2MN
	LDI  R26,LOW(@0+(@1))
	.ENDM

	.MACRO __POINTW2MN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	.ENDM

	.MACRO __POINTD2M
	LDI  R26,LOW(@0)
	LDI  R27,HIGH(@0)
	LDI  R24,BYTE3(@0)
	LDI  R25,BYTE4(@0)
	.ENDM

	.MACRO __POINTW2FN
	LDI  R26,LOW(2*@0+(@1))
	LDI  R27,HIGH(2*@0+(@1))
	.ENDM

	.MACRO __POINTD2FN
	LDI  R26,LOW(2*@0+(@1))
	LDI  R27,HIGH(2*@0+(@1))
	LDI  R24,BYTE3(2*@0+(@1))
	LDI  R25,BYTE4(2*@0+(@1))
	.ENDM

	.MACRO __POINTBRM
	LDI  R@0,LOW(@1)
	.ENDM

	.MACRO __POINTWRM
	LDI  R@0,LOW(@2)
	LDI  R@1,HIGH(@2)
	.ENDM

	.MACRO __POINTBRMN
	LDI  R@0,LOW(@1+(@2))
	.ENDM

	.MACRO __POINTWRMN
	LDI  R@0,LOW(@2+(@3))
	LDI  R@1,HIGH(@2+(@3))
	.ENDM

	.MACRO __POINTWRFN
	LDI  R@0,LOW(@2*2+(@3))
	LDI  R@1,HIGH(@2*2+(@3))
	.ENDM

	.MACRO __GETD1N
	LDI  R30,LOW(@0)
	LDI  R31,HIGH(@0)
	LDI  R22,BYTE3(@0)
	LDI  R23,BYTE4(@0)
	.ENDM

	.MACRO __GETD2N
	LDI  R26,LOW(@0)
	LDI  R27,HIGH(@0)
	LDI  R24,BYTE3(@0)
	LDI  R25,BYTE4(@0)
	.ENDM

	.MACRO __GETB1MN
	LDS  R30,@0+(@1)
	.ENDM

	.MACRO __GETB1HMN
	LDS  R31,@0+(@1)
	.ENDM

	.MACRO __GETW1MN
	LDS  R30,@0+(@1)
	LDS  R31,@0+(@1)+1
	.ENDM

	.MACRO __GETD1MN
	LDS  R30,@0+(@1)
	LDS  R31,@0+(@1)+1
	LDS  R22,@0+(@1)+2
	LDS  R23,@0+(@1)+3
	.ENDM

	.MACRO __GETBRMN
	LDS  R@0,@1+(@2)
	.ENDM

	.MACRO __GETWRMN
	LDS  R@0,@2+(@3)
	LDS  R@1,@2+(@3)+1
	.ENDM

	.MACRO __GETWRZ
	LDD  R@0,Z+@2
	LDD  R@1,Z+@2+1
	.ENDM

	.MACRO __GETD2Z
	LDD  R26,Z+@0
	LDD  R27,Z+@0+1
	LDD  R24,Z+@0+2
	LDD  R25,Z+@0+3
	.ENDM

	.MACRO __GETB2MN
	LDS  R26,@0+(@1)
	.ENDM

	.MACRO __GETW2MN
	LDS  R26,@0+(@1)
	LDS  R27,@0+(@1)+1
	.ENDM

	.MACRO __GETD2MN
	LDS  R26,@0+(@1)
	LDS  R27,@0+(@1)+1
	LDS  R24,@0+(@1)+2
	LDS  R25,@0+(@1)+3
	.ENDM

	.MACRO __PUTB1MN
	STS  @0+(@1),R30
	.ENDM

	.MACRO __PUTW1MN
	STS  @0+(@1),R30
	STS  @0+(@1)+1,R31
	.ENDM

	.MACRO __PUTD1MN
	STS  @0+(@1),R30
	STS  @0+(@1)+1,R31
	STS  @0+(@1)+2,R22
	STS  @0+(@1)+3,R23
	.ENDM

	.MACRO __PUTB1EN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMWRB
	.ENDM

	.MACRO __PUTW1EN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMWRW
	.ENDM

	.MACRO __PUTD1EN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMWRD
	.ENDM

	.MACRO __PUTBR0MN
	STS  @0+(@1),R0
	.ENDM

	.MACRO __PUTBMRN
	STS  @0+(@1),R@2
	.ENDM

	.MACRO __PUTWMRN
	STS  @0+(@1),R@2
	STS  @0+(@1)+1,R@3
	.ENDM

	.MACRO __PUTBZR
	STD  Z+@1,R@0
	.ENDM

	.MACRO __PUTWZR
	STD  Z+@2,R@0
	STD  Z+@2+1,R@1
	.ENDM

	.MACRO __GETW1R
	MOV  R30,R@0
	MOV  R31,R@1
	.ENDM

	.MACRO __GETW2R
	MOV  R26,R@0
	MOV  R27,R@1
	.ENDM

	.MACRO __GETWRN
	LDI  R@0,LOW(@2)
	LDI  R@1,HIGH(@2)
	.ENDM

	.MACRO __PUTW1R
	MOV  R@0,R30
	MOV  R@1,R31
	.ENDM

	.MACRO __PUTW2R
	MOV  R@0,R26
	MOV  R@1,R27
	.ENDM

	.MACRO __ADDWRN
	SUBI R@0,LOW(-@2)
	SBCI R@1,HIGH(-@2)
	.ENDM

	.MACRO __ADDWRR
	ADD  R@0,R@2
	ADC  R@1,R@3
	.ENDM

	.MACRO __SUBWRN
	SUBI R@0,LOW(@2)
	SBCI R@1,HIGH(@2)
	.ENDM

	.MACRO __SUBWRR
	SUB  R@0,R@2
	SBC  R@1,R@3
	.ENDM

	.MACRO __ANDWRN
	ANDI R@0,LOW(@2)
	ANDI R@1,HIGH(@2)
	.ENDM

	.MACRO __ANDWRR
	AND  R@0,R@2
	AND  R@1,R@3
	.ENDM

	.MACRO __ORWRN
	ORI  R@0,LOW(@2)
	ORI  R@1,HIGH(@2)
	.ENDM

	.MACRO __ORWRR
	OR   R@0,R@2
	OR   R@1,R@3
	.ENDM

	.MACRO __EORWRR
	EOR  R@0,R@2
	EOR  R@1,R@3
	.ENDM

	.MACRO __GETWRS
	LDD  R@0,Y+@2
	LDD  R@1,Y+@2+1
	.ENDM

	.MACRO __PUTBSR
	STD  Y+@1,R@0
	.ENDM

	.MACRO __PUTWSR
	STD  Y+@2,R@0
	STD  Y+@2+1,R@1
	.ENDM

	.MACRO __MOVEWRR
	MOV  R@0,R@2
	MOV  R@1,R@3
	.ENDM

	.MACRO __INWR
	IN   R@0,@2
	IN   R@1,@2+1
	.ENDM

	.MACRO __OUTWR
	OUT  @2+1,R@1
	OUT  @2,R@0
	.ENDM

	.MACRO __CALL1MN
	LDS  R30,@0+(@1)
	LDS  R31,@0+(@1)+1
	ICALL
	.ENDM

	.MACRO __CALL1FN
	LDI  R30,LOW(2*@0+(@1))
	LDI  R31,HIGH(2*@0+(@1))
	CALL __GETW1PF
	ICALL
	.ENDM

	.MACRO __CALL2EN
	PUSH R26
	PUSH R27
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMRDW
	POP  R27
	POP  R26
	ICALL
	.ENDM

	.MACRO __CALL2EX
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	CALL __EEPROMRDD
	ICALL
	.ENDM

	.MACRO __GETW1STACK
	IN   R30,SPL
	IN   R31,SPH
	ADIW R30,@0+1
	LD   R0,Z+
	LD   R31,Z
	MOV  R30,R0
	.ENDM

	.MACRO __GETD1STACK
	IN   R30,SPL
	IN   R31,SPH
	ADIW R30,@0+1
	LD   R0,Z+
	LD   R1,Z+
	LD   R22,Z
	MOVW R30,R0
	.ENDM

	.MACRO __NBST
	BST  R@0,@1
	IN   R30,SREG
	LDI  R31,0x40
	EOR  R30,R31
	OUT  SREG,R30
	.ENDM


	.MACRO __PUTB1SN
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SN
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SN
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X+,R31
	ST   X+,R22
	ST   X,R23
	.ENDM

	.MACRO __PUTB1SNS
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	ADIW R26,@1
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SNS
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	ADIW R26,@1
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SNS
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	ADIW R26,@1
	ST   X+,R30
	ST   X+,R31
	ST   X+,R22
	ST   X,R23
	.ENDM

	.MACRO __PUTB1PMN
	LDS  R26,@0
	LDS  R27,@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1PMN
	LDS  R26,@0
	LDS  R27,@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1PMN
	LDS  R26,@0
	LDS  R27,@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X+,R31
	ST   X+,R22
	ST   X,R23
	.ENDM

	.MACRO __PUTB1PMNS
	LDS  R26,@0
	LDS  R27,@0+1
	ADIW R26,@1
	ST   X,R30
	.ENDM

	.MACRO __PUTW1PMNS
	LDS  R26,@0
	LDS  R27,@0+1
	ADIW R26,@1
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1PMNS
	LDS  R26,@0
	LDS  R27,@0+1
	ADIW R26,@1
	ST   X+,R30
	ST   X+,R31
	ST   X+,R22
	ST   X,R23
	.ENDM

	.MACRO __PUTB1RN
	MOVW R26,R@0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RN
	MOVW R26,R@0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RN
	MOVW R26,R@0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X+,R31
	ST   X+,R22
	ST   X,R23
	.ENDM

	.MACRO __PUTB1RNS
	MOVW R26,R@0
	ADIW R26,@1
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RNS
	MOVW R26,R@0
	ADIW R26,@1
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RNS
	MOVW R26,R@0
	ADIW R26,@1
	ST   X+,R30
	ST   X+,R31
	ST   X+,R22
	ST   X,R23
	.ENDM

	.MACRO __PUTB1RON
	MOV  R26,R@0
	MOV  R27,R@1
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RON
	MOV  R26,R@0
	MOV  R27,R@1
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RON
	MOV  R26,R@0
	MOV  R27,R@1
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	ST   X+,R30
	ST   X+,R31
	ST   X+,R22
	ST   X,R23
	.ENDM

	.MACRO __PUTB1RONS
	MOV  R26,R@0
	MOV  R27,R@1
	ADIW R26,@2
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RONS
	MOV  R26,R@0
	MOV  R27,R@1
	ADIW R26,@2
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RONS
	MOV  R26,R@0
	MOV  R27,R@1
	ADIW R26,@2
	ST   X+,R30
	ST   X+,R31
	ST   X+,R22
	ST   X,R23
	.ENDM


	.MACRO __GETB1SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R30,Z
	.ENDM

	.MACRO __GETB1HSX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R31,Z
	.ENDM

	.MACRO __GETW1SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	CALL __GETW1Z
	.ENDM

	.MACRO __GETD1SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	CALL __GETD1Z
	.ENDM

	.MACRO __GETB2SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R26,X
	.ENDM

	.MACRO __GETW2SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	CALL __GETW2X
	.ENDM

	.MACRO __GETD2SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	CALL __GETD2X
	.ENDM

	.MACRO __GETBRSX
	MOVW R30,R28
	SUBI R30,LOW(-@1)
	SBCI R31,HIGH(-@1)
	LD   R@0,Z
	.ENDM

	.MACRO __GETWRSX
	MOVW R30,R28
	SUBI R30,LOW(-@2)
	SBCI R31,HIGH(-@2)
	LD   R@0,Z+
	LD   R@1,Z
	.ENDM

	.MACRO __GETBRSX2
	MOVW R26,R28
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	LD   R@0,X
	.ENDM

	.MACRO __GETWRSX2
	MOVW R26,R28
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	LD   R@0,X+
	LD   R@1,X
	.ENDM

	.MACRO __LSLW8SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R31,Z
	CLR  R30
	.ENDM

	.MACRO __PUTB1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X+,R31
	ST   X+,R22
	ST   X,R23
	.ENDM

	.MACRO __CLRW1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X,R30
	.ENDM

	.MACRO __CLRD1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X+,R30
	ST   X+,R30
	ST   X,R30
	.ENDM

	.MACRO __PUTB2SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	ST   Z,R26
	.ENDM

	.MACRO __PUTW2SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	ST   Z+,R26
	ST   Z,R27
	.ENDM

	.MACRO __PUTD2SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	ST   Z+,R26
	ST   Z+,R27
	ST   Z+,R24
	ST   Z,R25
	.ENDM

	.MACRO __PUTBSRX
	MOVW R30,R28
	SUBI R30,LOW(-@1)
	SBCI R31,HIGH(-@1)
	ST   Z,R@0
	.ENDM

	.MACRO __PUTWSRX
	MOVW R30,R28
	SUBI R30,LOW(-@2)
	SBCI R31,HIGH(-@2)
	ST   Z+,R@0
	ST   Z,R@1
	.ENDM

	.MACRO __PUTB1SNX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R27,X
	MOV  R26,R0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SNX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R27,X
	MOV  R26,R0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SNX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R27,X
	MOV  R26,R0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X+,R31
	ST   X+,R22
	ST   X,R23
	.ENDM

	.MACRO __MULBRR
	MULS R@0,R@1
	MOVW R30,R0
	.ENDM

	.MACRO __MULBRRU
	MUL  R@0,R@1
	MOVW R30,R0
	.ENDM

	.MACRO __MULBRR0
	MULS R@0,R@1
	.ENDM

	.MACRO __MULBRRU0
	MUL  R@0,R@1
	.ENDM

	.MACRO __MULBNWRU
	LDI  R26,@2
	MUL  R26,R@0
	MOVW R30,R0
	MUL  R26,R@1
	ADD  R31,R0
	.ENDM

;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
	.DEF __lcd_x=R5
	.DEF __lcd_y=R4
	.DEF __lcd_maxx=R7

	.CSEG
	.ORG 0x00

;START OF CODE MARKER
__START_OF_CODE:

;INTERRUPT VECTORS
	JMP  __RESET
	JMP  _admin
	JMP  _setPC
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00

_tbl10_G102:
	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
	.DB  0x1,0x0
_tbl16_G102:
	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0

_0x16:
	.DB  0x50,0x72,0x6F,0x66,0x0,0x0,0x31,0x31
	.DB  0x31,0x0,0x32,0x30,0x33,0x0,0x41,0x68
	.DB  0x6D,0x65,0x64,0x0,0x31,0x32,0x36,0x0
	.DB  0x31,0x32,0x39,0x0,0x41,0x6D,0x72,0x0
	.DB  0x0,0x0,0x31,0x32,0x38,0x0,0x33,0x32
	.DB  0x35,0x0,0x41,0x64,0x65,0x6C,0x0,0x0
	.DB  0x31,0x33,0x30,0x0,0x34,0x32,0x36,0x0
	.DB  0x4F,0x6D,0x65,0x72,0x0,0x0,0x31,0x33
	.DB  0x32,0x0,0x30,0x37,0x39
_0x0:
	.DB  0x50,0x72,0x6F,0x66,0x0,0x45,0x6E,0x74
	.DB  0x65,0x72,0x20,0x41,0x64,0x6D,0x69,0x6E
	.DB  0x20,0x50,0x43,0x3A,0x20,0x0,0x45,0x6E
	.DB  0x74,0x65,0x72,0x20,0x53,0x74,0x75,0x64
	.DB  0x65,0x6E,0x74,0x20,0x49,0x44,0x3A,0x20
	.DB  0x0,0x45,0x6E,0x74,0x65,0x72,0x20,0x73
	.DB  0x74,0x75,0x64,0x65,0x6E,0x74,0x27,0x73
	.DB  0x20,0x6E,0x65,0x77,0x20,0x50,0x43,0x3A
	.DB  0x20,0x0,0x53,0x74,0x75,0x64,0x65,0x6E
	.DB  0x74,0x20,0x50,0x43,0x20,0x69,0x73,0x20
	.DB  0x73,0x74,0x6F,0x72,0x65,0x64,0x0,0x45
	.DB  0x6E,0x74,0x65,0x72,0x20,0x79,0x6F,0x75
	.DB  0x72,0x20,0x6E,0x65,0x77,0x20,0x50,0x43
	.DB  0x3A,0x20,0x0,0x59,0x6F,0x75,0x72,0x20
	.DB  0x50,0x43,0x20,0x69,0x73,0x20,0x73,0x74
	.DB  0x6F,0x72,0x65,0x64,0x0,0x43,0x6F,0x6E
	.DB  0x74,0x61,0x63,0x74,0x20,0x41,0x64,0x6D
	.DB  0x69,0x6E,0x0,0x45,0x6E,0x74,0x65,0x72
	.DB  0x20,0x79,0x6F,0x75,0x72,0x20,0x49,0x44
	.DB  0x3A,0x0,0x45,0x6E,0x74,0x65,0x72,0x20
	.DB  0x6F,0x6C,0x64,0x20,0x50,0x43,0x3A,0x0
	.DB  0x45,0x6E,0x74,0x65,0x72,0x20,0x6E,0x65
	.DB  0x77,0x20,0x50,0x43,0x3A,0x0,0x52,0x65
	.DB  0x2D,0x65,0x6E,0x74,0x65,0x72,0x20,0x6E
	.DB  0x65,0x77,0x20,0x50,0x43,0x3A,0x0,0x4E
	.DB  0x65,0x77,0x20,0x50,0x43,0x20,0x73,0x74
	.DB  0x6F,0x72,0x65,0x64,0x0,0x4E,0x65,0x77
	.DB  0x20,0x50,0x43,0x20,0x6D,0x69,0x73,0x6D
	.DB  0x61,0x74,0x63,0x68,0x2C,0x20,0x43,0x6F
	.DB  0x6E,0x74,0x61,0x63,0x74,0x20,0x61,0x64
	.DB  0x6D,0x69,0x6E,0x0,0x57,0x72,0x6F,0x6E
	.DB  0x67,0x20,0x6F,0x6C,0x64,0x20,0x50,0x43
	.DB  0x2C,0x20,0x20,0x20,0x43,0x6F,0x6E,0x74
	.DB  0x61,0x63,0x74,0x20,0x61,0x64,0x6D,0x69
	.DB  0x6E,0x0,0x57,0x72,0x6F,0x6E,0x67,0x20
	.DB  0x49,0x44,0x0,0x45,0x6E,0x74,0x65,0x72
	.DB  0x20,0x79,0x6F,0x75,0x72,0x20,0x49,0x44
	.DB  0x3A,0x20,0x0,0x45,0x6E,0x74,0x65,0x72
	.DB  0x20,0x79,0x6F,0x75,0x72,0x20,0x50,0x43
	.DB  0x3A,0x20,0x0,0x57,0x65,0x6C,0x63,0x6F
	.DB  0x6D,0x65,0x2C,0x20,0x0,0x53,0x6F,0x72
	.DB  0x72,0x79,0x20,0x77,0x72,0x6F,0x6E,0x67
	.DB  0x20,0x50,0x43,0x0
_0x2000003:
	.DB  0x80,0xC0

__GLOBAL_INI_TBL:
	.DW  0x45
	.DW  _users
	.DW  _0x16*2

	.DW  0x05
	.DW  _0x8E
	.DW  _0x0*2

	.DW  0x11
	.DW  _0x8E+5
	.DW  _0x0*2+5

	.DW  0x13
	.DW  _0x8E+22
	.DW  _0x0*2+22

	.DW  0x19
	.DW  _0x8E+41
	.DW  _0x0*2+41

	.DW  0x15
	.DW  _0x8E+66
	.DW  _0x0*2+66

	.DW  0x14
	.DW  _0x8E+87
	.DW  _0x0*2+87

	.DW  0x12
	.DW  _0x8E+107
	.DW  _0x0*2+107

	.DW  0x0E
	.DW  _0x8E+125
	.DW  _0x0*2+125

	.DW  0x0F
	.DW  _0x9B
	.DW  _0x0*2+139

	.DW  0x0E
	.DW  _0x9B+15
	.DW  _0x0*2+154

	.DW  0x0E
	.DW  _0x9B+29
	.DW  _0x0*2+168

	.DW  0x11
	.DW  _0x9B+43
	.DW  _0x0*2+182

	.DW  0x0E
	.DW  _0x9B+60
	.DW  _0x0*2+199

	.DW  0x1F
	.DW  _0x9B+74
	.DW  _0x0*2+213

	.DW  0x1E
	.DW  _0x9B+105
	.DW  _0x0*2+244

	.DW  0x09
	.DW  _0x9B+135
	.DW  _0x0*2+274

	.DW  0x10
	.DW  _0xA7
	.DW  _0x0*2+283

	.DW  0x10
	.DW  _0xA7+16
	.DW  _0x0*2+299

	.DW  0x0A
	.DW  _0xA7+32
	.DW  _0x0*2+315

	.DW  0x0F
	.DW  _0xA7+42
	.DW  _0x0*2+325

	.DW  0x09
	.DW  _0xA7+57
	.DW  _0x0*2+274

	.DW  0x02
	.DW  __base_y_G100
	.DW  _0x2000003*2

_0xFFFFFFFF:
	.DW  0

#define __GLOBAL_INI_TBL_PRESENT 1

__RESET:
	CLI

	CLR  R30
	OUT  EECR,R30

;INTERRUPT VECTORS ARE PLACED
;AT THE START OF FLASH
	LDI  R31,1
	OUT  GICR,R31
	OUT  GICR,R30
	OUT  MCUCR,R30

;CLEAR R2-R14
	LDI  R24,(14-2)+1
	LDI  R26,2
	CLR  R27
__CLEAR_REG:
	ST   X+,R30
	DEC  R24
	BRNE __CLEAR_REG

;CLEAR SRAM
	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
	LDI  R26,__SRAM_START
__CLEAR_SRAM:
	ST   X+,R30
	SBIW R24,1
	BRNE __CLEAR_SRAM

;GLOBAL VARIABLES INITIALIZATION
	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
__GLOBAL_INI_NEXT:
	LPM  R24,Z+
	LPM  R25,Z+
	SBIW R24,0
	BREQ __GLOBAL_INI_END
	LPM  R26,Z+
	LPM  R27,Z+
	LPM  R0,Z+
	LPM  R1,Z+
	MOVW R22,R30
	MOVW R30,R0
__GLOBAL_INI_LOOP:
	LPM  R0,Z+
	ST   X+,R0
	SBIW R24,1
	BRNE __GLOBAL_INI_LOOP
	MOVW R30,R22
	RJMP __GLOBAL_INI_NEXT
__GLOBAL_INI_END:

;HARDWARE STACK POINTER INITIALIZATION
	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
	OUT  SPL,R30
	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
	OUT  SPH,R30

;DATA STACK POINTER INITIALIZATION
	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)

	JMP  _main

	.ESEG
	.ORG 0x00

	.DSEG
	.ORG 0x160

	.CSEG
	#ifndef __SLEEP_DEFINED__
	#define __SLEEP_DEFINED__
	.EQU __se_bit=0x40
	.EQU __sm_mask=0xB0
	.EQU __sm_powerdown=0x20
	.EQU __sm_powersave=0x30
	.EQU __sm_standby=0xA0
	.EQU __sm_ext_standby=0xB0
	.EQU __sm_adc_noise_red=0x10
	.SET power_ctrl_reg=mcucr
	#endif

	.CSEG
_EE_Read:
; .FSTART _EE_Read
	ST   -Y,R17
	ST   -Y,R16
	MOVW R16,R26
;	address -> R16,R17
_0x3:
	SBIC 0x1C,1
	RJMP _0x3
	__OUTWR 16,17,30
	SBI  0x1C,0
	IN   R30,0x1D
	LD   R16,Y+
	LD   R17,Y+
	RET
; .FEND
_EE_Write:
; .FSTART _EE_Write
	RCALL __SAVELOCR4
	MOV  R17,R26
	__GETWRS 18,19,4
;	address -> R18,R19
;	data -> R17
_0x8:
	SBIC 0x1C,1
	RJMP _0x8
	__OUTWR 18,19,30
	OUT  0x1D,R17
	SBI  0x1C,2
	SBI  0x1C,1
	RJMP _0x2080004
; .FEND
_EE_WriteString:
; .FSTART _EE_WriteString
	RCALL SUBOPT_0x0
;	address -> R18,R19
;	*str -> R16,R17
_0xF:
	MOVW R26,R16
	LD   R30,X
	CPI  R30,0
	BREQ _0x11
	MOVW R30,R18
	__ADDWRN 18,19,1
	ST   -Y,R31
	ST   -Y,R30
	__ADDWRN 16,17,1
	LD   R26,X
	RCALL _EE_Write
	RJMP _0xF
_0x11:
	ST   -Y,R19
	ST   -Y,R18
	LDI  R26,LOW(0)
	RCALL _EE_Write
	RJMP _0x2080004
; .FEND
_EE_ReadString:
; .FSTART _EE_ReadString
	RCALL __SAVELOCR6
	MOVW R18,R26
	__GETWRS 20,21,6
;	address -> Y+8
;	*buffer -> R20,R21
;	length -> R18,R19
;	i -> R16,R17
	__GETWRN 16,17,0
_0x13:
	__CPWRR 16,17,18,19
	BRSH _0x14
	MOVW R30,R16
	ADD  R30,R20
	ADC  R31,R21
	PUSH R31
	PUSH R30
	LDD  R26,Y+8
	LDD  R27,Y+8+1
	ADD  R26,R16
	ADC  R27,R17
	RCALL _EE_Read
	POP  R26
	POP  R27
	ST   X,R30
	MOVW R30,R16
	ADD  R30,R20
	ADC  R31,R21
	LD   R30,Z
	CPI  R30,0
	BREQ _0x14
	__ADDWRN 16,17,1
	RJMP _0x13
_0x14:
	RCALL __LOADLOCR6
	ADIW R28,10
	RET
; .FEND

	.DSEG

	.CSEG
_initializeHardware:
; .FSTART _initializeHardware
	RCALL _initializeKeypad
	LDI  R26,LOW(16)
	RCALL _lcd_init
	RCALL _initializeDoor
	RCALL _initializeSpeaker
	RET
; .FEND
_initializeKeypad:
; .FSTART _initializeKeypad
	LDI  R30,LOW(7)
	OUT  0x14,R30
	LDI  R30,LOW(248)
	OUT  0x15,R30
	RET
; .FEND
_keypad:
; .FSTART _keypad
_0x17:
	CBI  0x15,0
	SBI  0x15,1
	SBI  0x15,2
	IN   R30,0x13
	CPI  R30,LOW(0xF6)
	BRNE _0x23
_0x24:
	SBIS 0x13,3
	RJMP _0x24
	LDI  R30,LOW(1)
	RET
_0x23:
	CPI  R30,LOW(0xEE)
	BRNE _0x27
_0x28:
	SBIS 0x13,4
	RJMP _0x28
	LDI  R30,LOW(4)
	RET
_0x27:
	CPI  R30,LOW(0xDE)
	BRNE _0x2B
_0x2C:
	SBIS 0x13,5
	RJMP _0x2C
	LDI  R30,LOW(7)
	RET
_0x2B:
	CPI  R30,LOW(0xBE)
	BRNE _0x22
_0x30:
	SBIS 0x13,6
	RJMP _0x30
	LDI  R30,LOW(10)
	RET
_0x22:
	SBI  0x15,0
	CBI  0x15,1
	SBI  0x15,2
	IN   R30,0x13
	CPI  R30,LOW(0xF5)
	BRNE _0x3C
_0x3D:
	SBIS 0x13,3
	RJMP _0x3D
	LDI  R30,LOW(2)
	RET
_0x3C:
	CPI  R30,LOW(0xED)
	BRNE _0x40
_0x41:
	SBIS 0x13,4
	RJMP _0x41
	LDI  R30,LOW(5)
	RET
_0x40:
	CPI  R30,LOW(0xDD)
	BRNE _0x44
_0x45:
	SBIS 0x13,5
	RJMP _0x45
	LDI  R30,LOW(8)
	RET
_0x44:
	CPI  R30,LOW(0xBD)
	BRNE _0x3B
_0x49:
	SBIS 0x13,6
	RJMP _0x49
	LDI  R30,LOW(0)
	RET
_0x3B:
	SBI  0x15,0
	SBI  0x15,1
	CBI  0x15,2
	IN   R30,0x13
	CPI  R30,LOW(0xF3)
	BRNE _0x55
_0x56:
	SBIS 0x13,3
	RJMP _0x56
	LDI  R30,LOW(3)
	RET
_0x55:
	CPI  R30,LOW(0xEB)
	BRNE _0x59
_0x5A:
	SBIS 0x13,4
	RJMP _0x5A
	LDI  R30,LOW(6)
	RET
_0x59:
	CPI  R30,LOW(0xDB)
	BRNE _0x5D
_0x5E:
	SBIS 0x13,5
	RJMP _0x5E
	LDI  R30,LOW(9)
	RET
_0x5D:
	CPI  R30,LOW(0xBB)
	BRNE _0x54
_0x62:
	SBIS 0x13,6
	RJMP _0x62
	LDI  R30,LOW(11)
	RET
_0x54:
	RJMP _0x17
; .FEND
_initializeDoor:
; .FSTART _initializeDoor
	IN   R30,0x17
	ORI  R30,LOW(0x18)
	OUT  0x17,R30
	SBI  0x17,0
	RET
; .FEND
_initializeSpeaker:
; .FSTART _initializeSpeaker
	SBI  0x11,7
	RJMP _0x2080003
; .FEND
_initializeIntrrupts:
; .FSTART _initializeIntrrupts
	CBI  0x17,2
	SBI  0x18,2
	IN   R30,0x34
	ORI  R30,0x40
	OUT  0x34,R30
	CBI  0x11,2
	SBI  0x12,2
	IN   R30,0x35
	ORI  R30,2
	OUT  0x35,R30
	IN   R30,0x35
	ANDI R30,0xFE
	OUT  0x35,R30
	IN   R30,0x35
	ORI  R30,8
	OUT  0x35,R30
	IN   R30,0x35
	ANDI R30,0xFB
	OUT  0x35,R30
	CBI  0x11,3
	SBI  0x12,3
	SEI
	IN   R30,0x3B
	ORI  R30,0x80
	OUT  0x3B,R30
	IN   R30,0x3B
	ORI  R30,0x20
	OUT  0x3B,R30
	IN   R30,0x3B
	ORI  R30,0x40
	OUT  0x3B,R30
	RET
; .FEND
_initializeUsers:
; .FSTART _initializeUsers
	RCALL __SAVELOCR4
;	address -> R16,R17
;	i -> R18,R19
	RCALL SUBOPT_0x1
_0x76:
	__CPWRN 18,19,5
	BRGE _0x77
	RCALL SUBOPT_0x2
	SUBI R30,LOW(-_users)
	SBCI R31,HIGH(-_users)
	MOVW R26,R30
	RCALL _EE_WriteString
	__ADDWRN 16,17,6
	RCALL SUBOPT_0x2
	__ADDW1MN _users,6
	RCALL SUBOPT_0x3
	RCALL SUBOPT_0x2
	__ADDW1MN _users,10
	RCALL SUBOPT_0x3
	__ADDWRN 18,19,1
	RJMP _0x76
_0x77:
	JMP  _0x2080002
; .FEND
_displayMessage:
; .FSTART _displayMessage
	RCALL SUBOPT_0x0
;	*message -> R18,R19
;	delay_ms_value -> R16,R17
	RCALL _lcd_clear
	MOVW R26,R18
	RCALL _lcd_puts
	MOVW R26,R16
	RCALL _delay_ms
_0x2080004:
	RCALL __LOADLOCR4
	ADIW R28,6
	RET
; .FEND
_enterValueWithKeypad:
; .FSTART _enterValueWithKeypad
	SBIW R28,6
	ST   -Y,R17
	ST   -Y,R16
	MOVW R16,R26
;	*buffer -> R16,R17
;	buffer2 -> Y+2
	RCALL _keypad
	LDI  R31,0
	STD  Y+2,R30
	STD  Y+2+1,R31
	LDD  R26,Y+2
	LDD  R27,Y+2+1
	SBIW R26,10
	BRNE _0x78
	LDI  R26,LOW(42)
	RJMP _0xB6
_0x78:
	LDD  R26,Y+2
	LDD  R27,Y+2+1
	SBIW R26,11
	BRNE _0x7A
	LDI  R26,LOW(35)
	RJMP _0xB6
_0x7A:
	LDD  R26,Y+2
	SUBI R26,-LOW(48)
_0xB6:
	RCALL _lcd_putchar
	RCALL _keypad
	LDI  R31,0
	STD  Y+4,R30
	STD  Y+4+1,R31
	LDD  R26,Y+4
	LDD  R27,Y+4+1
	SBIW R26,10
	BRNE _0x7C
	LDI  R26,LOW(42)
	RJMP _0xB7
_0x7C:
	LDD  R26,Y+4
	LDD  R27,Y+4+1
	SBIW R26,11
	BRNE _0x7E
	LDI  R26,LOW(35)
	RJMP _0xB7
_0x7E:
	LDD  R26,Y+4
	SUBI R26,-LOW(48)
_0xB7:
	RCALL _lcd_putchar
	RCALL _keypad
	LDI  R31,0
	STD  Y+6,R30
	STD  Y+6+1,R31
	LDD  R26,Y+6
	LDD  R27,Y+6+1
	SBIW R26,10
	BRNE _0x80
	LDI  R26,LOW(42)
	RJMP _0xB8
_0x80:
	LDD  R26,Y+6
	LDD  R27,Y+6+1
	SBIW R26,11
	BRNE _0x82
	LDI  R26,LOW(35)
	RJMP _0xB8
_0x82:
	LDD  R26,Y+6
	SUBI R26,-LOW(48)
_0xB8:
	RCALL _lcd_putchar
	LDD  R30,Y+2
	SUBI R30,-LOW(48)
	MOVW R26,R16
	ST   X,R30
	LDD  R30,Y+4
	SUBI R30,-LOW(48)
	__PUTB1RNS 16,1
	LDD  R30,Y+6
	SUBI R30,-LOW(48)
	__PUTB1RNS 16,2
	MOVW R30,R16
	ADIW R30,3
	LDI  R26,LOW(0)
	STD  Z+0,R26
	LDI  R26,LOW(1000)
	LDI  R27,HIGH(1000)
	RCALL _delay_ms
	LDI  R30,LOW(1)
	LDI  R31,HIGH(1)
	LDD  R17,Y+1
	LDD  R16,Y+0
	ADIW R28,8
	RET
; .FEND
_generateTone:
; .FSTART _generateTone
	SBI  0x12,7
	LDI  R26,LOW(500)
	LDI  R27,HIGH(500)
	RCALL _delay_ms
	CBI  0x12,7
	LDI  R26,LOW(500)
	LDI  R27,HIGH(500)
	RCALL _delay_ms
_0x2080003:
	SBI  0x12,7
	RET
; .FEND
_openDoor:
; .FSTART _openDoor
	SBI  0x18,0
	CBI  0x18,3
	RCALL SUBOPT_0x4
	RET
; .FEND
_closeDoor:
; .FSTART _closeDoor
	CBI  0x18,0
	SBI  0x18,3
	RCALL SUBOPT_0x4
	CBI  0x18,3
	SBI  0x18,3
	LDI  R26,LOW(500)
	LDI  R27,HIGH(500)
	RCALL _delay_ms
	CBI  0x18,3
	RET
; .FEND
_adminMode:
; .FSTART _adminMode
	SBIW R28,42
	RCALL __SAVELOCR6
;	enteredPC -> Y+44
;	enteredStudentID -> Y+40
;	enteredNewPC -> Y+36
;	student -> Y+22
;	admin -> Y+8
;	adminPCAddress -> R16,R17
;	address -> R18,R19
;	userFound -> R20,R21
;	i -> Y+6
	RCALL SUBOPT_0x1
	__GETWRN 20,21,0
	LDI  R30,LOW(0)
	STD  Y+6,R30
	STD  Y+6+1,R30
_0x8B:
	LDD  R26,Y+6
	LDD  R27,Y+6+1
	SBIW R26,5
	BRGE _0x8C
	ST   -Y,R19
	ST   -Y,R18
	MOVW R30,R28
	ADIW R30,10
	RCALL SUBOPT_0x5
	MOVW R30,R28
	ADIW R30,8
	ST   -Y,R31
	ST   -Y,R30
	__POINTW2MN _0x8E,0
	RCALL _strcmp
	CPI  R30,0
	BRNE _0x8D
	RCALL SUBOPT_0x6
	RCALL SUBOPT_0x7
	RCALL SUBOPT_0x8
	ST   -Y,R19
	ST   -Y,R18
	RCALL SUBOPT_0x9
	LDI  R26,LOW(4)
	LDI  R27,0
	RCALL _EE_ReadString
	MOVW R16,R18
	RJMP _0x8C
_0x8D:
	__ADDWRN 18,19,4
	LDD  R30,Y+6
	LDD  R31,Y+6+1
	ADIW R30,1
	STD  Y+6,R30
	STD  Y+6+1,R31
	RJMP _0x8B
_0x8C:
	__GETWRN 18,19,0
	__POINTW1MN _0x8E,5
	RCALL SUBOPT_0xA
	RCALL SUBOPT_0xB
	MOVW R26,R28
	ADIW R26,44
	RCALL _enterValueWithKeypad
	SBIW R30,0
	BRNE PC+2
	RJMP _0x8F
	RCALL SUBOPT_0xC
	MOVW R26,R28
	ADIW R26,46
	RCALL _strcmp
	CPI  R30,0
	BREQ PC+2
	RJMP _0x90
	__POINTW1MN _0x8E,22
	RCALL SUBOPT_0xA
	MOVW R26,R28
	ADIW R26,40
	RCALL _enterValueWithKeypad
	SBIW R30,0
	BREQ _0x91
	SBIW R28,2
;	enteredPC -> Y+46
;	enteredStudentID -> Y+42
;	enteredNewPC -> Y+38
;	student -> Y+24
;	admin -> Y+10
;	i -> Y+8
;	j -> Y+0
	LDI  R30,LOW(0)
	STD  Y+0,R30
	STD  Y+0+1,R30
_0x93:
	LD   R26,Y
	LDD  R27,Y+1
	SBIW R26,5
	BRGE _0x94
	RCALL SUBOPT_0x6
	MOVW R30,R28
	ADIW R30,32
	ST   -Y,R31
	ST   -Y,R30
	RCALL SUBOPT_0x8
	MOVW R30,R28
	ADIW R30,30
	ST   -Y,R31
	ST   -Y,R30
	RCALL SUBOPT_0xD
	BRNE _0x95
	__POINTW1MN _0x8E,41
	RCALL SUBOPT_0xA
	RCALL SUBOPT_0xE
	BREQ _0x96
	ST   -Y,R19
	ST   -Y,R18
	MOVW R26,R28
	ADIW R26,40
	RCALL _EE_WriteString
	__POINTW1MN _0x8E,66
	RCALL SUBOPT_0xF
	RJMP _0x94
_0x96:
	RJMP _0x97
_0x95:
	RCALL SUBOPT_0x7
	RCALL SUBOPT_0xD
	BRNE _0x98
	__POINTW1MN _0x8E,87
	RCALL SUBOPT_0xA
	RCALL SUBOPT_0xB
	RCALL SUBOPT_0xE
	BREQ _0x99
	ST   -Y,R17
	ST   -Y,R16
	MOVW R26,R28
	ADIW R26,40
	RCALL _EE_WriteString
	__POINTW1MN _0x8E,107
	RCALL SUBOPT_0xF
	RJMP _0x94
_0x99:
_0x98:
_0x97:
	__ADDWRN 18,19,4
	LD   R30,Y
	LDD  R31,Y+1
	ADIW R30,1
	ST   Y,R30
	STD  Y+1,R31
	RJMP _0x93
_0x94:
	ADIW R28,2
_0x91:
_0x90:
_0x8F:
	MOV  R0,R20
	OR   R0,R21
	BRNE _0x9A
	__POINTW1MN _0x8E,125
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(3000)
	LDI  R27,HIGH(3000)
	RCALL _displayMessage
	RCALL _generateTone
	RCALL _generateTone
_0x9A:
	RCALL SUBOPT_0x10
	RCALL __LOADLOCR6
	ADIW R28,48
	RET
; .FEND

	.DSEG
_0x8E:
	.BYTE 0x8B

	.CSEG
_setPCMode:
; .FSTART _setPCMode
	SBIW R28,29
	RCALL __SAVELOCR6
;	enteredID -> Y+30
;	currentUser -> Y+16
;	address -> R16,R17
;	userFound -> R18,R19
;	i -> R20,R21
;	enteredNewPC -> Y+11
;	reenteredNewPC -> Y+6
	RCALL SUBOPT_0x1
	RCALL _lcd_clear
	__POINTW1MN _0x9B,0
	RCALL SUBOPT_0xA
	RCALL SUBOPT_0xB
	MOVW R26,R28
	ADIW R26,30
	RCALL _enterValueWithKeypad
	SBIW R30,0
	BRNE PC+2
	RJMP _0x9C
	SBIW R28,5
;	enteredID -> Y+35
;	currentUser -> Y+21
;	enteredNewPC -> Y+16
;	reenteredNewPC -> Y+11
;	enteredOldPC -> Y+0
	__GETWRN 20,21,0
_0x9E:
	__CPWRN 20,21,5
	BRLT PC+2
	RJMP _0x9F
	RCALL SUBOPT_0x11
	MOVW R30,R28
	ADIW R30,29
	RCALL SUBOPT_0x12
	MOVW R30,R28
	ADIW R30,27
	ST   -Y,R31
	ST   -Y,R30
	MOVW R26,R28
	ADIW R26,37
	RCALL _strcmp
	CPI  R30,0
	BRNE _0xA0
	RCALL SUBOPT_0x13
	MOVW R30,R28
	ADIW R30,33
	RCALL SUBOPT_0x12
	__POINTW1MN _0x9B,15
	RCALL SUBOPT_0xA
	RCALL SUBOPT_0xB
	RCALL SUBOPT_0x14
	BREQ _0xA1
	MOVW R30,R28
	ADIW R30,31
	ST   -Y,R31
	ST   -Y,R30
	RCALL SUBOPT_0x15
	BRNE _0xA2
	__POINTW1MN _0x9B,29
	RCALL SUBOPT_0xA
	RCALL SUBOPT_0xB
	MOVW R26,R28
	ADIW R26,16
	RCALL _enterValueWithKeypad
	RCALL _lcd_clear
	__POINTW1MN _0x9B,43
	RCALL SUBOPT_0xA
	RCALL SUBOPT_0xB
	MOVW R26,R28
	ADIW R26,11
	RCALL _enterValueWithKeypad
	RCALL SUBOPT_0x7
	MOVW R26,R28
	ADIW R26,13
	RCALL _strcmp
	CPI  R30,0
	BRNE _0xA3
	ST   -Y,R17
	ST   -Y,R16
	MOVW R26,R28
	ADIW R26,18
	RCALL _EE_WriteString
	__POINTW1MN _0x9B,60
	RCALL SUBOPT_0xA
	RJMP _0xA4
_0xA3:
	__POINTW1MN _0x9B,74
	RCALL SUBOPT_0xA
	RCALL _generateTone
	RCALL _generateTone
_0xA4:
	RJMP _0xA5
_0xA2:
	__POINTW1MN _0x9B,105
	RCALL SUBOPT_0xA
	RCALL _generateTone
	RCALL _generateTone
_0xA5:
_0xA1:
	__GETWRN 18,19,1
	RJMP _0x9F
_0xA0:
	RCALL SUBOPT_0x16
	__ADDWRN 20,21,1
	RJMP _0x9E
_0x9F:
	MOV  R0,R18
	OR   R0,R19
	BRNE _0xA6
	__POINTW1MN _0x9B,135
	RCALL SUBOPT_0xA
	RCALL _generateTone
	RCALL _generateTone
_0xA6:
	RCALL SUBOPT_0x10
	ADIW R28,5
_0x9C:
	RCALL __LOADLOCR6
	ADIW R28,35
	RET
; .FEND

	.DSEG
_0x9B:
	.BYTE 0x90

	.CSEG
_openCloseDoorMode:
; .FSTART _openCloseDoorMode
	SBIW R28,18
	RCALL __SAVELOCR6
;	enteredID -> Y+20
;	currentUser -> Y+6
;	address -> R16,R17
;	userFound -> R18,R19
;	i -> R20,R21
	RCALL SUBOPT_0x1
	__POINTW1MN _0xA7,0
	RCALL SUBOPT_0xA
	RCALL SUBOPT_0xB
	MOVW R26,R28
	ADIW R26,20
	RCALL _enterValueWithKeypad
	SBIW R30,0
	BRNE PC+2
	RJMP _0xA8
	SBIW R28,4
;	enteredID -> Y+24
;	currentUser -> Y+10
;	enteredPC -> Y+0
	__GETWRN 20,21,0
_0xAA:
	__CPWRN 20,21,5
	BRGE _0xAB
	ST   -Y,R17
	ST   -Y,R16
	MOVW R30,R28
	ADIW R30,12
	RCALL SUBOPT_0x5
	RCALL SUBOPT_0x11
	RCALL SUBOPT_0xC
	LDI  R26,LOW(4)
	LDI  R27,0
	RCALL _EE_ReadString
	RCALL SUBOPT_0x7
	MOVW R26,R28
	ADIW R26,26
	RCALL _strcmp
	CPI  R30,0
	BRNE _0xAC
	RCALL SUBOPT_0x13
	MOVW R30,R28
	ADIW R30,22
	RCALL SUBOPT_0x12
	__POINTW1MN _0xA7,16
	RCALL SUBOPT_0xA
	RCALL SUBOPT_0xB
	RCALL SUBOPT_0x14
	BREQ _0xAD
	RCALL SUBOPT_0x9
	RCALL SUBOPT_0x15
	BRNE _0xAE
	RCALL _lcd_clear
	__POINTW2MN _0xA7,32
	RCALL _lcd_puts
	MOVW R26,R28
	ADIW R26,10
	RCALL _lcd_puts
	RCALL _openDoor
	LDI  R26,LOW(2000)
	LDI  R27,HIGH(2000)
	RCALL _delay_ms
	RCALL _closeDoor
	LDI  R26,LOW(2000)
	LDI  R27,HIGH(2000)
	RCALL _delay_ms
	RJMP _0xAF
_0xAE:
	__POINTW1MN _0xA7,42
	RCALL SUBOPT_0xA
	RCALL _generateTone
_0xAF:
_0xAD:
	__GETWRN 18,19,1
	RJMP _0xAB
_0xAC:
	RCALL SUBOPT_0x16
	__ADDWRN 20,21,1
	RJMP _0xAA
_0xAB:
	ADIW R28,4
_0xA8:
	MOV  R0,R18
	OR   R0,R19
	BRNE _0xB0
	__POINTW1MN _0xA7,57
	RCALL SUBOPT_0xA
	RCALL _generateTone
	RCALL _generateTone
_0xB0:
	RCALL _lcd_clear
	RCALL __LOADLOCR6
	ADIW R28,24
	RET
; .FEND

	.DSEG
_0xA7:
	.BYTE 0x42
;void main(void)
; 0000 000C {

	.CSEG
_main:
; .FSTART _main
; 0000 000D char input;
; 0000 000E 
; 0000 000F // Initialize Hardware
; 0000 0010 initializeHardware();
;	input -> R17
	RCALL _initializeHardware
; 0000 0011 
; 0000 0012 // Initialize user data in EEPROM
; 0000 0013 initializeUsers();
	RCALL _initializeUsers
; 0000 0014 
; 0000 0015 // Initialize interrupts for various modes
; 0000 0016 initializeIntrrupts();
	RCALL _initializeIntrrupts
; 0000 0017 
; 0000 0018 // If user need to open the door must press '*' on the keypad
; 0000 0019 while (1)
_0xB1:
; 0000 001A {
; 0000 001B input = keypad();
	RCALL _keypad
	MOV  R17,R30
; 0000 001C if (input == 10) // 10 is '*' in keypad
	CPI  R17,10
	BRNE _0xB4
; 0000 001D openCloseDoorMode();
	RCALL _openCloseDoorMode
; 0000 001E }
_0xB4:
	RJMP _0xB1
; 0000 001F }
_0xB5:
	RJMP _0xB5
; .FEND
;interrupt[3] void setPC(void)
; 0000 0022 {
_setPC:
; .FSTART _setPC
	RCALL SUBOPT_0x17
; 0000 0023 setPCMode();
	RCALL _setPCMode
; 0000 0024 }
	RJMP _0xB9
; .FEND
;interrupt[2] void admin(void)
; 0000 0027 {
_admin:
; .FSTART _admin
	RCALL SUBOPT_0x17
; 0000 0028 adminMode();
	RCALL _adminMode
; 0000 0029 }
_0xB9:
	LD   R30,Y+
	OUT  SREG,R30
	LD   R31,Y+
	LD   R30,Y+
	LD   R27,Y+
	LD   R26,Y+
	LD   R25,Y+
	LD   R24,Y+
	LD   R23,Y+
	LD   R22,Y+
	LD   R15,Y+
	LD   R1,Y+
	LD   R0,Y+
	RETI
; .FEND
	#ifndef __SLEEP_DEFINED__
	#define __SLEEP_DEFINED__
	.EQU __se_bit=0x40
	.EQU __sm_mask=0xB0
	.EQU __sm_powerdown=0x20
	.EQU __sm_powersave=0x30
	.EQU __sm_standby=0xA0
	.EQU __sm_ext_standby=0xB0
	.EQU __sm_adc_noise_red=0x10
	.SET power_ctrl_reg=mcucr
	#endif

	.DSEG

	.CSEG
__lcd_write_nibble_G100:
; .FSTART __lcd_write_nibble_G100
	ST   -Y,R17
	MOV  R17,R26
	IN   R30,0x1B
	ANDI R30,LOW(0xF)
	MOV  R26,R30
	MOV  R30,R17
	ANDI R30,LOW(0xF0)
	OR   R30,R26
	OUT  0x1B,R30
	__DELAY_USB 13
	SBI  0x1B,2
	__DELAY_USB 13
	CBI  0x1B,2
	__DELAY_USB 13
	RJMP _0x2080001
; .FEND
__lcd_write_data:
; .FSTART __lcd_write_data
	ST   -Y,R26
	LD   R26,Y
	RCALL __lcd_write_nibble_G100
    ld    r30,y
    swap  r30
    st    y,r30
	LD   R26,Y
	RCALL __lcd_write_nibble_G100
	__DELAY_USB 133
	ADIW R28,1
	RET
; .FEND
_lcd_gotoxy:
; .FSTART _lcd_gotoxy
	ST   -Y,R17
	ST   -Y,R16
	MOV  R17,R26
	LDD  R16,Y+2
	MOV  R30,R17
	LDI  R31,0
	SUBI R30,LOW(-__base_y_G100)
	SBCI R31,HIGH(-__base_y_G100)
	LD   R30,Z
	ADD  R30,R16
	MOV  R26,R30
	RCALL __lcd_write_data
	MOV  R5,R16
	MOV  R4,R17
	LDD  R17,Y+1
	LDD  R16,Y+0
	ADIW R28,3
	RET
; .FEND
_lcd_clear:
; .FSTART _lcd_clear
	LDI  R26,LOW(2)
	RCALL SUBOPT_0x18
	LDI  R26,LOW(12)
	RCALL __lcd_write_data
	LDI  R26,LOW(1)
	RCALL SUBOPT_0x18
	LDI  R30,LOW(0)
	MOV  R4,R30
	MOV  R5,R30
	RET
; .FEND
_lcd_putchar:
; .FSTART _lcd_putchar
	ST   -Y,R17
	MOV  R17,R26
	CPI  R17,10
	BREQ _0x2000005
	CP   R5,R7
	BRLO _0x2000004
_0x2000005:
	LDI  R30,LOW(0)
	ST   -Y,R30
	INC  R4
	MOV  R26,R4
	RCALL _lcd_gotoxy
	CPI  R17,10
	BREQ _0x2080001
_0x2000004:
	INC  R5
	SBI  0x1B,0
	MOV  R26,R17
	RCALL __lcd_write_data
	CBI  0x1B,0
	RJMP _0x2080001
; .FEND
_lcd_puts:
; .FSTART _lcd_puts
	RCALL __SAVELOCR4
	MOVW R18,R26
_0x2000008:
	MOVW R26,R18
	__ADDWRN 18,19,1
	LD   R30,X
	MOV  R17,R30
	CPI  R30,0
	BREQ _0x200000A
	MOV  R26,R17
	RCALL _lcd_putchar
	RJMP _0x2000008
_0x200000A:
_0x2080002:
	RCALL __LOADLOCR4
	ADIW R28,4
	RET
; .FEND
_lcd_init:
; .FSTART _lcd_init
	ST   -Y,R17
	MOV  R17,R26
	IN   R30,0x1A
	ORI  R30,LOW(0xF0)
	OUT  0x1A,R30
	SBI  0x1A,2
	SBI  0x1A,0
	SBI  0x1A,1
	CBI  0x1B,2
	CBI  0x1B,0
	CBI  0x1B,1
	MOV  R7,R17
	MOV  R30,R17
	SUBI R30,-LOW(128)
	__PUTB1MN __base_y_G100,2
	MOV  R30,R17
	SUBI R30,-LOW(192)
	__PUTB1MN __base_y_G100,3
	LDI  R26,LOW(20)
	LDI  R27,0
	RCALL _delay_ms
	RCALL SUBOPT_0x19
	RCALL SUBOPT_0x19
	RCALL SUBOPT_0x19
	LDI  R26,LOW(32)
	RCALL __lcd_write_nibble_G100
	__DELAY_USW 200
	LDI  R26,LOW(40)
	RCALL __lcd_write_data
	LDI  R26,LOW(4)
	RCALL __lcd_write_data
	LDI  R26,LOW(133)
	RCALL __lcd_write_data
	LDI  R26,LOW(6)
	RCALL __lcd_write_data
	RCALL _lcd_clear
_0x2080001:
	LD   R17,Y+
	RET
; .FEND

	.CSEG
_strcmp:
; .FSTART _strcmp
	ST   -Y,R27
	ST   -Y,R26
    ld   r30,y+
    ld   r31,y+
    ld   r26,y+
    ld   r27,y+
strcmp0:
    ld   r22,x+
    ld   r23,z+
    cp   r22,r23
    brne strcmp1
    tst  r22
    brne strcmp0
strcmp3:
    clr  r30
    ret
strcmp1:
    sub  r22,r23
    breq strcmp3
    ldi  r30,1
    brcc strcmp2
    subi r30,2
strcmp2:
    ret
; .FEND
	#ifndef __SLEEP_DEFINED__
	#define __SLEEP_DEFINED__
	.EQU __se_bit=0x40
	.EQU __sm_mask=0xB0
	.EQU __sm_powerdown=0x20
	.EQU __sm_powersave=0x30
	.EQU __sm_standby=0xA0
	.EQU __sm_ext_standby=0xB0
	.EQU __sm_adc_noise_red=0x10
	.SET power_ctrl_reg=mcucr
	#endif

	.CSEG

	.CSEG

	.DSEG
_users:
	.BYTE 0x46
__base_y_G100:
	.BYTE 0x4

	.CSEG
;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x0:
	RCALL __SAVELOCR4
	MOVW R16,R26
	__GETWRS 18,19,4
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
SUBOPT_0x1:
	__GETWRN 16,17,0
	__GETWRN 18,19,0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:10 WORDS
SUBOPT_0x2:
	ST   -Y,R17
	ST   -Y,R16
	__MULBNWRU 18,19,14
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x3:
	MOVW R26,R30
	RCALL _EE_WriteString
	__ADDWRN 16,17,4
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0x4:
	LDI  R26,LOW(500)
	LDI  R27,HIGH(500)
	RCALL _delay_ms
	SBI  0x18,4
	LDI  R26,LOW(1000)
	LDI  R27,HIGH(1000)
	RCALL _delay_ms
	CBI  0x18,4
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0x5:
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(6)
	LDI  R27,0
	RJMP _EE_ReadString

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x6:
	__ADDWRN 18,19,6
	ST   -Y,R19
	ST   -Y,R18
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
SUBOPT_0x7:
	MOVW R30,R28
	ADIW R30,16
	ST   -Y,R31
	ST   -Y,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0x8:
	LDI  R26,LOW(4)
	LDI  R27,0
	RCALL _EE_ReadString
	__ADDWRN 18,19,4
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x9:
	MOVW R30,R28
	ADIW R30,20
	ST   -Y,R31
	ST   -Y,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:58 WORDS
SUBOPT_0xA:
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(1000)
	LDI  R27,HIGH(1000)
	RJMP _displayMessage

;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:19 WORDS
SUBOPT_0xB:
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(1)
	RJMP _lcd_gotoxy

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0xC:
	MOVW R30,R28
	ADIW R30,18
	ST   -Y,R31
	ST   -Y,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0xD:
	MOVW R26,R28
	ADIW R26,44
	RCALL _strcmp
	CPI  R30,0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0xE:
	MOVW R26,R28
	ADIW R26,38
	RCALL _enterValueWithKeypad
	SBIW R30,0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
SUBOPT_0xF:
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(3000)
	LDI  R27,HIGH(3000)
	RCALL _displayMessage
	__GETWRN 20,21,1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x10:
	LDI  R26,LOW(5000)
	LDI  R27,HIGH(5000)
	RCALL _delay_ms
	RJMP _lcd_clear

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x11:
	__ADDWRN 16,17,6
	ST   -Y,R17
	ST   -Y,R16
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
SUBOPT_0x12:
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(4)
	LDI  R27,0
	RJMP _EE_ReadString

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x13:
	__ADDWRN 16,17,4
	ST   -Y,R17
	ST   -Y,R16
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x14:
	MOVW R26,R28
	RCALL _enterValueWithKeypad
	SBIW R30,0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x15:
	MOVW R26,R28
	ADIW R26,2
	RCALL _strcmp
	CPI  R30,0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x16:
	__ADDWRN 16,17,4
	__ADDWRN 16,17,4
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
SUBOPT_0x17:
	ST   -Y,R0
	ST   -Y,R1
	ST   -Y,R15
	ST   -Y,R22
	ST   -Y,R23
	ST   -Y,R24
	ST   -Y,R25
	ST   -Y,R26
	ST   -Y,R27
	ST   -Y,R30
	ST   -Y,R31
	IN   R30,SREG
	ST   -Y,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x18:
	RCALL __lcd_write_data
	LDI  R26,LOW(3)
	LDI  R27,0
	RJMP _delay_ms

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
SUBOPT_0x19:
	LDI  R26,LOW(48)
	RCALL __lcd_write_nibble_G100
	__DELAY_USW 200
	RET

;RUNTIME LIBRARY

	.CSEG
__SAVELOCR6:
	ST   -Y,R21
__SAVELOCR5:
	ST   -Y,R20
__SAVELOCR4:
	ST   -Y,R19
__SAVELOCR3:
	ST   -Y,R18
__SAVELOCR2:
	ST   -Y,R17
	ST   -Y,R16
	RET

__LOADLOCR6:
	LDD  R21,Y+5
__LOADLOCR5:
	LDD  R20,Y+4
__LOADLOCR4:
	LDD  R19,Y+3
__LOADLOCR3:
	LDD  R18,Y+2
__LOADLOCR2:
	LDD  R17,Y+1
	LD   R16,Y
	RET

_delay_ms:
	adiw r26,0
	breq __delay_ms1
__delay_ms0:
	wdr
	__DELAY_USW 0x7D0
	sbiw r26,1
	brne __delay_ms0
__delay_ms1:
	ret

;END OF CODE MARKER
__END_OF_CODE:

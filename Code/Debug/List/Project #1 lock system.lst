
AVRASM ver. 2.1.30  E:\Seventh term\Embedded Systems\Project #1\Simulation & Code (main)\lock-system\Code\Debug\List\Project #1 lock system.asm Mon Dec 18 17:43:27 2023

E:\Seventh term\Embedded Systems\Project #1\Simulation & Code (main)\lock-system\Code\Debug\List\Project #1 lock system.asm(1418): warning: Register r5 already defined by the .DEF directive
E:\Seventh term\Embedded Systems\Project #1\Simulation & Code (main)\lock-system\Code\Debug\List\Project #1 lock system.asm(1419): warning: Register r4 already defined by the .DEF directive
E:\Seventh term\Embedded Systems\Project #1\Simulation & Code (main)\lock-system\Code\Debug\List\Project #1 lock system.asm(1420): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V4.00a 
                 ;(C) Copyright 1998-2023 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU SPMCSR=0x37
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.EQU __FLASH_PAGE_SIZE=0x40
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0147 	JMP  __RESET
000002 940c 0402 	JMP  _admin
000004 940c 03fc 	JMP  _setPC
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 03ff 	JMP  _openCloseDoor
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G102:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G102:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x3:
000033 7250
000034 666f
000035 0000
000036 3131      	.DB  0x50,0x72,0x6F,0x66,0x0,0x0,0x31,0x31
000037 0031
000038 3032
000039 0033
00003a 6841      	.DB  0x31,0x0,0x32,0x30,0x33,0x0,0x41,0x68
00003b 656d
00003c 0064
00003d 3231
00003e 0036      	.DB  0x6D,0x65,0x64,0x0,0x31,0x32,0x36,0x0
00003f 3231
000040 0039
000041 6d41
000042 0072      	.DB  0x31,0x32,0x39,0x0,0x41,0x6D,0x72,0x0
000043 0000
000044 3231
000045 0038
000046 3233      	.DB  0x0,0x0,0x31,0x32,0x38,0x0,0x33,0x32
000047 0035
000048 6441
000049 6c65
00004a 0000      	.DB  0x35,0x0,0x41,0x64,0x65,0x6C,0x0,0x0
00004b 3331
00004c 0030
00004d 3234
00004e 0036      	.DB  0x31,0x33,0x30,0x0,0x34,0x32,0x36,0x0
00004f 6d4f
000050 7265
000051 0000
000052 3331      	.DB  0x4F,0x6D,0x65,0x72,0x0,0x0,0x31,0x33
000053 0032
000054 3730
E:\Seventh term\Embedded Systems\Project #1\Simulation & Code (main)\lock-system\Code\Debug\List\Project #1 lock system.asm(1466): warning: .cseg .db misalignment - padding zero byte
000055 0039      	.DB  0x32,0x0,0x30,0x37,0x39
                 _0x0:
000056 7250
000057 666f
000058 4500
000059 746e      	.DB  0x50,0x72,0x6F,0x66,0x0,0x45,0x6E,0x74
00005a 7265
00005b 4120
00005c 6d64
00005d 6e69      	.DB  0x65,0x72,0x20,0x41,0x64,0x6D,0x69,0x6E
00005e 5020
00005f 3a43
000060 0020
000061 6e45      	.DB  0x20,0x50,0x43,0x3A,0x20,0x0,0x45,0x6E
000062 6574
000063 2072
000064 7453
000065 6475      	.DB  0x74,0x65,0x72,0x20,0x53,0x74,0x75,0x64
000066 6e65
000067 2074
000068 4449
000069 203a      	.DB  0x65,0x6E,0x74,0x20,0x49,0x44,0x3A,0x20
00006a 4500
00006b 746e
00006c 7265
00006d 7320      	.DB  0x0,0x45,0x6E,0x74,0x65,0x72,0x20,0x73
00006e 7574
00006f 6564
000070 746e
000071 7327      	.DB  0x74,0x75,0x64,0x65,0x6E,0x74,0x27,0x73
000072 6e20
000073 7765
000074 5020
000075 3a43      	.DB  0x20,0x6E,0x65,0x77,0x20,0x50,0x43,0x3A
000076 0020
000077 7453
000078 6475
000079 6e65      	.DB  0x20,0x0,0x53,0x74,0x75,0x64,0x65,0x6E
00007a 2074
00007b 4350
00007c 6920
00007d 2073      	.DB  0x74,0x20,0x50,0x43,0x20,0x69,0x73,0x20
00007e 7473
00007f 726f
000080 6465
000081 4500      	.DB  0x73,0x74,0x6F,0x72,0x65,0x64,0x0,0x45
000082 746e
000083 7265
000084 7920
000085 756f      	.DB  0x6E,0x74,0x65,0x72,0x20,0x79,0x6F,0x75
000086 2072
000087 656e
000088 2077
000089 4350      	.DB  0x72,0x20,0x6E,0x65,0x77,0x20,0x50,0x43
00008a 203a
00008b 5900
00008c 756f
00008d 2072      	.DB  0x3A,0x20,0x0,0x59,0x6F,0x75,0x72,0x20
00008e 4350
00008f 6920
000090 2073
000091 7473      	.DB  0x50,0x43,0x20,0x69,0x73,0x20,0x73,0x74
000092 726f
000093 6465
000094 4300
000095 6e6f      	.DB  0x6F,0x72,0x65,0x64,0x0,0x43,0x6F,0x6E
000096 6174
000097 7463
000098 4120
000099 6d64      	.DB  0x74,0x61,0x63,0x74,0x20,0x41,0x64,0x6D
00009a 6e69
00009b 4500
00009c 746e
00009d 7265      	.DB  0x69,0x6E,0x0,0x45,0x6E,0x74,0x65,0x72
00009e 7920
00009f 756f
0000a0 2072
0000a1 4449      	.DB  0x20,0x79,0x6F,0x75,0x72,0x20,0x49,0x44
0000a2 003a
0000a3 6e45
0000a4 6574
0000a5 2072      	.DB  0x3A,0x0,0x45,0x6E,0x74,0x65,0x72,0x20
0000a6 6c6f
0000a7 2064
0000a8 4350
0000a9 003a      	.DB  0x6F,0x6C,0x64,0x20,0x50,0x43,0x3A,0x0
0000aa 6e45
0000ab 6574
0000ac 2072
0000ad 656e      	.DB  0x45,0x6E,0x74,0x65,0x72,0x20,0x6E,0x65
0000ae 2077
0000af 4350
0000b0 003a
0000b1 6552      	.DB  0x77,0x20,0x50,0x43,0x3A,0x0,0x52,0x65
0000b2 652d
0000b3 746e
0000b4 7265
0000b5 6e20      	.DB  0x2D,0x65,0x6E,0x74,0x65,0x72,0x20,0x6E
0000b6 7765
0000b7 5020
0000b8 3a43
0000b9 4e00      	.DB  0x65,0x77,0x20,0x50,0x43,0x3A,0x0,0x4E
0000ba 7765
0000bb 5020
0000bc 2043
0000bd 7473      	.DB  0x65,0x77,0x20,0x50,0x43,0x20,0x73,0x74
0000be 726f
0000bf 6465
0000c0 4e00
0000c1 7765      	.DB  0x6F,0x72,0x65,0x64,0x0,0x4E,0x65,0x77
0000c2 5020
0000c3 2043
0000c4 696d
0000c5 6d73      	.DB  0x20,0x50,0x43,0x20,0x6D,0x69,0x73,0x6D
0000c6 7461
0000c7 6863
0000c8 202c
0000c9 6f43      	.DB  0x61,0x74,0x63,0x68,0x2C,0x20,0x43,0x6F
0000ca 746e
0000cb 6361
0000cc 2074
0000cd 6461      	.DB  0x6E,0x74,0x61,0x63,0x74,0x20,0x61,0x64
0000ce 696d
0000cf 006e
0000d0 7257
0000d1 6e6f      	.DB  0x6D,0x69,0x6E,0x0,0x57,0x72,0x6F,0x6E
0000d2 2067
0000d3 6c6f
0000d4 2064
0000d5 4350      	.DB  0x67,0x20,0x6F,0x6C,0x64,0x20,0x50,0x43
0000d6 202c
0000d7 2020
0000d8 6f43
0000d9 746e      	.DB  0x2C,0x20,0x20,0x20,0x43,0x6F,0x6E,0x74
0000da 6361
0000db 2074
0000dc 6461
0000dd 696d      	.DB  0x61,0x63,0x74,0x20,0x61,0x64,0x6D,0x69
0000de 006e
0000df 7257
0000e0 6e6f
0000e1 2067      	.DB  0x6E,0x0,0x57,0x72,0x6F,0x6E,0x67,0x20
0000e2 4449
0000e3 4500
0000e4 746e
0000e5 7265      	.DB  0x49,0x44,0x0,0x45,0x6E,0x74,0x65,0x72
0000e6 7920
0000e7 756f
0000e8 2072
0000e9 4449      	.DB  0x20,0x79,0x6F,0x75,0x72,0x20,0x49,0x44
0000ea 203a
0000eb 4500
0000ec 746e
0000ed 7265      	.DB  0x3A,0x20,0x0,0x45,0x6E,0x74,0x65,0x72
0000ee 7920
0000ef 756f
0000f0 2072
0000f1 4350      	.DB  0x20,0x79,0x6F,0x75,0x72,0x20,0x50,0x43
0000f2 203a
0000f3 5700
0000f4 6c65
0000f5 6f63      	.DB  0x3A,0x20,0x0,0x57,0x65,0x6C,0x63,0x6F
0000f6 656d
0000f7 202c
0000f8 5300
0000f9 726f      	.DB  0x6D,0x65,0x2C,0x20,0x0,0x53,0x6F,0x72
0000fa 7972
0000fb 7720
0000fc 6f72
0000fd 676e      	.DB  0x72,0x79,0x20,0x77,0x72,0x6F,0x6E,0x67
0000fe 5020
0000ff 0043      	.DB  0x20,0x50,0x43,0x0
                 _0x2000003:
000100 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000101 0045      	.DW  0x45
000102 02bd      	.DW  _users
000103 0066      	.DW  _0x3*2
                 
000104 0005      	.DW  0x05
000105 0160      	.DW  _0x86
000106 00ac      	.DW  _0x0*2
                 
000107 0011      	.DW  0x11
000108 0165      	.DW  _0x86+5
000109 00b1      	.DW  _0x0*2+5
                 
00010a 0013      	.DW  0x13
00010b 0176      	.DW  _0x86+22
00010c 00c2      	.DW  _0x0*2+22
                 
00010d 0019      	.DW  0x19
00010e 0189      	.DW  _0x86+41
00010f 00d5      	.DW  _0x0*2+41
                 
000110 0015      	.DW  0x15
000111 01a2      	.DW  _0x86+66
000112 00ee      	.DW  _0x0*2+66
                 
000113 0014      	.DW  0x14
000114 01b7      	.DW  _0x86+87
000115 0103      	.DW  _0x0*2+87
                 
000116 0012      	.DW  0x12
000117 01cb      	.DW  _0x86+107
000118 0117      	.DW  _0x0*2+107
                 
000119 000e      	.DW  0x0E
00011a 01dd      	.DW  _0x86+125
00011b 0129      	.DW  _0x0*2+125
                 
00011c 000f      	.DW  0x0F
00011d 01eb      	.DW  _0x93
00011e 0137      	.DW  _0x0*2+139
                 
00011f 000e      	.DW  0x0E
000120 01fa      	.DW  _0x93+15
000121 0146      	.DW  _0x0*2+154
                 
000122 000e      	.DW  0x0E
000123 0208      	.DW  _0x93+29
000124 0154      	.DW  _0x0*2+168
                 
000125 0011      	.DW  0x11
000126 0216      	.DW  _0x93+43
000127 0162      	.DW  _0x0*2+182
                 
000128 000e      	.DW  0x0E
000129 0227      	.DW  _0x93+60
00012a 0173      	.DW  _0x0*2+199
                 
00012b 001f      	.DW  0x1F
00012c 0235      	.DW  _0x93+74
00012d 0181      	.DW  _0x0*2+213
                 
00012e 001e      	.DW  0x1E
00012f 0254      	.DW  _0x93+105
000130 01a0      	.DW  _0x0*2+244
                 
000131 0009      	.DW  0x09
000132 0272      	.DW  _0x93+135
000133 01be      	.DW  _0x0*2+274
                 
000134 0010      	.DW  0x10
000135 027b      	.DW  _0x9F
000136 01c7      	.DW  _0x0*2+283
                 
000137 0010      	.DW  0x10
000138 028b      	.DW  _0x9F+16
000139 01d7      	.DW  _0x0*2+299
                 
00013a 000a      	.DW  0x0A
00013b 029b      	.DW  _0x9F+32
00013c 01e7      	.DW  _0x0*2+315
                 
00013d 000f      	.DW  0x0F
00013e 02a5      	.DW  _0x9F+42
00013f 01f1      	.DW  _0x0*2+325
                 
000140 0009      	.DW  0x09
000141 02b4      	.DW  _0x9F+57
000142 01be      	.DW  _0x0*2+274
                 
000143 0002      	.DW  0x02
000144 0303      	.DW  __base_y_G100
000145 0200      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
000146 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000147 94f8      	CLI
                 
000148 27ee      	CLR  R30
000149 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00014a e0f1      	LDI  R31,1
00014b bffb      	OUT  GICR,R31
00014c bfeb      	OUT  GICR,R30
00014d bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00014e e08d      	LDI  R24,(14-2)+1
00014f e0a2      	LDI  R26,2
000150 27bb      	CLR  R27
                 __CLEAR_REG:
000151 93ed      	ST   X+,R30
000152 958a      	DEC  R24
000153 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000154 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000155 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000156 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000157 93ed      	ST   X+,R30
000158 9701      	SBIW R24,1
000159 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00015a e0e2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00015b e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00015c 9185      	LPM  R24,Z+
00015d 9195      	LPM  R25,Z+
00015e 9700      	SBIW R24,0
00015f f061      	BREQ __GLOBAL_INI_END
000160 91a5      	LPM  R26,Z+
000161 91b5      	LPM  R27,Z+
000162 9005      	LPM  R0,Z+
000163 9015      	LPM  R1,Z+
000164 01bf      	MOVW R22,R30
000165 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000166 9005      	LPM  R0,Z+
000167 920d      	ST   X+,R0
000168 9701      	SBIW R24,1
000169 f7e1      	BRNE __GLOBAL_INI_LOOP
00016a 01fb      	MOVW R30,R22
00016b cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00016c e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00016d bfed      	OUT  SPL,R30
00016e e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00016f bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000170 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000171 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000172 940c 03f2 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 _initializeHardware:
                 ; .FSTART _initializeHardware
000174 d005      	RCALL _initializeKeypad
000175 e1a0      	LDI  R26,LOW(16)
000176 d2fb      	RCALL _lcd_init
000177 d007      	RCALL _initializeDoor
000178 d009      	RCALL _initializeSpeaker
000179 9508      	RET
                 ; .FEND
                 _initializeKeypad:
                 ; .FSTART _initializeKeypad
00017a e0e7      	LDI  R30,LOW(7)
00017b bbe4      	OUT  0x14,R30
00017c efe8      	LDI  R30,LOW(248)
00017d bbe5      	OUT  0x15,R30
00017e 9508      	RET
                 ; .FEND
                 _initializeDoor:
                 ; .FSTART _initializeDoor
00017f 98b8      	CBI  0x17,0
000180 9ac0      	SBI  0x18,0
000181 9508      	RET
                 ; .FEND
                 _initializeSpeaker:
                 ; .FSTART _initializeSpeaker
000182 9a8f      	SBI  0x11,7
000183 c111      	RJMP _0x2080003
                 ; .FEND
                 _initializeIntrrupts:
                 ; .FSTART _initializeIntrrupts
000184 98ba      	CBI  0x17,2
000185 9ac2      	SBI  0x18,2
000186 b7e4      	IN   R30,0x34
000187 64e0      	ORI  R30,0x40
000188 bfe4      	OUT  0x34,R30
000189 988a      	CBI  0x11,2
00018a 9a92      	SBI  0x12,2
00018b b7e5      	IN   R30,0x35
00018c 60e2      	ORI  R30,2
00018d bfe5      	OUT  0x35,R30
00018e b7e5      	IN   R30,0x35
00018f 7fee      	ANDI R30,0xFE
000190 bfe5      	OUT  0x35,R30
000191 b7e5      	IN   R30,0x35
000192 60e8      	ORI  R30,8
000193 bfe5      	OUT  0x35,R30
000194 b7e5      	IN   R30,0x35
000195 7feb      	ANDI R30,0xFB
000196 bfe5      	OUT  0x35,R30
000197 988b      	CBI  0x11,3
000198 9a93      	SBI  0x12,3
000199 9478      	SEI
00019a b7eb      	IN   R30,0x3B
00019b 68e0      	ORI  R30,0x80
00019c bfeb      	OUT  0x3B,R30
00019d b7eb      	IN   R30,0x3B
00019e 62e0      	ORI  R30,0x20
00019f bfeb      	OUT  0x3B,R30
0001a0 b7eb      	IN   R30,0x3B
0001a1 64e0      	ORI  R30,0x40
0001a2 bfeb      	OUT  0x3B,R30
0001a3 9508      	RET
                 ; .FEND
                 _keypad:
                 ; .FSTART _keypad
                 _0x18:
0001a4 98a8      	CBI  0x15,0
0001a5 9aa9      	SBI  0x15,1
0001a6 9aaa      	SBI  0x15,2
0001a7 b3e3      	IN   R30,0x13
0001a8 3fe6      	CPI  R30,LOW(0xF6)
0001a9 f421      	BRNE _0x24
                 _0x25:
0001aa 9b9b      	SBIS 0x13,3
0001ab cffe      	RJMP _0x25
0001ac e0e1      	LDI  R30,LOW(1)
0001ad 9508      	RET
                 _0x24:
0001ae 3eee      	CPI  R30,LOW(0xEE)
0001af f421      	BRNE _0x28
                 _0x29:
0001b0 9b9c      	SBIS 0x13,4
0001b1 cffe      	RJMP _0x29
0001b2 e0e4      	LDI  R30,LOW(4)
0001b3 9508      	RET
                 _0x28:
0001b4 3dee      	CPI  R30,LOW(0xDE)
0001b5 f421      	BRNE _0x2C
                 _0x2D:
0001b6 9b9d      	SBIS 0x13,5
0001b7 cffe      	RJMP _0x2D
0001b8 e0e7      	LDI  R30,LOW(7)
0001b9 9508      	RET
                 _0x2C:
0001ba 3bee      	CPI  R30,LOW(0xBE)
0001bb f421      	BRNE _0x23
                 _0x31:
0001bc 9b9e      	SBIS 0x13,6
0001bd cffe      	RJMP _0x31
0001be e2ea      	LDI  R30,LOW(42)
0001bf 9508      	RET
                 _0x23:
0001c0 9aa8      	SBI  0x15,0
0001c1 98a9      	CBI  0x15,1
0001c2 9aaa      	SBI  0x15,2
0001c3 b3e3      	IN   R30,0x13
0001c4 3fe5      	CPI  R30,LOW(0xF5)
0001c5 f421      	BRNE _0x3D
                 _0x3E:
0001c6 9b9b      	SBIS 0x13,3
0001c7 cffe      	RJMP _0x3E
0001c8 e0e2      	LDI  R30,LOW(2)
0001c9 9508      	RET
                 _0x3D:
0001ca 3eed      	CPI  R30,LOW(0xED)
0001cb f421      	BRNE _0x41
                 _0x42:
0001cc 9b9c      	SBIS 0x13,4
0001cd cffe      	RJMP _0x42
0001ce e0e5      	LDI  R30,LOW(5)
0001cf 9508      	RET
                 _0x41:
0001d0 3ded      	CPI  R30,LOW(0xDD)
0001d1 f421      	BRNE _0x45
                 _0x46:
0001d2 9b9d      	SBIS 0x13,5
0001d3 cffe      	RJMP _0x46
0001d4 e0e8      	LDI  R30,LOW(8)
0001d5 9508      	RET
                 _0x45:
0001d6 3bed      	CPI  R30,LOW(0xBD)
0001d7 f421      	BRNE _0x3C
                 _0x4A:
0001d8 9b9e      	SBIS 0x13,6
0001d9 cffe      	RJMP _0x4A
0001da e0e0      	LDI  R30,LOW(0)
0001db 9508      	RET
                 _0x3C:
0001dc 9aa8      	SBI  0x15,0
0001dd 9aa9      	SBI  0x15,1
0001de 98aa      	CBI  0x15,2
0001df b3e3      	IN   R30,0x13
0001e0 3fe3      	CPI  R30,LOW(0xF3)
0001e1 f421      	BRNE _0x56
                 _0x57:
0001e2 9b9b      	SBIS 0x13,3
0001e3 cffe      	RJMP _0x57
0001e4 e0e3      	LDI  R30,LOW(3)
0001e5 9508      	RET
                 _0x56:
0001e6 3eeb      	CPI  R30,LOW(0xEB)
0001e7 f421      	BRNE _0x5A
                 _0x5B:
0001e8 9b9c      	SBIS 0x13,4
0001e9 cffe      	RJMP _0x5B
0001ea e0e6      	LDI  R30,LOW(6)
0001eb 9508      	RET
                 _0x5A:
0001ec 3deb      	CPI  R30,LOW(0xDB)
0001ed f421      	BRNE _0x5E
                 _0x5F:
0001ee 9b9d      	SBIS 0x13,5
0001ef cffe      	RJMP _0x5F
0001f0 e0e9      	LDI  R30,LOW(9)
0001f1 9508      	RET
                 _0x5E:
0001f2 3beb      	CPI  R30,LOW(0xBB)
0001f3 f421      	BRNE _0x55
                 _0x63:
0001f4 9b9e      	SBIS 0x13,6
0001f5 cffe      	RJMP _0x63
0001f6 e0eb      	LDI  R30,LOW(11)
0001f7 9508      	RET
                 _0x55:
0001f8 cfab      	RJMP _0x18
                 ; .FEND
                 _EE_Read:
                 ; .FSTART _EE_Read
0001f9 931a      	ST   -Y,R17
0001fa 930a      	ST   -Y,R16
0001fb 018d      	MOVW R16,R26
                 ;	address -> R16,R17
                 _0x66:
0001fc 99e1      	SBIC 0x1C,1
0001fd cffe      	RJMP _0x66
                +
0001fe bb1f     +OUT 30 + 1 , R17
0001ff bb0e     +OUT 30 , R16
                 	__OUTWR 16,17,30
000200 9ae0      	SBI  0x1C,0
000201 b3ed      	IN   R30,0x1D
000202 c087      	RJMP _0x2080004
                 ; .FEND
                 _EE_Write:
                 ; .FSTART _EE_Write
000203 d33a      	RCALL __SAVELOCR4
000204 2f1a      	MOV  R17,R26
                +
000205 812c     +LDD R18 , Y + 4
000206 813d     +LDD R19 , Y + 4 + 1
                 	__GETWRS 18,19,4
                 ;	address -> R18,R19
                 ;	data -> R17
                 _0x6B:
000207 99e1      	SBIC 0x1C,1
000208 cffe      	RJMP _0x6B
                +
000209 bb3f     +OUT 30 + 1 , R19
00020a bb2e     +OUT 30 , R18
                 	__OUTWR 18,19,30
00020b bb1d      	OUT  0x1D,R17
00020c 9ae2      	SBI  0x1C,2
00020d 9ae1      	SBI  0x1C,1
00020e c056      	RJMP _0x2080005
                 ; .FEND
                 _EE_WriteString:
                 ; .FSTART _EE_WriteString
00020f d2a1      	RCALL SUBOPT_0x0
                 ;	address -> R18,R19
                 ;	*str -> R16,R17
                 _0x72:
000210 01d8      	MOVW R26,R16
000211 91ec      	LD   R30,X
000212 30e0      	CPI  R30,0
000213 f051      	BREQ _0x74
000214 01f9      	MOVW R30,R18
                +
000215 5f2f     +SUBI R18 , LOW ( - 1 )
000216 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000217 93fa      	ST   -Y,R31
000218 93ea      	ST   -Y,R30
                +
000219 5f0f     +SUBI R16 , LOW ( - 1 )
00021a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00021b 91ac      	LD   R26,X
00021c dfe6      	RCALL _EE_Write
00021d cff2      	RJMP _0x72
                 _0x74:
00021e 933a      	ST   -Y,R19
00021f 932a      	ST   -Y,R18
000220 e0a0      	LDI  R26,LOW(0)
000221 dfe1      	RCALL _EE_Write
000222 c042      	RJMP _0x2080005
                 ; .FEND
                 _EE_ReadString:
                 ; .FSTART _EE_ReadString
000223 d318      	RCALL __SAVELOCR6
000224 019d      	MOVW R18,R26
                +
000225 814e     +LDD R20 , Y + 6
000226 815f     +LDD R21 , Y + 6 + 1
                 	__GETWRS 20,21,6
                 ;	address -> Y+8
                 ;	*buffer -> R20,R21
                 ;	length -> R18,R19
                 ;	i -> R16,R17
                +
000227 e000     +LDI R16 , LOW ( 0 )
000228 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x76:
                +
000229 1702     +CP R16 , R18
00022a 0713     +CPC R17 , R19
                 	__CPWRR 16,17,18,19
00022b f4b0      	BRSH _0x77
00022c 01f8      	MOVW R30,R16
00022d 0fe4      	ADD  R30,R20
00022e 1ff5      	ADC  R31,R21
00022f 93ff      	PUSH R31
000230 93ef      	PUSH R30
000231 85a8      	LDD  R26,Y+8
000232 85b9      	LDD  R27,Y+8+1
000233 0fa0      	ADD  R26,R16
000234 1fb1      	ADC  R27,R17
000235 dfc3      	RCALL _EE_Read
000236 91af      	POP  R26
000237 91bf      	POP  R27
000238 93ec      	ST   X,R30
000239 01f8      	MOVW R30,R16
00023a 0fe4      	ADD  R30,R20
00023b 1ff5      	ADC  R31,R21
00023c 81e0      	LD   R30,Z
00023d 30e0      	CPI  R30,0
00023e f019      	BREQ _0x77
                +
00023f 5f0f     +SUBI R16 , LOW ( - 1 )
000240 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000241 cfe7      	RJMP _0x76
                 _0x77:
000242 d300      	RCALL __LOADLOCR6
000243 962a      	ADIW R28,10
000244 9508      	RET
                 ; .FEND
                 _initializeUsers:
                 ; .FSTART _initializeUsers
000245 d2f8      	RCALL __SAVELOCR4
                 ;	address -> R16,R17
                 ;	i -> R18,R19
000246 d26f      	RCALL SUBOPT_0x1
                 _0x7A:
                +
000247 3025     +CPI R18 , LOW ( 5 )
000248 e0e0     +LDI R30 , HIGH ( 5 )
000249 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
00024a f494      	BRGE _0x7B
00024b d26f      	RCALL SUBOPT_0x2
00024c 54e3      	SUBI R30,LOW(-_users)
00024d 4ffd      	SBCI R31,HIGH(-_users)
00024e 01df      	MOVW R26,R30
00024f dfbf      	RCALL _EE_WriteString
                +
000250 5f0a     +SUBI R16 , LOW ( - 6 )
000251 4f1f     +SBCI R17 , HIGH ( - 6 )
                 	__ADDWRN 16,17,6
000252 d268      	RCALL SUBOPT_0x2
                +
000253 53ed     +SUBI R30 , LOW ( - _users - ( 6 ) )
000254 4ffd     +SBCI R31 , HIGH ( - _users - ( 6 ) )
                 	__ADDW1MN _users,6
000255 d26d      	RCALL SUBOPT_0x3
000256 d264      	RCALL SUBOPT_0x2
                +
000257 53e9     +SUBI R30 , LOW ( - _users - ( 10 ) )
000258 4ffd     +SBCI R31 , HIGH ( - _users - ( 10 ) )
                 	__ADDW1MN _users,10
000259 d269      	RCALL SUBOPT_0x3
                +
00025a 5f2f     +SUBI R18 , LOW ( - 1 )
00025b 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00025c cfea      	RJMP _0x7A
                 _0x7B:
00025d 940c 046f 	JMP  _0x2080002
                 ; .FEND
                 _displayMessage:
                 ; .FSTART _displayMessage
00025f d251      	RCALL SUBOPT_0x0
                 ;	*message -> R18,R19
                 ;	delay_ms_value -> R16,R17
000260 d1e5      	RCALL _lcd_clear
000261 01d9      	MOVW R26,R18
000262 d200      	RCALL _lcd_puts
000263 01d8      	MOVW R26,R16
000264 d2e5      	RCALL _delay_ms
                 _0x2080005:
000265 d2df      	RCALL __LOADLOCR4
000266 9626      	ADIW R28,6
000267 9508      	RET
                 ; .FEND
                 _enterValueWithKeypad:
                 ; .FSTART _enterValueWithKeypad
000268 931a      	ST   -Y,R17
000269 930a      	ST   -Y,R16
00026a 018d      	MOVW R16,R26
                 ;	*buffer -> R16,R17
00026b df38      	RCALL _keypad
00026c 5de0      	SUBI R30,-LOW(48)
00026d 01d8      	MOVW R26,R16
00026e 93ec      	ST   X,R30
00026f 91ac      	LD   R26,X
000270 d1df      	RCALL _lcd_putchar
000271 df32      	RCALL _keypad
000272 5de0      	SUBI R30,-LOW(48)
                +
000273 01d8     +MOVW R26 , R16
000274 9611     +ADIW R26 , 1
000275 93ec     +ST X , R30
                 	__PUTB1RNS 16,1
000276 01f8      	MOVW R30,R16
000277 81a1      	LDD  R26,Z+1
000278 d1d7      	RCALL _lcd_putchar
000279 df2a      	RCALL _keypad
00027a 5de0      	SUBI R30,-LOW(48)
                +
00027b 01d8     +MOVW R26 , R16
00027c 9612     +ADIW R26 , 2
00027d 93ec     +ST X , R30
                 	__PUTB1RNS 16,2
00027e 01f8      	MOVW R30,R16
00027f 81a2      	LDD  R26,Z+2
000280 d1cf      	RCALL _lcd_putchar
000281 01f8      	MOVW R30,R16
000282 9633      	ADIW R30,3
000283 e0a0      	LDI  R26,LOW(0)
000284 83a0      	STD  Z+0,R26
000285 eea8      	LDI  R26,LOW(1000)
000286 e0b3      	LDI  R27,HIGH(1000)
000287 d2c2      	RCALL _delay_ms
000288 e0e1      	LDI  R30,LOW(1)
000289 e0f0      	LDI  R31,HIGH(1)
                 _0x2080004:
00028a 9109      	LD   R16,Y+
00028b 9119      	LD   R17,Y+
00028c 9508      	RET
                 ; .FEND
                 _generateTone:
                 ; .FSTART _generateTone
00028d 9a97      	SBI  0x12,7
00028e efa4      	LDI  R26,LOW(500)
00028f e0b1      	LDI  R27,HIGH(500)
000290 d2b9      	RCALL _delay_ms
000291 9897      	CBI  0x12,7
000292 efa4      	LDI  R26,LOW(500)
000293 e0b1      	LDI  R27,HIGH(500)
000294 d2b5      	RCALL _delay_ms
                 _0x2080003:
000295 9a97      	SBI  0x12,7
000296 9508      	RET
                 ; .FEND
                 _adminMode:
                 ; .FSTART _adminMode
000297 97aa      	SBIW R28,42
000298 d2a3      	RCALL __SAVELOCR6
                 ;	enteredPC -> Y+44
                 ;	enteredStudentID -> Y+40
                 ;	enteredNewPC -> Y+36
                 ;	student -> Y+22
                 ;	admin -> Y+8
                 ;	adminPCAddress -> R16,R17
                 ;	address -> R18,R19
                 ;	userFound -> R20,R21
                 ;	i -> Y+6
000299 d21c      	RCALL SUBOPT_0x1
                +
00029a e040     +LDI R20 , LOW ( 0 )
00029b e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
00029c e0e0      	LDI  R30,LOW(0)
00029d 83ee      	STD  Y+6,R30
00029e 83ef      	STD  Y+6+1,R30
                 _0x83:
00029f 81ae      	LDD  R26,Y+6
0002a0 81bf      	LDD  R27,Y+6+1
0002a1 9715      	SBIW R26,5
0002a2 f50c      	BRGE _0x84
0002a3 933a      	ST   -Y,R19
0002a4 932a      	ST   -Y,R18
0002a5 01fe      	MOVW R30,R28
0002a6 963a      	ADIW R30,10
0002a7 d220      	RCALL SUBOPT_0x4
0002a8 01fe      	MOVW R30,R28
0002a9 9638      	ADIW R30,8
0002aa 93fa      	ST   -Y,R31
0002ab 93ea      	ST   -Y,R30
                +
0002ac e6a0     +LDI R26 , LOW ( _0x86 + ( 0 ) )
0002ad e0b1     +LDI R27 , HIGH ( _0x86 + ( 0 ) )
                 	__POINTW2MN _0x86,0
0002ae d1ee      	RCALL _strcmp
0002af 30e0      	CPI  R30,0
0002b0 f459      	BRNE _0x85
0002b1 d21b      	RCALL SUBOPT_0x5
0002b2 d21f      	RCALL SUBOPT_0x6
0002b3 d223      	RCALL SUBOPT_0x7
0002b4 933a      	ST   -Y,R19
0002b5 932a      	ST   -Y,R18
0002b6 d226      	RCALL SUBOPT_0x8
0002b7 e0a4      	LDI  R26,LOW(4)
0002b8 e0b0      	LDI  R27,0
0002b9 df69      	RCALL _EE_ReadString
0002ba 0189      	MOVW R16,R18
0002bb c008      	RJMP _0x84
                 _0x85:
                +
0002bc 5f2c     +SUBI R18 , LOW ( - 4 )
0002bd 4f3f     +SBCI R19 , HIGH ( - 4 )
                 	__ADDWRN 18,19,4
0002be 81ee      	LDD  R30,Y+6
0002bf 81ff      	LDD  R31,Y+6+1
0002c0 9631      	ADIW R30,1
0002c1 83ee      	STD  Y+6,R30
0002c2 83ff      	STD  Y+6+1,R31
0002c3 cfdb      	RJMP _0x83
                 _0x84:
                +
0002c4 e020     +LDI R18 , LOW ( 0 )
0002c5 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
0002c6 e6e5     +LDI R30 , LOW ( _0x86 + ( 5 ) )
0002c7 e0f1     +LDI R31 , HIGH ( _0x86 + ( 5 ) )
                 	__POINTW1MN _0x86,5
0002c8 d219      	RCALL SUBOPT_0x9
0002c9 d21d      	RCALL SUBOPT_0xA
0002ca 01de      	MOVW R26,R28
0002cb 969c      	ADIW R26,44
0002cc df9b      	RCALL _enterValueWithKeypad
0002cd 9730      	SBIW R30,0
0002ce f409      	BRNE PC+2
0002cf c04d      	RJMP _0x87
0002d0 d21a      	RCALL SUBOPT_0xB
0002d1 01de      	MOVW R26,R28
0002d2 969e      	ADIW R26,46
0002d3 d1c9      	RCALL _strcmp
0002d4 30e0      	CPI  R30,0
0002d5 f009      	BREQ PC+2
0002d6 c046      	RJMP _0x88
                +
0002d7 e7e6     +LDI R30 , LOW ( _0x86 + ( 22 ) )
0002d8 e0f1     +LDI R31 , HIGH ( _0x86 + ( 22 ) )
                 	__POINTW1MN _0x86,22
0002d9 d208      	RCALL SUBOPT_0x9
0002da 01de      	MOVW R26,R28
0002db 9698      	ADIW R26,40
0002dc df8b      	RCALL _enterValueWithKeypad
0002dd 9730      	SBIW R30,0
0002de f1f1      	BREQ _0x89
0002df 9722      	SBIW R28,2
                 ;	enteredPC -> Y+46
                 ;	enteredStudentID -> Y+42
                 ;	enteredNewPC -> Y+38
                 ;	student -> Y+24
                 ;	admin -> Y+10
                 ;	i -> Y+8
                 ;	j -> Y+0
0002e0 e0e0      	LDI  R30,LOW(0)
0002e1 83e8      	STD  Y+0,R30
0002e2 83e9      	STD  Y+0+1,R30
                 _0x8B:
0002e3 81a8      	LD   R26,Y
0002e4 81b9      	LDD  R27,Y+1
0002e5 9715      	SBIW R26,5
0002e6 f5ac      	BRGE _0x8C
0002e7 d1e5      	RCALL SUBOPT_0x5
0002e8 01fe      	MOVW R30,R28
0002e9 96b0      	ADIW R30,32
0002ea 93fa      	ST   -Y,R31
0002eb 93ea      	ST   -Y,R30
0002ec d1ea      	RCALL SUBOPT_0x7
0002ed 01fe      	MOVW R30,R28
0002ee 967e      	ADIW R30,30
0002ef 93fa      	ST   -Y,R31
0002f0 93ea      	ST   -Y,R30
0002f1 d1fe      	RCALL SUBOPT_0xC
0002f2 f479      	BRNE _0x8D
                +
0002f3 e8e9     +LDI R30 , LOW ( _0x86 + ( 41 ) )
0002f4 e0f1     +LDI R31 , HIGH ( _0x86 + ( 41 ) )
                 	__POINTW1MN _0x86,41
0002f5 d1ec      	RCALL SUBOPT_0x9
0002f6 d1fe      	RCALL SUBOPT_0xD
0002f7 f049      	BREQ _0x8E
0002f8 933a      	ST   -Y,R19
0002f9 932a      	ST   -Y,R18
0002fa 01de      	MOVW R26,R28
0002fb 9698      	ADIW R26,40
0002fc df12      	RCALL _EE_WriteString
                +
0002fd eae2     +LDI R30 , LOW ( _0x86 + ( 66 ) )
0002fe e0f1     +LDI R31 , HIGH ( _0x86 + ( 66 ) )
                 	__POINTW1MN _0x86,66
0002ff d1fa      	RCALL SUBOPT_0xE
000300 c01b      	RJMP _0x8C
                 _0x8E:
000301 c012      	RJMP _0x8F
                 _0x8D:
000302 d1cf      	RCALL SUBOPT_0x6
000303 d1ec      	RCALL SUBOPT_0xC
000304 f479      	BRNE _0x90
                +
000305 ebe7     +LDI R30 , LOW ( _0x86 + ( 87 ) )
000306 e0f1     +LDI R31 , HIGH ( _0x86 + ( 87 ) )
                 	__POINTW1MN _0x86,87
000307 d1da      	RCALL SUBOPT_0x9
000308 d1de      	RCALL SUBOPT_0xA
000309 d1eb      	RCALL SUBOPT_0xD
00030a f049      	BREQ _0x91
00030b 931a      	ST   -Y,R17
00030c 930a      	ST   -Y,R16
00030d 01de      	MOVW R26,R28
00030e 9698      	ADIW R26,40
00030f deff      	RCALL _EE_WriteString
                +
000310 eceb     +LDI R30 , LOW ( _0x86 + ( 107 ) )
000311 e0f1     +LDI R31 , HIGH ( _0x86 + ( 107 ) )
                 	__POINTW1MN _0x86,107
000312 d1e7      	RCALL SUBOPT_0xE
000313 c008      	RJMP _0x8C
                 _0x91:
                 _0x90:
                 _0x8F:
                +
000314 5f2c     +SUBI R18 , LOW ( - 4 )
000315 4f3f     +SBCI R19 , HIGH ( - 4 )
                 	__ADDWRN 18,19,4
000316 81e8      	LD   R30,Y
000317 81f9      	LDD  R31,Y+1
000318 9631      	ADIW R30,1
000319 83e8      	ST   Y,R30
00031a 83f9      	STD  Y+1,R31
00031b cfc7      	RJMP _0x8B
                 _0x8C:
00031c 9622      	ADIW R28,2
                 _0x89:
                 _0x88:
                 _0x87:
00031d 2e04      	MOV  R0,R20
00031e 2a05      	OR   R0,R21
00031f f449      	BRNE _0x92
                +
000320 eded     +LDI R30 , LOW ( _0x86 + ( 125 ) )
000321 e0f1     +LDI R31 , HIGH ( _0x86 + ( 125 ) )
                 	__POINTW1MN _0x86,125
000322 93fa      	ST   -Y,R31
000323 93ea      	ST   -Y,R30
000324 eba8      	LDI  R26,LOW(3000)
000325 e0bb      	LDI  R27,HIGH(3000)
000326 df38      	RCALL _displayMessage
000327 df65      	RCALL _generateTone
000328 df64      	RCALL _generateTone
                 _0x92:
000329 d1d8      	RCALL SUBOPT_0xF
00032a d218      	RCALL __LOADLOCR6
00032b 96e0      	ADIW R28,48
00032c 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x86:
000160           	.BYTE 0x8B
                 
                 	.CSEG
                 _setPCMode:
                 ; .FSTART _setPCMode
00032d 976d      	SBIW R28,29
00032e d20d      	RCALL __SAVELOCR6
                 ;	enteredID -> Y+30
                 ;	currentUser -> Y+16
                 ;	address -> R16,R17
                 ;	userFound -> R18,R19
                 ;	i -> R20,R21
                 ;	enteredNewPC -> Y+11
                 ;	reenteredNewPC -> Y+6
00032f d186      	RCALL SUBOPT_0x1
000330 d115      	RCALL _lcd_clear
                +
000331 eeeb     +LDI R30 , LOW ( _0x93 + ( 0 ) )
000332 e0f1     +LDI R31 , HIGH ( _0x93 + ( 0 ) )
                 	__POINTW1MN _0x93,0
000333 d1ae      	RCALL SUBOPT_0x9
000334 d1b2      	RCALL SUBOPT_0xA
000335 01de      	MOVW R26,R28
000336 965e      	ADIW R26,30
000337 df30      	RCALL _enterValueWithKeypad
000338 9730      	SBIW R30,0
000339 f409      	BRNE PC+2
00033a c05f      	RJMP _0x94
00033b 9725      	SBIW R28,5
                 ;	enteredID -> Y+35
                 ;	currentUser -> Y+21
                 ;	enteredNewPC -> Y+16
                 ;	reenteredNewPC -> Y+11
                 ;	enteredOldPC -> Y+0
                +
00033c e040     +LDI R20 , LOW ( 0 )
00033d e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x96:
                +
00033e 3045     +CPI R20 , LOW ( 5 )
00033f e0e0     +LDI R30 , HIGH ( 5 )
000340 075e     +CPC R21 , R30
                 	__CPWRN 20,21,5
000341 f00c      	BRLT PC+2
000342 c04d      	RJMP _0x97
000343 d1c2      	RCALL SUBOPT_0x10
000344 01fe      	MOVW R30,R28
000345 967d      	ADIW R30,29
000346 d1c4      	RCALL SUBOPT_0x11
000347 01fe      	MOVW R30,R28
000348 967b      	ADIW R30,27
000349 93fa      	ST   -Y,R31
00034a 93ea      	ST   -Y,R30
00034b 01de      	MOVW R26,R28
00034c 9695      	ADIW R26,37
00034d d14f      	RCALL _strcmp
00034e 30e0      	CPI  R30,0
00034f f5e1      	BRNE _0x98
000350 d1bf      	RCALL SUBOPT_0x12
000351 01fe      	MOVW R30,R28
000352 96b1      	ADIW R30,33
000353 d1b7      	RCALL SUBOPT_0x11
                +
000354 efea     +LDI R30 , LOW ( _0x93 + ( 15 ) )
000355 e0f1     +LDI R31 , HIGH ( _0x93 + ( 15 ) )
                 	__POINTW1MN _0x93,15
000356 d18b      	RCALL SUBOPT_0x9
000357 d18f      	RCALL SUBOPT_0xA
000358 d1bc      	RCALL SUBOPT_0x13
000359 f179      	BREQ _0x99
00035a 01fe      	MOVW R30,R28
00035b 967f      	ADIW R30,31
00035c 93fa      	ST   -Y,R31
00035d 93ea      	ST   -Y,R30
00035e d1ba      	RCALL SUBOPT_0x14
00035f f521      	BRNE _0x9A
                +
000360 e0e8     +LDI R30 , LOW ( _0x93 + ( 29 ) )
000361 e0f2     +LDI R31 , HIGH ( _0x93 + ( 29 ) )
                 	__POINTW1MN _0x93,29
000362 d17f      	RCALL SUBOPT_0x9
000363 d183      	RCALL SUBOPT_0xA
000364 01de      	MOVW R26,R28
000365 9650      	ADIW R26,16
000366 df01      	RCALL _enterValueWithKeypad
000367 d0de      	RCALL _lcd_clear
                +
000368 e1e6     +LDI R30 , LOW ( _0x93 + ( 43 ) )
000369 e0f2     +LDI R31 , HIGH ( _0x93 + ( 43 ) )
                 	__POINTW1MN _0x93,43
00036a d177      	RCALL SUBOPT_0x9
00036b d17b      	RCALL SUBOPT_0xA
00036c 01de      	MOVW R26,R28
00036d 961b      	ADIW R26,11
00036e def9      	RCALL _enterValueWithKeypad
00036f d162      	RCALL SUBOPT_0x6
000370 01de      	MOVW R26,R28
000371 961d      	ADIW R26,13
000372 d12a      	RCALL _strcmp
000373 30e0      	CPI  R30,0
000374 f449      	BRNE _0x9B
000375 931a      	ST   -Y,R17
000376 930a      	ST   -Y,R16
000377 01de      	MOVW R26,R28
000378 9652      	ADIW R26,18
000379 de95      	RCALL _EE_WriteString
                +
00037a e2e7     +LDI R30 , LOW ( _0x93 + ( 60 ) )
00037b e0f2     +LDI R31 , HIGH ( _0x93 + ( 60 ) )
                 	__POINTW1MN _0x93,60
00037c d165      	RCALL SUBOPT_0x9
00037d c005      	RJMP _0x9C
                 _0x9B:
                +
00037e e3e5     +LDI R30 , LOW ( _0x93 + ( 74 ) )
00037f e0f2     +LDI R31 , HIGH ( _0x93 + ( 74 ) )
                 	__POINTW1MN _0x93,74
000380 d161      	RCALL SUBOPT_0x9
000381 df0b      	RCALL _generateTone
000382 df0a      	RCALL _generateTone
                 _0x9C:
000383 c005      	RJMP _0x9D
                 _0x9A:
                +
000384 e5e4     +LDI R30 , LOW ( _0x93 + ( 105 ) )
000385 e0f2     +LDI R31 , HIGH ( _0x93 + ( 105 ) )
                 	__POINTW1MN _0x93,105
000386 d15b      	RCALL SUBOPT_0x9
000387 df05      	RCALL _generateTone
000388 df04      	RCALL _generateTone
                 _0x9D:
                 _0x99:
                +
000389 e021     +LDI R18 , LOW ( 1 )
00038a e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
00038b c004      	RJMP _0x97
                 _0x98:
00038c d191      	RCALL SUBOPT_0x15
                +
00038d 5f4f     +SUBI R20 , LOW ( - 1 )
00038e 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00038f cfae      	RJMP _0x96
                 _0x97:
000390 2e02      	MOV  R0,R18
000391 2a03      	OR   R0,R19
000392 f429      	BRNE _0x9E
                +
000393 e7e2     +LDI R30 , LOW ( _0x93 + ( 135 ) )
000394 e0f2     +LDI R31 , HIGH ( _0x93 + ( 135 ) )
                 	__POINTW1MN _0x93,135
000395 d14c      	RCALL SUBOPT_0x9
000396 def6      	RCALL _generateTone
000397 def5      	RCALL _generateTone
                 _0x9E:
000398 d169      	RCALL SUBOPT_0xF
000399 9625      	ADIW R28,5
                 _0x94:
00039a d1a8      	RCALL __LOADLOCR6
00039b 96a3      	ADIW R28,35
00039c 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x93:
0001eb           	.BYTE 0x90
                 
                 	.CSEG
                 _openCloseDoorMode:
                 ; .FSTART _openCloseDoorMode
00039d 9762      	SBIW R28,18
00039e d19d      	RCALL __SAVELOCR6
                 ;	enteredID -> Y+20
                 ;	currentUser -> Y+6
                 ;	address -> R16,R17
                 ;	userFound -> R18,R19
                 ;	i -> R20,R21
00039f d116      	RCALL SUBOPT_0x1
                +
0003a0 e7eb     +LDI R30 , LOW ( _0x9F + ( 0 ) )
0003a1 e0f2     +LDI R31 , HIGH ( _0x9F + ( 0 ) )
                 	__POINTW1MN _0x9F,0
0003a2 d13f      	RCALL SUBOPT_0x9
0003a3 d143      	RCALL SUBOPT_0xA
0003a4 01de      	MOVW R26,R28
0003a5 9654      	ADIW R26,20
0003a6 dec1      	RCALL _enterValueWithKeypad
0003a7 9730      	SBIW R30,0
0003a8 f1c9      	BREQ _0xA0
0003a9 9724      	SBIW R28,4
                 ;	enteredID -> Y+24
                 ;	currentUser -> Y+10
                 ;	enteredPC -> Y+0
                +
0003aa e040     +LDI R20 , LOW ( 0 )
0003ab e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0xA2:
                +
0003ac 3045     +CPI R20 , LOW ( 5 )
0003ad e0e0     +LDI R30 , HIGH ( 5 )
0003ae 075e     +CPC R21 , R30
                 	__CPWRN 20,21,5
0003af f58c      	BRGE _0xA3
0003b0 931a      	ST   -Y,R17
0003b1 930a      	ST   -Y,R16
0003b2 01fe      	MOVW R30,R28
0003b3 963c      	ADIW R30,12
0003b4 d113      	RCALL SUBOPT_0x4
0003b5 d150      	RCALL SUBOPT_0x10
0003b6 d134      	RCALL SUBOPT_0xB
0003b7 e0a4      	LDI  R26,LOW(4)
0003b8 e0b0      	LDI  R27,0
0003b9 de69      	RCALL _EE_ReadString
0003ba d117      	RCALL SUBOPT_0x6
0003bb 01de      	MOVW R26,R28
0003bc 965a      	ADIW R26,26
0003bd d0df      	RCALL _strcmp
0003be 30e0      	CPI  R30,0
0003bf f4e9      	BRNE _0xA4
0003c0 d14f      	RCALL SUBOPT_0x12
0003c1 01fe      	MOVW R30,R28
0003c2 9676      	ADIW R30,22
0003c3 d147      	RCALL SUBOPT_0x11
                +
0003c4 e8eb     +LDI R30 , LOW ( _0x9F + ( 16 ) )
0003c5 e0f2     +LDI R31 , HIGH ( _0x9F + ( 16 ) )
                 	__POINTW1MN _0x9F,16
0003c6 d11b      	RCALL SUBOPT_0x9
0003c7 d11f      	RCALL SUBOPT_0xA
0003c8 d14c      	RCALL SUBOPT_0x13
0003c9 f081      	BREQ _0xA5
0003ca d112      	RCALL SUBOPT_0x8
0003cb d14d      	RCALL SUBOPT_0x14
0003cc f449      	BRNE _0xA6
0003cd d078      	RCALL _lcd_clear
                +
0003ce e9ab     +LDI R26 , LOW ( _0x9F + ( 32 ) )
0003cf e0b2     +LDI R27 , HIGH ( _0x9F + ( 32 ) )
                 	__POINTW2MN _0x9F,32
0003d0 d092      	RCALL _lcd_puts
0003d1 01de      	MOVW R26,R28
0003d2 961a      	ADIW R26,10
0003d3 d08f      	RCALL _lcd_puts
0003d4 9ab8      	SBI  0x17,0
0003d5 c004      	RJMP _0xA9
                 _0xA6:
                +
0003d6 eae5     +LDI R30 , LOW ( _0x9F + ( 42 ) )
0003d7 e0f2     +LDI R31 , HIGH ( _0x9F + ( 42 ) )
                 	__POINTW1MN _0x9F,42
0003d8 d109      	RCALL SUBOPT_0x9
0003d9 deb3      	RCALL _generateTone
                 _0xA9:
                 _0xA5:
                +
0003da e021     +LDI R18 , LOW ( 1 )
0003db e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
0003dc c004      	RJMP _0xA3
                 _0xA4:
0003dd d140      	RCALL SUBOPT_0x15
                +
0003de 5f4f     +SUBI R20 , LOW ( - 1 )
0003df 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
0003e0 cfcb      	RJMP _0xA2
                 _0xA3:
0003e1 9624      	ADIW R28,4
                 _0xA0:
0003e2 2e02      	MOV  R0,R18
0003e3 2a03      	OR   R0,R19
0003e4 f429      	BRNE _0xAA
                +
0003e5 ebe4     +LDI R30 , LOW ( _0x9F + ( 57 ) )
0003e6 e0f2     +LDI R31 , HIGH ( _0x9F + ( 57 ) )
                 	__POINTW1MN _0x9F,57
0003e7 d0fa      	RCALL SUBOPT_0x9
0003e8 dea4      	RCALL _generateTone
0003e9 dea3      	RCALL _generateTone
                 _0xAA:
0003ea e8a8      	LDI  R26,LOW(5000)
0003eb e1b3      	LDI  R27,HIGH(5000)
0003ec d15d      	RCALL _delay_ms
0003ed 98b8      	CBI  0x17,0
0003ee d057      	RCALL _lcd_clear
0003ef d153      	RCALL __LOADLOCR6
0003f0 9668      	ADIW R28,24
0003f1 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x9F:
00027b           	.BYTE 0x42
                 ;void main(void)
                 ; 0000 000B {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 000C char input;
                 ; 0000 000D 
                 ; 0000 000E // Initialize Hardware
                 ; 0000 000F initializeHardware();
                 ;	input -> R17
0003f2 dd81      	RCALL _initializeHardware
                 ; 0000 0010 
                 ; 0000 0011 // Initialize user data in EEPROM
                 ; 0000 0012 initializeUsers();
0003f3 de51      	RCALL _initializeUsers
                 ; 0000 0013 
                 ; 0000 0014 // Initialize interrupts for various modes
                 ; 0000 0015 initializeIntrrupts();
0003f4 dd8f      	RCALL _initializeIntrrupts
                 ; 0000 0016 
                 ; 0000 0017 while (1)
                 _0xAD:
                 ; 0000 0018 {
                 ; 0000 0019 input = keypad();
0003f5 ddae      	RCALL _keypad
0003f6 2f1e      	MOV  R17,R30
                 ; 0000 001A if (input != '*')
0003f7 321a      	CPI  R17,42
0003f8 f7e1      	BRNE _0xAD
                 ; 0000 001B continue;
                 ; 0000 001C openCloseDoorMode();
0003f9 dfa3      	RCALL _openCloseDoorMode
                 ; 0000 001D }
0003fa cffa      	RJMP _0xAD
                 ; 0000 001E }
                 _0xB1:
0003fb cfff      	RJMP _0xB1
                 ; .FEND
                 ;interrupt[3] void setPC(void)
                 ; 0000 0021 {
                 _setPC:
                 ; .FSTART _setPC
0003fc d126      	RCALL SUBOPT_0x16
                 ; 0000 0022 setPCMode();
0003fd df2f      	RCALL _setPCMode
                 ; 0000 0023 }
0003fe c005      	RJMP _0xB2
                 ; .FEND
                 ;interrupt[19] void openCloseDoor(void)
                 ; 0000 0026 {
                 _openCloseDoor:
                 ; .FSTART _openCloseDoor
0003ff d123      	RCALL SUBOPT_0x16
                 ; 0000 0027 openCloseDoorMode();
000400 df9c      	RCALL _openCloseDoorMode
                 ; 0000 0028 }
000401 c002      	RJMP _0xB2
                 ; .FEND
                 ;interrupt[2] void admin(void)
                 ; 0000 002B {
                 _admin:
                 ; .FSTART _admin
000402 d120      	RCALL SUBOPT_0x16
                 ; 0000 002C adminMode();
000403 de93      	RCALL _adminMode
                 ; 0000 002D }
                 _0xB2:
000404 91e9      	LD   R30,Y+
000405 bfef      	OUT  SREG,R30
000406 91f9      	LD   R31,Y+
000407 91e9      	LD   R30,Y+
000408 91b9      	LD   R27,Y+
000409 91a9      	LD   R26,Y+
00040a 9199      	LD   R25,Y+
00040b 9189      	LD   R24,Y+
00040c 9179      	LD   R23,Y+
00040d 9169      	LD   R22,Y+
00040e 90f9      	LD   R15,Y+
00040f 9019      	LD   R1,Y+
000410 9009      	LD   R0,Y+
000411 9518      	RETI
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
000412 931a      	ST   -Y,R17
000413 2f1a      	MOV  R17,R26
000414 b3eb      	IN   R30,0x1B
000415 70ef      	ANDI R30,LOW(0xF)
000416 2fae      	MOV  R26,R30
000417 2fe1      	MOV  R30,R17
000418 7fe0      	ANDI R30,LOW(0xF0)
000419 2bea      	OR   R30,R26
00041a bbeb      	OUT  0x1B,R30
                +
00041b e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00041c 958a     +DEC R24
00041d f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00041e 9ada      	SBI  0x1B,2
                +
00041f e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000420 958a     +DEC R24
000421 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000422 98da      	CBI  0x1B,2
                +
000423 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000424 958a     +DEC R24
000425 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000426 c074      	RJMP _0x2080001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000427 93aa      	ST   -Y,R26
000428 81a8      	LD   R26,Y
000429 dfe8      	RCALL __lcd_write_nibble_G100
00042a 81e8          ld    r30,y
00042b 95e2          swap  r30
00042c 83e8          st    y,r30
00042d 81a8      	LD   R26,Y
00042e dfe3      	RCALL __lcd_write_nibble_G100
                +
00042f e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
000430 958a     +DEC R24
000431 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
000432 9621      	ADIW R28,1
000433 9508      	RET
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000434 931a      	ST   -Y,R17
000435 930a      	ST   -Y,R16
000436 2f1a      	MOV  R17,R26
000437 810a      	LDD  R16,Y+2
000438 2fe1      	MOV  R30,R17
000439 e0f0      	LDI  R31,0
00043a 5fed      	SUBI R30,LOW(-__base_y_G100)
00043b 4ffc      	SBCI R31,HIGH(-__base_y_G100)
00043c 81e0      	LD   R30,Z
00043d 0fe0      	ADD  R30,R16
00043e 2fae      	MOV  R26,R30
00043f dfe7      	RCALL __lcd_write_data
000440 2e50      	MOV  R5,R16
000441 2e41      	MOV  R4,R17
000442 8119      	LDD  R17,Y+1
000443 8108      	LDD  R16,Y+0
000444 9623      	ADIW R28,3
000445 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000446 e0a2      	LDI  R26,LOW(2)
000447 d0e9      	RCALL SUBOPT_0x17
000448 e0ac      	LDI  R26,LOW(12)
000449 dfdd      	RCALL __lcd_write_data
00044a e0a1      	LDI  R26,LOW(1)
00044b d0e5      	RCALL SUBOPT_0x17
00044c e0e0      	LDI  R30,LOW(0)
00044d 2e4e      	MOV  R4,R30
00044e 2e5e      	MOV  R5,R30
00044f 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000450 931a      	ST   -Y,R17
000451 2f1a      	MOV  R17,R26
000452 301a      	CPI  R17,10
000453 f011      	BREQ _0x2000005
000454 1457      	CP   R5,R7
000455 f038      	BRLO _0x2000004
                 _0x2000005:
000456 e0e0      	LDI  R30,LOW(0)
000457 93ea      	ST   -Y,R30
000458 9443      	INC  R4
000459 2da4      	MOV  R26,R4
00045a dfd9      	RCALL _lcd_gotoxy
00045b 301a      	CPI  R17,10
00045c f1f1      	BREQ _0x2080001
                 _0x2000004:
00045d 9453      	INC  R5
00045e 9ad8      	SBI  0x1B,0
00045f 2fa1      	MOV  R26,R17
000460 dfc6      	RCALL __lcd_write_data
000461 98d8      	CBI  0x1B,0
000462 c038      	RJMP _0x2080001
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
000463 d0da      	RCALL __SAVELOCR4
000464 019d      	MOVW R18,R26
                 _0x2000008:
000465 01d9      	MOVW R26,R18
                +
000466 5f2f     +SUBI R18 , LOW ( - 1 )
000467 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000468 91ec      	LD   R30,X
000469 2f1e      	MOV  R17,R30
00046a 30e0      	CPI  R30,0
00046b f019      	BREQ _0x200000A
00046c 2fa1      	MOV  R26,R17
00046d dfe2      	RCALL _lcd_putchar
00046e cff6      	RJMP _0x2000008
                 _0x200000A:
                 _0x2080002:
00046f d0d5      	RCALL __LOADLOCR4
000470 9624      	ADIW R28,4
000471 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000472 931a      	ST   -Y,R17
000473 2f1a      	MOV  R17,R26
000474 b3ea      	IN   R30,0x1A
000475 6fe0      	ORI  R30,LOW(0xF0)
000476 bbea      	OUT  0x1A,R30
000477 9ad2      	SBI  0x1A,2
000478 9ad0      	SBI  0x1A,0
000479 9ad1      	SBI  0x1A,1
00047a 98da      	CBI  0x1B,2
00047b 98d8      	CBI  0x1B,0
00047c 98d9      	CBI  0x1B,1
00047d 2e71      	MOV  R7,R17
00047e 2fe1      	MOV  R30,R17
00047f 58e0      	SUBI R30,-LOW(128)
                +
000480 93e0 0305+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
000482 2fe1      	MOV  R30,R17
000483 54e0      	SUBI R30,-LOW(192)
                +
000484 93e0 0306+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000486 e1a4      	LDI  R26,LOW(20)
000487 e0b0      	LDI  R27,0
000488 d0c1      	RCALL _delay_ms
000489 d0ab      	RCALL SUBOPT_0x18
00048a d0aa      	RCALL SUBOPT_0x18
00048b d0a9      	RCALL SUBOPT_0x18
00048c e2a0      	LDI  R26,LOW(32)
00048d df84      	RCALL __lcd_write_nibble_G100
                +
00048e ec88     +LDI R24 , LOW ( 200 )
00048f e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000490 9701     +SBIW R24 , 1
000491 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000492 e2a8      	LDI  R26,LOW(40)
000493 df93      	RCALL __lcd_write_data
000494 e0a4      	LDI  R26,LOW(4)
000495 df91      	RCALL __lcd_write_data
000496 e8a5      	LDI  R26,LOW(133)
000497 df8f      	RCALL __lcd_write_data
000498 e0a6      	LDI  R26,LOW(6)
000499 df8d      	RCALL __lcd_write_data
00049a dfab      	RCALL _lcd_clear
                 _0x2080001:
00049b 9119      	LD   R17,Y+
00049c 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _strcmp:
                 ; .FSTART _strcmp
00049d 93ba      	ST   -Y,R27
00049e 93aa      	ST   -Y,R26
00049f 91e9          ld   r30,y+
0004a0 91f9          ld   r31,y+
0004a1 91a9          ld   r26,y+
0004a2 91b9          ld   r27,y+
                 strcmp0:
0004a3 916d          ld   r22,x+
0004a4 9171          ld   r23,z+
0004a5 1767          cp   r22,r23
0004a6 f421          brne strcmp1
0004a7 2366          tst  r22
0004a8 f7d1          brne strcmp0
                 strcmp3:
0004a9 27ee          clr  r30
0004aa 9508          ret
                 strcmp1:
0004ab 1b67          sub  r22,r23
0004ac f3e1          breq strcmp3
0004ad e0e1          ldi  r30,1
0004ae f408          brcc strcmp2
0004af 50e2          subi r30,2
                 strcmp2:
0004b0 9508          ret
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _users:
0002bd           	.BYTE 0x46
                 __base_y_G100:
000303           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
0004b1 d08c      	RCALL __SAVELOCR4
0004b2 018d      	MOVW R16,R26
                +
0004b3 812c     +LDD R18 , Y + 4
0004b4 813d     +LDD R19 , Y + 4 + 1
                 	__GETWRS 18,19,4
0004b5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1:
                +
0004b6 e000     +LDI R16 , LOW ( 0 )
0004b7 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
0004b8 e020     +LDI R18 , LOW ( 0 )
0004b9 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
0004ba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x2:
0004bb 931a      	ST   -Y,R17
0004bc 930a      	ST   -Y,R16
                +
0004bd e0ae     +LDI R26 , 14
0004be 9fa2     +MUL R26 , R18
0004bf 01f0     +MOVW R30 , R0
0004c0 9fa3     +MUL R26 , R19
0004c1 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,14
0004c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
0004c3 01df      	MOVW R26,R30
0004c4 dd4a      	RCALL _EE_WriteString
                +
0004c5 5f0c     +SUBI R16 , LOW ( - 4 )
0004c6 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
0004c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4:
0004c8 93fa      	ST   -Y,R31
0004c9 93ea      	ST   -Y,R30
0004ca e0a6      	LDI  R26,LOW(6)
0004cb e0b0      	LDI  R27,0
0004cc cd56      	RJMP _EE_ReadString
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
                +
0004cd 5f2a     +SUBI R18 , LOW ( - 6 )
0004ce 4f3f     +SBCI R19 , HIGH ( - 6 )
                 	__ADDWRN 18,19,6
0004cf 933a      	ST   -Y,R19
0004d0 932a      	ST   -Y,R18
0004d1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x6:
0004d2 01fe      	MOVW R30,R28
0004d3 9670      	ADIW R30,16
0004d4 93fa      	ST   -Y,R31
0004d5 93ea      	ST   -Y,R30
0004d6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x7:
0004d7 e0a4      	LDI  R26,LOW(4)
0004d8 e0b0      	LDI  R27,0
0004d9 dd49      	RCALL _EE_ReadString
                +
0004da 5f2c     +SUBI R18 , LOW ( - 4 )
0004db 4f3f     +SBCI R19 , HIGH ( - 4 )
                 	__ADDWRN 18,19,4
0004dc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
0004dd 01fe      	MOVW R30,R28
0004de 9674      	ADIW R30,20
0004df 93fa      	ST   -Y,R31
0004e0 93ea      	ST   -Y,R30
0004e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:58 WORDS
                 SUBOPT_0x9:
0004e2 93fa      	ST   -Y,R31
0004e3 93ea      	ST   -Y,R30
0004e4 eea8      	LDI  R26,LOW(1000)
0004e5 e0b3      	LDI  R27,HIGH(1000)
0004e6 cd78      	RJMP _displayMessage
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0xA:
0004e7 e0e0      	LDI  R30,LOW(0)
0004e8 93ea      	ST   -Y,R30
0004e9 e0a1      	LDI  R26,LOW(1)
0004ea cf49      	RJMP _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
0004eb 01fe      	MOVW R30,R28
0004ec 9672      	ADIW R30,18
0004ed 93fa      	ST   -Y,R31
0004ee 93ea      	ST   -Y,R30
0004ef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
0004f0 01de      	MOVW R26,R28
0004f1 969c      	ADIW R26,44
0004f2 dfaa      	RCALL _strcmp
0004f3 30e0      	CPI  R30,0
0004f4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
0004f5 01de      	MOVW R26,R28
0004f6 9696      	ADIW R26,38
0004f7 dd70      	RCALL _enterValueWithKeypad
0004f8 9730      	SBIW R30,0
0004f9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xE:
0004fa 93fa      	ST   -Y,R31
0004fb 93ea      	ST   -Y,R30
0004fc eba8      	LDI  R26,LOW(3000)
0004fd e0bb      	LDI  R27,HIGH(3000)
0004fe dd60      	RCALL _displayMessage
                +
0004ff e041     +LDI R20 , LOW ( 1 )
000500 e050     +LDI R21 , HIGH ( 1 )
                 	__GETWRN 20,21,1
000501 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
000502 e8a8      	LDI  R26,LOW(5000)
000503 e1b3      	LDI  R27,HIGH(5000)
000504 d045      	RCALL _delay_ms
000505 cf40      	RJMP _lcd_clear
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
                +
000506 5f0a     +SUBI R16 , LOW ( - 6 )
000507 4f1f     +SBCI R17 , HIGH ( - 6 )
                 	__ADDWRN 16,17,6
000508 931a      	ST   -Y,R17
000509 930a      	ST   -Y,R16
00050a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x11:
00050b 93fa      	ST   -Y,R31
00050c 93ea      	ST   -Y,R30
00050d e0a4      	LDI  R26,LOW(4)
00050e e0b0      	LDI  R27,0
00050f cd13      	RJMP _EE_ReadString
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
                +
000510 5f0c     +SUBI R16 , LOW ( - 4 )
000511 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
000512 931a      	ST   -Y,R17
000513 930a      	ST   -Y,R16
000514 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13:
000515 01de      	MOVW R26,R28
000516 dd51      	RCALL _enterValueWithKeypad
000517 9730      	SBIW R30,0
000518 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x14:
000519 01de      	MOVW R26,R28
00051a 9612      	ADIW R26,2
00051b df81      	RCALL _strcmp
00051c 30e0      	CPI  R30,0
00051d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15:
                +
00051e 5f0c     +SUBI R16 , LOW ( - 4 )
00051f 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                +
000520 5f0c     +SUBI R16 , LOW ( - 4 )
000521 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
000522 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x16:
000523 920a      	ST   -Y,R0
000524 921a      	ST   -Y,R1
000525 92fa      	ST   -Y,R15
000526 936a      	ST   -Y,R22
000527 937a      	ST   -Y,R23
000528 938a      	ST   -Y,R24
000529 939a      	ST   -Y,R25
00052a 93aa      	ST   -Y,R26
00052b 93ba      	ST   -Y,R27
00052c 93ea      	ST   -Y,R30
00052d 93fa      	ST   -Y,R31
00052e b7ef      	IN   R30,SREG
00052f 93ea      	ST   -Y,R30
000530 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x17:
000531 def5      	RCALL __lcd_write_data
000532 e0a3      	LDI  R26,LOW(3)
000533 e0b0      	LDI  R27,0
000534 c015      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x18:
000535 e3a0      	LDI  R26,LOW(48)
000536 dedb      	RCALL __lcd_write_nibble_G100
                +
000537 ec88     +LDI R24 , LOW ( 200 )
000538 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000539 9701     +SBIW R24 , 1
00053a f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00053b 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
00053c 935a      	ST   -Y,R21
                 __SAVELOCR5:
00053d 934a      	ST   -Y,R20
                 __SAVELOCR4:
00053e 933a      	ST   -Y,R19
                 __SAVELOCR3:
00053f 932a      	ST   -Y,R18
                 __SAVELOCR2:
000540 931a      	ST   -Y,R17
000541 930a      	ST   -Y,R16
000542 9508      	RET
                 
                 __LOADLOCR6:
000543 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000544 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000545 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000546 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000547 8119      	LDD  R17,Y+1
000548 8108      	LD   R16,Y
000549 9508      	RET
                 
                 _delay_ms:
00054a 9610      	adiw r26,0
00054b f039      	breq __delay_ms1
                 __delay_ms0:
00054c 95a8      	wdr
                +
00054d ed80     +LDI R24 , LOW ( 0x7D0 )
00054e e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00054f 9701     +SBIW R24 , 1
000550 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000551 9711      	sbiw r26,1
000552 f7c9      	brne __delay_ms0
                 __delay_ms1:
000553 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  14 r1 :   3 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   2 
r16:  43 r17:  49 r18:  32 r19:  26 r20:  14 r21:  14 r22:   8 r23:   5 
r24:  23 r25:   7 r26: 119 r27:  28 r28:  49 r29:   1 r30: 233 r31:  53 
x  :  12 y  : 138 z  :  13 
Registers used: 25 out of 35 (71.4%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   3 add   :   5 
adiw  :  47 and   :   0 andi  :   4 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  15 
brge  :   4 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   1 
brlt  :   1 brmi  :   0 brne  :  39 brpl  :   0 brsh  :   1 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   0 
cbi   :  14 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   3 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   3 cpc   :   4 cpi   :  28 cpse  :   0 dec   :   5 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :  15 inc   :   2 jmp   :  23 ld    :  33 ldd   :  24 ldi   : 154 
lds   :   0 lpm   :   7 lsl   :   0 lsr   :   0 mov   :  24 movw  :  56 
mul   :   2 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   4 
ori   :   7 out   :  24 pop   :   2 push  :   2 rcall : 179 ret   :  52 
reti  :   1 rjmp  :  53 rol   :   0 ror   :   0 sbc   :   0 sbci  :  21 
sbi   :  22 sbic  :   2 sbis  :  12 sbiw  :  21 sbr   :   0 sbrc  :   0 
sbrs  :   0 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  91 std   :   8 sts   :   2 sub   :   1 subi  :  27 swap  :   1 
tst   :   1 wdr   :   1 
Instructions used: 51 out of 116 (44.0%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000aa8   2158    570   2728   16384  16.7%
[.dseg] 0x000060 0x000307      0    423    423    1024  41.3%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 4 warnings

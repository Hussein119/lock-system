
AVRASM ver. 2.1.30  E:\Seventh term\Embedded Systems\Project #1\Simulation & Code (main)\lock-system\Code\Debug\List\Project #1 lock system.asm Wed Dec 20 13:10:24 2023

E:\Seventh term\Embedded Systems\Project #1\Simulation & Code (main)\lock-system\Code\Debug\List\Project #1 lock system.asm(1418): warning: Register r5 already defined by the .DEF directive
E:\Seventh term\Embedded Systems\Project #1\Simulation & Code (main)\lock-system\Code\Debug\List\Project #1 lock system.asm(1419): warning: Register r4 already defined by the .DEF directive
E:\Seventh term\Embedded Systems\Project #1\Simulation & Code (main)\lock-system\Code\Debug\List\Project #1 lock system.asm(1420): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V4.00a 
                 ;(C) Copyright 1998-2023 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU SPMCSR=0x37
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.EQU __FLASH_PAGE_SIZE=0x40
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0147 	JMP  __RESET
000002 940c 0444 	JMP  _admin
000004 940c 0441 	JMP  _setPC
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G102:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G102:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x16:
000033 7250
000034 666f
000035 0000
000036 3131      	.DB  0x50,0x72,0x6F,0x66,0x0,0x0,0x31,0x31
000037 0031
000038 3032
000039 0033
00003a 6841      	.DB  0x31,0x0,0x32,0x30,0x33,0x0,0x41,0x68
00003b 656d
00003c 0064
00003d 3231
00003e 0036      	.DB  0x6D,0x65,0x64,0x0,0x31,0x32,0x36,0x0
00003f 3231
000040 0039
000041 6d41
000042 0072      	.DB  0x31,0x32,0x39,0x0,0x41,0x6D,0x72,0x0
000043 0000
000044 3231
000045 0038
000046 3233      	.DB  0x0,0x0,0x31,0x32,0x38,0x0,0x33,0x32
000047 0035
000048 6441
000049 6c65
00004a 0000      	.DB  0x35,0x0,0x41,0x64,0x65,0x6C,0x0,0x0
00004b 3331
00004c 0030
00004d 3234
00004e 0036      	.DB  0x31,0x33,0x30,0x0,0x34,0x32,0x36,0x0
00004f 6d4f
000050 7265
000051 0000
000052 3331      	.DB  0x4F,0x6D,0x65,0x72,0x0,0x0,0x31,0x33
000053 0032
000054 3730
E:\Seventh term\Embedded Systems\Project #1\Simulation & Code (main)\lock-system\Code\Debug\List\Project #1 lock system.asm(1466): warning: .cseg .db misalignment - padding zero byte
000055 0039      	.DB  0x32,0x0,0x30,0x37,0x39
                 _0x0:
000056 7250
000057 666f
000058 4500
000059 746e      	.DB  0x50,0x72,0x6F,0x66,0x0,0x45,0x6E,0x74
00005a 7265
00005b 4120
00005c 6d64
00005d 6e69      	.DB  0x65,0x72,0x20,0x41,0x64,0x6D,0x69,0x6E
00005e 5020
00005f 3a43
000060 0020
000061 6e45      	.DB  0x20,0x50,0x43,0x3A,0x20,0x0,0x45,0x6E
000062 6574
000063 2072
000064 7453
000065 6475      	.DB  0x74,0x65,0x72,0x20,0x53,0x74,0x75,0x64
000066 6e65
000067 2074
000068 4449
000069 203a      	.DB  0x65,0x6E,0x74,0x20,0x49,0x44,0x3A,0x20
00006a 4500
00006b 746e
00006c 7265
00006d 7320      	.DB  0x0,0x45,0x6E,0x74,0x65,0x72,0x20,0x73
00006e 7574
00006f 6564
000070 746e
000071 7327      	.DB  0x74,0x75,0x64,0x65,0x6E,0x74,0x27,0x73
000072 6e20
000073 7765
000074 5020
000075 3a43      	.DB  0x20,0x6E,0x65,0x77,0x20,0x50,0x43,0x3A
000076 0020
000077 7453
000078 6475
000079 6e65      	.DB  0x20,0x0,0x53,0x74,0x75,0x64,0x65,0x6E
00007a 2074
00007b 4350
00007c 6920
00007d 2073      	.DB  0x74,0x20,0x50,0x43,0x20,0x69,0x73,0x20
00007e 7473
00007f 726f
000080 6465
000081 4500      	.DB  0x73,0x74,0x6F,0x72,0x65,0x64,0x0,0x45
000082 746e
000083 7265
000084 7920
000085 756f      	.DB  0x6E,0x74,0x65,0x72,0x20,0x79,0x6F,0x75
000086 2072
000087 656e
000088 2077
000089 4350      	.DB  0x72,0x20,0x6E,0x65,0x77,0x20,0x50,0x43
00008a 203a
00008b 5900
00008c 756f
00008d 2072      	.DB  0x3A,0x20,0x0,0x59,0x6F,0x75,0x72,0x20
00008e 4350
00008f 6920
000090 2073
000091 7473      	.DB  0x50,0x43,0x20,0x69,0x73,0x20,0x73,0x74
000092 726f
000093 6465
000094 4300
000095 6e6f      	.DB  0x6F,0x72,0x65,0x64,0x0,0x43,0x6F,0x6E
000096 6174
000097 7463
000098 4120
000099 6d64      	.DB  0x74,0x61,0x63,0x74,0x20,0x41,0x64,0x6D
00009a 6e69
00009b 4500
00009c 746e
00009d 7265      	.DB  0x69,0x6E,0x0,0x45,0x6E,0x74,0x65,0x72
00009e 7920
00009f 756f
0000a0 2072
0000a1 4449      	.DB  0x20,0x79,0x6F,0x75,0x72,0x20,0x49,0x44
0000a2 003a
0000a3 6e45
0000a4 6574
0000a5 2072      	.DB  0x3A,0x0,0x45,0x6E,0x74,0x65,0x72,0x20
0000a6 6c6f
0000a7 2064
0000a8 4350
0000a9 003a      	.DB  0x6F,0x6C,0x64,0x20,0x50,0x43,0x3A,0x0
0000aa 6e45
0000ab 6574
0000ac 2072
0000ad 656e      	.DB  0x45,0x6E,0x74,0x65,0x72,0x20,0x6E,0x65
0000ae 2077
0000af 4350
0000b0 003a
0000b1 6552      	.DB  0x77,0x20,0x50,0x43,0x3A,0x0,0x52,0x65
0000b2 652d
0000b3 746e
0000b4 7265
0000b5 6e20      	.DB  0x2D,0x65,0x6E,0x74,0x65,0x72,0x20,0x6E
0000b6 7765
0000b7 5020
0000b8 3a43
0000b9 4e00      	.DB  0x65,0x77,0x20,0x50,0x43,0x3A,0x0,0x4E
0000ba 7765
0000bb 5020
0000bc 2043
0000bd 7473      	.DB  0x65,0x77,0x20,0x50,0x43,0x20,0x73,0x74
0000be 726f
0000bf 6465
0000c0 4e00
0000c1 7765      	.DB  0x6F,0x72,0x65,0x64,0x0,0x4E,0x65,0x77
0000c2 5020
0000c3 2043
0000c4 696d
0000c5 6d73      	.DB  0x20,0x50,0x43,0x20,0x6D,0x69,0x73,0x6D
0000c6 7461
0000c7 6863
0000c8 202c
0000c9 6f43      	.DB  0x61,0x74,0x63,0x68,0x2C,0x20,0x43,0x6F
0000ca 746e
0000cb 6361
0000cc 2074
0000cd 6461      	.DB  0x6E,0x74,0x61,0x63,0x74,0x20,0x61,0x64
0000ce 696d
0000cf 006e
0000d0 7257
0000d1 6e6f      	.DB  0x6D,0x69,0x6E,0x0,0x57,0x72,0x6F,0x6E
0000d2 2067
0000d3 6c6f
0000d4 2064
0000d5 4350      	.DB  0x67,0x20,0x6F,0x6C,0x64,0x20,0x50,0x43
0000d6 202c
0000d7 2020
0000d8 6f43
0000d9 746e      	.DB  0x2C,0x20,0x20,0x20,0x43,0x6F,0x6E,0x74
0000da 6361
0000db 2074
0000dc 6461
0000dd 696d      	.DB  0x61,0x63,0x74,0x20,0x61,0x64,0x6D,0x69
0000de 006e
0000df 7257
0000e0 6e6f
0000e1 2067      	.DB  0x6E,0x0,0x57,0x72,0x6F,0x6E,0x67,0x20
0000e2 4449
0000e3 4500
0000e4 746e
0000e5 7265      	.DB  0x49,0x44,0x0,0x45,0x6E,0x74,0x65,0x72
0000e6 7920
0000e7 756f
0000e8 2072
0000e9 4449      	.DB  0x20,0x79,0x6F,0x75,0x72,0x20,0x49,0x44
0000ea 203a
0000eb 4500
0000ec 746e
0000ed 7265      	.DB  0x3A,0x20,0x0,0x45,0x6E,0x74,0x65,0x72
0000ee 7920
0000ef 756f
0000f0 2072
0000f1 4350      	.DB  0x20,0x79,0x6F,0x75,0x72,0x20,0x50,0x43
0000f2 203a
0000f3 5700
0000f4 6c65
0000f5 6f63      	.DB  0x3A,0x20,0x0,0x57,0x65,0x6C,0x63,0x6F
0000f6 656d
0000f7 202c
0000f8 5300
0000f9 726f      	.DB  0x6D,0x65,0x2C,0x20,0x0,0x53,0x6F,0x72
0000fa 7972
0000fb 7720
0000fc 6f72
0000fd 676e      	.DB  0x72,0x79,0x20,0x77,0x72,0x6F,0x6E,0x67
0000fe 5020
0000ff 0043      	.DB  0x20,0x50,0x43,0x0
                 _0x2000003:
000100 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000101 0045      	.DW  0x45
000102 02bd      	.DW  _users
000103 0066      	.DW  _0x16*2
                 
000104 0005      	.DW  0x05
000105 0160      	.DW  _0x8E
000106 00ac      	.DW  _0x0*2
                 
000107 0011      	.DW  0x11
000108 0165      	.DW  _0x8E+5
000109 00b1      	.DW  _0x0*2+5
                 
00010a 0013      	.DW  0x13
00010b 0176      	.DW  _0x8E+22
00010c 00c2      	.DW  _0x0*2+22
                 
00010d 0019      	.DW  0x19
00010e 0189      	.DW  _0x8E+41
00010f 00d5      	.DW  _0x0*2+41
                 
000110 0015      	.DW  0x15
000111 01a2      	.DW  _0x8E+66
000112 00ee      	.DW  _0x0*2+66
                 
000113 0014      	.DW  0x14
000114 01b7      	.DW  _0x8E+87
000115 0103      	.DW  _0x0*2+87
                 
000116 0012      	.DW  0x12
000117 01cb      	.DW  _0x8E+107
000118 0117      	.DW  _0x0*2+107
                 
000119 000e      	.DW  0x0E
00011a 01dd      	.DW  _0x8E+125
00011b 0129      	.DW  _0x0*2+125
                 
00011c 000f      	.DW  0x0F
00011d 01eb      	.DW  _0x9B
00011e 0137      	.DW  _0x0*2+139
                 
00011f 000e      	.DW  0x0E
000120 01fa      	.DW  _0x9B+15
000121 0146      	.DW  _0x0*2+154
                 
000122 000e      	.DW  0x0E
000123 0208      	.DW  _0x9B+29
000124 0154      	.DW  _0x0*2+168
                 
000125 0011      	.DW  0x11
000126 0216      	.DW  _0x9B+43
000127 0162      	.DW  _0x0*2+182
                 
000128 000e      	.DW  0x0E
000129 0227      	.DW  _0x9B+60
00012a 0173      	.DW  _0x0*2+199
                 
00012b 001f      	.DW  0x1F
00012c 0235      	.DW  _0x9B+74
00012d 0181      	.DW  _0x0*2+213
                 
00012e 001e      	.DW  0x1E
00012f 0254      	.DW  _0x9B+105
000130 01a0      	.DW  _0x0*2+244
                 
000131 0009      	.DW  0x09
000132 0272      	.DW  _0x9B+135
000133 01be      	.DW  _0x0*2+274
                 
000134 0010      	.DW  0x10
000135 027b      	.DW  _0xA7
000136 01c7      	.DW  _0x0*2+283
                 
000137 0010      	.DW  0x10
000138 028b      	.DW  _0xA7+16
000139 01d7      	.DW  _0x0*2+299
                 
00013a 000a      	.DW  0x0A
00013b 029b      	.DW  _0xA7+32
00013c 01e7      	.DW  _0x0*2+315
                 
00013d 000f      	.DW  0x0F
00013e 02a5      	.DW  _0xA7+42
00013f 01f1      	.DW  _0x0*2+325
                 
000140 0009      	.DW  0x09
000141 02b4      	.DW  _0xA7+57
000142 01be      	.DW  _0x0*2+274
                 
000143 0002      	.DW  0x02
000144 0303      	.DW  __base_y_G100
000145 0200      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
000146 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000147 94f8      	CLI
                 
000148 27ee      	CLR  R30
000149 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00014a e0f1      	LDI  R31,1
00014b bffb      	OUT  GICR,R31
00014c bfeb      	OUT  GICR,R30
00014d bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00014e e08d      	LDI  R24,(14-2)+1
00014f e0a2      	LDI  R26,2
000150 27bb      	CLR  R27
                 __CLEAR_REG:
000151 93ed      	ST   X+,R30
000152 958a      	DEC  R24
000153 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000154 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000155 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000156 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000157 93ed      	ST   X+,R30
000158 9701      	SBIW R24,1
000159 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00015a e0e2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00015b e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00015c 9185      	LPM  R24,Z+
00015d 9195      	LPM  R25,Z+
00015e 9700      	SBIW R24,0
00015f f061      	BREQ __GLOBAL_INI_END
000160 91a5      	LPM  R26,Z+
000161 91b5      	LPM  R27,Z+
000162 9005      	LPM  R0,Z+
000163 9015      	LPM  R1,Z+
000164 01bf      	MOVW R22,R30
000165 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000166 9005      	LPM  R0,Z+
000167 920d      	ST   X+,R0
000168 9701      	SBIW R24,1
000169 f7e1      	BRNE __GLOBAL_INI_LOOP
00016a 01fb      	MOVW R30,R22
00016b cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00016c e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00016d bfed      	OUT  SPL,R30
00016e e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00016f bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000170 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000171 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000172 940c 0437 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 
                 	.CSEG
                 _EE_Read:
                 ; .FSTART _EE_Read
000174 931a      	ST   -Y,R17
000175 930a      	ST   -Y,R16
000176 018d      	MOVW R16,R26
                 ;	address -> R16,R17
                 _0x3:
000177 99e1      	SBIC 0x1C,1
000178 cffe      	RJMP _0x3
                +
000179 bb1f     +OUT 30 + 1 , R17
00017a bb0e     +OUT 30 , R16
                 	__OUTWR 16,17,30
00017b 9ae0      	SBI  0x1C,0
00017c b3ed      	IN   R30,0x1D
00017d 9109      	LD   R16,Y+
00017e 9119      	LD   R17,Y+
00017f 9508      	RET
                 ; .FEND
                 _EE_Write:
                 ; .FSTART _EE_Write
000180 d40d      	RCALL __SAVELOCR4
000181 2f1a      	MOV  R17,R26
                +
000182 812c     +LDD R18 , Y + 4
000183 813d     +LDD R19 , Y + 4 + 1
                 	__GETWRS 18,19,4
                 ;	address -> R18,R19
                 ;	data -> R17
                 _0x8:
000184 99e1      	SBIC 0x1C,1
000185 cffe      	RJMP _0x8
                +
000186 bb3f     +OUT 30 + 1 , R19
000187 bb2e     +OUT 30 , R18
                 	__OUTWR 18,19,30
000188 bb1d      	OUT  0x1D,R17
000189 9ae2      	SBI  0x1C,2
00018a 9ae1      	SBI  0x1C,1
00018b c0dd      	RJMP _0x2080004
                 ; .FEND
                 _EE_WriteString:
                 ; .FSTART _EE_WriteString
00018c d366      	RCALL SUBOPT_0x0
                 ;	address -> R18,R19
                 ;	*str -> R16,R17
                 _0xF:
00018d 01d8      	MOVW R26,R16
00018e 91ec      	LD   R30,X
00018f 30e0      	CPI  R30,0
000190 f051      	BREQ _0x11
000191 01f9      	MOVW R30,R18
                +
000192 5f2f     +SUBI R18 , LOW ( - 1 )
000193 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000194 93fa      	ST   -Y,R31
000195 93ea      	ST   -Y,R30
                +
000196 5f0f     +SUBI R16 , LOW ( - 1 )
000197 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000198 91ac      	LD   R26,X
000199 dfe6      	RCALL _EE_Write
00019a cff2      	RJMP _0xF
                 _0x11:
00019b 933a      	ST   -Y,R19
00019c 932a      	ST   -Y,R18
00019d e0a0      	LDI  R26,LOW(0)
00019e dfe1      	RCALL _EE_Write
00019f c0c9      	RJMP _0x2080004
                 ; .FEND
                 _EE_ReadString:
                 ; .FSTART _EE_ReadString
0001a0 d3eb      	RCALL __SAVELOCR6
0001a1 019d      	MOVW R18,R26
                +
0001a2 814e     +LDD R20 , Y + 6
0001a3 815f     +LDD R21 , Y + 6 + 1
                 	__GETWRS 20,21,6
                 ;	address -> Y+8
                 ;	*buffer -> R20,R21
                 ;	length -> R18,R19
                 ;	i -> R16,R17
                +
0001a4 e000     +LDI R16 , LOW ( 0 )
0001a5 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x13:
                +
0001a6 1702     +CP R16 , R18
0001a7 0713     +CPC R17 , R19
                 	__CPWRR 16,17,18,19
0001a8 f4b0      	BRSH _0x14
0001a9 01f8      	MOVW R30,R16
0001aa 0fe4      	ADD  R30,R20
0001ab 1ff5      	ADC  R31,R21
0001ac 93ff      	PUSH R31
0001ad 93ef      	PUSH R30
0001ae 85a8      	LDD  R26,Y+8
0001af 85b9      	LDD  R27,Y+8+1
0001b0 0fa0      	ADD  R26,R16
0001b1 1fb1      	ADC  R27,R17
0001b2 dfc1      	RCALL _EE_Read
0001b3 91af      	POP  R26
0001b4 91bf      	POP  R27
0001b5 93ec      	ST   X,R30
0001b6 01f8      	MOVW R30,R16
0001b7 0fe4      	ADD  R30,R20
0001b8 1ff5      	ADC  R31,R21
0001b9 81e0      	LD   R30,Z
0001ba 30e0      	CPI  R30,0
0001bb f019      	BREQ _0x14
                +
0001bc 5f0f     +SUBI R16 , LOW ( - 1 )
0001bd 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0001be cfe7      	RJMP _0x13
                 _0x14:
0001bf d3d3      	RCALL __LOADLOCR6
0001c0 962a      	ADIW R28,10
0001c1 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 _initializeHardware:
                 ; .FSTART _initializeHardware
0001c2 d005      	RCALL _initializeKeypad
0001c3 e1a0      	LDI  R26,LOW(16)
0001c4 d2ef      	RCALL _lcd_init
0001c5 d05c      	RCALL _initializeDoor
0001c6 d060      	RCALL _initializeSpeaker
0001c7 9508      	RET
                 ; .FEND
                 _initializeKeypad:
                 ; .FSTART _initializeKeypad
0001c8 e0e7      	LDI  R30,LOW(7)
0001c9 bbe4      	OUT  0x14,R30
0001ca efe8      	LDI  R30,LOW(248)
0001cb bbe5      	OUT  0x15,R30
0001cc 9508      	RET
                 ; .FEND
                 _keypad:
                 ; .FSTART _keypad
                 _0x17:
0001cd 98a8      	CBI  0x15,0
0001ce 9aa9      	SBI  0x15,1
0001cf 9aaa      	SBI  0x15,2
0001d0 b3e3      	IN   R30,0x13
0001d1 3fe6      	CPI  R30,LOW(0xF6)
0001d2 f421      	BRNE _0x23
                 _0x24:
0001d3 9b9b      	SBIS 0x13,3
0001d4 cffe      	RJMP _0x24
0001d5 e0e1      	LDI  R30,LOW(1)
0001d6 9508      	RET
                 _0x23:
0001d7 3eee      	CPI  R30,LOW(0xEE)
0001d8 f421      	BRNE _0x27
                 _0x28:
0001d9 9b9c      	SBIS 0x13,4
0001da cffe      	RJMP _0x28
0001db e0e4      	LDI  R30,LOW(4)
0001dc 9508      	RET
                 _0x27:
0001dd 3dee      	CPI  R30,LOW(0xDE)
0001de f421      	BRNE _0x2B
                 _0x2C:
0001df 9b9d      	SBIS 0x13,5
0001e0 cffe      	RJMP _0x2C
0001e1 e0e7      	LDI  R30,LOW(7)
0001e2 9508      	RET
                 _0x2B:
0001e3 3bee      	CPI  R30,LOW(0xBE)
0001e4 f421      	BRNE _0x22
                 _0x30:
0001e5 9b9e      	SBIS 0x13,6
0001e6 cffe      	RJMP _0x30
0001e7 e0ea      	LDI  R30,LOW(10)
0001e8 9508      	RET
                 _0x22:
0001e9 9aa8      	SBI  0x15,0
0001ea 98a9      	CBI  0x15,1
0001eb 9aaa      	SBI  0x15,2
0001ec b3e3      	IN   R30,0x13
0001ed 3fe5      	CPI  R30,LOW(0xF5)
0001ee f421      	BRNE _0x3C
                 _0x3D:
0001ef 9b9b      	SBIS 0x13,3
0001f0 cffe      	RJMP _0x3D
0001f1 e0e2      	LDI  R30,LOW(2)
0001f2 9508      	RET
                 _0x3C:
0001f3 3eed      	CPI  R30,LOW(0xED)
0001f4 f421      	BRNE _0x40
                 _0x41:
0001f5 9b9c      	SBIS 0x13,4
0001f6 cffe      	RJMP _0x41
0001f7 e0e5      	LDI  R30,LOW(5)
0001f8 9508      	RET
                 _0x40:
0001f9 3ded      	CPI  R30,LOW(0xDD)
0001fa f421      	BRNE _0x44
                 _0x45:
0001fb 9b9d      	SBIS 0x13,5
0001fc cffe      	RJMP _0x45
0001fd e0e8      	LDI  R30,LOW(8)
0001fe 9508      	RET
                 _0x44:
0001ff 3bed      	CPI  R30,LOW(0xBD)
000200 f421      	BRNE _0x3B
                 _0x49:
000201 9b9e      	SBIS 0x13,6
000202 cffe      	RJMP _0x49
000203 e0e0      	LDI  R30,LOW(0)
000204 9508      	RET
                 _0x3B:
000205 9aa8      	SBI  0x15,0
000206 9aa9      	SBI  0x15,1
000207 98aa      	CBI  0x15,2
000208 b3e3      	IN   R30,0x13
000209 3fe3      	CPI  R30,LOW(0xF3)
00020a f421      	BRNE _0x55
                 _0x56:
00020b 9b9b      	SBIS 0x13,3
00020c cffe      	RJMP _0x56
00020d e0e3      	LDI  R30,LOW(3)
00020e 9508      	RET
                 _0x55:
00020f 3eeb      	CPI  R30,LOW(0xEB)
000210 f421      	BRNE _0x59
                 _0x5A:
000211 9b9c      	SBIS 0x13,4
000212 cffe      	RJMP _0x5A
000213 e0e6      	LDI  R30,LOW(6)
000214 9508      	RET
                 _0x59:
000215 3deb      	CPI  R30,LOW(0xDB)
000216 f421      	BRNE _0x5D
                 _0x5E:
000217 9b9d      	SBIS 0x13,5
000218 cffe      	RJMP _0x5E
000219 e0e9      	LDI  R30,LOW(9)
00021a 9508      	RET
                 _0x5D:
00021b 3beb      	CPI  R30,LOW(0xBB)
00021c f421      	BRNE _0x54
                 _0x62:
00021d 9b9e      	SBIS 0x13,6
00021e cffe      	RJMP _0x62
00021f e0eb      	LDI  R30,LOW(11)
000220 9508      	RET
                 _0x54:
000221 cfab      	RJMP _0x17
                 ; .FEND
                 _initializeDoor:
                 ; .FSTART _initializeDoor
000222 b3e7      	IN   R30,0x17
000223 61e8      	ORI  R30,LOW(0x18)
000224 bbe7      	OUT  0x17,R30
000225 9ab8      	SBI  0x17,0
000226 9508      	RET
                 ; .FEND
                 _initializeSpeaker:
                 ; .FSTART _initializeSpeaker
000227 9a8f      	SBI  0x11,7
000228 c0a3      	RJMP _0x2080003
                 ; .FEND
                 _initializeIntrrupts:
                 ; .FSTART _initializeIntrrupts
000229 98ba      	CBI  0x17,2
00022a 9ac2      	SBI  0x18,2
00022b b7e4      	IN   R30,0x34
00022c 64e0      	ORI  R30,0x40
00022d bfe4      	OUT  0x34,R30
00022e 988a      	CBI  0x11,2
00022f 9a92      	SBI  0x12,2
000230 b7e5      	IN   R30,0x35
000231 60e2      	ORI  R30,2
000232 bfe5      	OUT  0x35,R30
000233 b7e5      	IN   R30,0x35
000234 7fee      	ANDI R30,0xFE
000235 bfe5      	OUT  0x35,R30
000236 b7e5      	IN   R30,0x35
000237 60e8      	ORI  R30,8
000238 bfe5      	OUT  0x35,R30
000239 b7e5      	IN   R30,0x35
00023a 7feb      	ANDI R30,0xFB
00023b bfe5      	OUT  0x35,R30
00023c 988b      	CBI  0x11,3
00023d 9a93      	SBI  0x12,3
00023e 9478      	SEI
00023f b7eb      	IN   R30,0x3B
000240 68e0      	ORI  R30,0x80
000241 bfeb      	OUT  0x3B,R30
000242 b7eb      	IN   R30,0x3B
000243 62e0      	ORI  R30,0x20
000244 bfeb      	OUT  0x3B,R30
000245 b7eb      	IN   R30,0x3B
000246 64e0      	ORI  R30,0x40
000247 bfeb      	OUT  0x3B,R30
000248 9508      	RET
                 ; .FEND
                 _initializeUsers:
                 ; .FSTART _initializeUsers
000249 d344      	RCALL __SAVELOCR4
                 ;	address -> R16,R17
                 ;	i -> R18,R19
00024a d2ad      	RCALL SUBOPT_0x1
                 _0x76:
                +
00024b 3025     +CPI R18 , LOW ( 5 )
00024c e0e0     +LDI R30 , HIGH ( 5 )
00024d 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
00024e f494      	BRGE _0x77
00024f d2ad      	RCALL SUBOPT_0x2
000250 54e3      	SUBI R30,LOW(-_users)
000251 4ffd      	SBCI R31,HIGH(-_users)
000252 01df      	MOVW R26,R30
000253 df38      	RCALL _EE_WriteString
                +
000254 5f0a     +SUBI R16 , LOW ( - 6 )
000255 4f1f     +SBCI R17 , HIGH ( - 6 )
                 	__ADDWRN 16,17,6
000256 d2a6      	RCALL SUBOPT_0x2
                +
000257 53ed     +SUBI R30 , LOW ( - _users - ( 6 ) )
000258 4ffd     +SBCI R31 , HIGH ( - _users - ( 6 ) )
                 	__ADDW1MN _users,6
000259 d2ab      	RCALL SUBOPT_0x3
00025a d2a2      	RCALL SUBOPT_0x2
                +
00025b 53e9     +SUBI R30 , LOW ( - _users - ( 10 ) )
00025c 4ffd     +SBCI R31 , HIGH ( - _users - ( 10 ) )
                 	__ADDW1MN _users,10
00025d d2a7      	RCALL SUBOPT_0x3
                +
00025e 5f2f     +SUBI R18 , LOW ( - 1 )
00025f 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000260 cfea      	RJMP _0x76
                 _0x77:
000261 940c 04b1 	JMP  _0x2080002
                 ; .FEND
                 _displayMessage:
                 ; .FSTART _displayMessage
000263 d28f      	RCALL SUBOPT_0x0
                 ;	*message -> R18,R19
                 ;	delay_ms_value -> R16,R17
000264 d223      	RCALL _lcd_clear
000265 01d9      	MOVW R26,R18
000266 d23e      	RCALL _lcd_puts
000267 01d8      	MOVW R26,R16
000268 d331      	RCALL _delay_ms
                 _0x2080004:
000269 d32b      	RCALL __LOADLOCR4
00026a 9626      	ADIW R28,6
00026b 9508      	RET
                 ; .FEND
                 _enterValueWithKeypad:
                 ; .FSTART _enterValueWithKeypad
00026c 9726      	SBIW R28,6
00026d 931a      	ST   -Y,R17
00026e 930a      	ST   -Y,R16
00026f 018d      	MOVW R16,R26
                 ;	*buffer -> R16,R17
                 ;	buffer2 -> Y+2
000270 df5c      	RCALL _keypad
000271 e0f0      	LDI  R31,0
000272 83ea      	STD  Y+2,R30
000273 83fb      	STD  Y+2+1,R31
000274 81aa      	LDD  R26,Y+2
000275 81bb      	LDD  R27,Y+2+1
000276 971a      	SBIW R26,10
000277 f411      	BRNE _0x78
000278 e2aa      	LDI  R26,LOW(42)
000279 c008      	RJMP _0xB6
                 _0x78:
00027a 81aa      	LDD  R26,Y+2
00027b 81bb      	LDD  R27,Y+2+1
00027c 971b      	SBIW R26,11
00027d f411      	BRNE _0x7A
00027e e2a3      	LDI  R26,LOW(35)
00027f c002      	RJMP _0xB6
                 _0x7A:
000280 81aa      	LDD  R26,Y+2
000281 5da0      	SUBI R26,-LOW(48)
                 _0xB6:
000282 d20f      	RCALL _lcd_putchar
000283 df49      	RCALL _keypad
000284 e0f0      	LDI  R31,0
000285 83ec      	STD  Y+4,R30
000286 83fd      	STD  Y+4+1,R31
000287 81ac      	LDD  R26,Y+4
000288 81bd      	LDD  R27,Y+4+1
000289 971a      	SBIW R26,10
00028a f411      	BRNE _0x7C
00028b e2aa      	LDI  R26,LOW(42)
00028c c008      	RJMP _0xB7
                 _0x7C:
00028d 81ac      	LDD  R26,Y+4
00028e 81bd      	LDD  R27,Y+4+1
00028f 971b      	SBIW R26,11
000290 f411      	BRNE _0x7E
000291 e2a3      	LDI  R26,LOW(35)
000292 c002      	RJMP _0xB7
                 _0x7E:
000293 81ac      	LDD  R26,Y+4
000294 5da0      	SUBI R26,-LOW(48)
                 _0xB7:
000295 d1fc      	RCALL _lcd_putchar
000296 df36      	RCALL _keypad
000297 e0f0      	LDI  R31,0
000298 83ee      	STD  Y+6,R30
000299 83ff      	STD  Y+6+1,R31
00029a 81ae      	LDD  R26,Y+6
00029b 81bf      	LDD  R27,Y+6+1
00029c 971a      	SBIW R26,10
00029d f411      	BRNE _0x80
00029e e2aa      	LDI  R26,LOW(42)
00029f c008      	RJMP _0xB8
                 _0x80:
0002a0 81ae      	LDD  R26,Y+6
0002a1 81bf      	LDD  R27,Y+6+1
0002a2 971b      	SBIW R26,11
0002a3 f411      	BRNE _0x82
0002a4 e2a3      	LDI  R26,LOW(35)
0002a5 c002      	RJMP _0xB8
                 _0x82:
0002a6 81ae      	LDD  R26,Y+6
0002a7 5da0      	SUBI R26,-LOW(48)
                 _0xB8:
0002a8 d1e9      	RCALL _lcd_putchar
0002a9 81ea      	LDD  R30,Y+2
0002aa 5de0      	SUBI R30,-LOW(48)
0002ab 01d8      	MOVW R26,R16
0002ac 93ec      	ST   X,R30
0002ad 81ec      	LDD  R30,Y+4
0002ae 5de0      	SUBI R30,-LOW(48)
                +
0002af 01d8     +MOVW R26 , R16
0002b0 9611     +ADIW R26 , 1
0002b1 93ec     +ST X , R30
                 	__PUTB1RNS 16,1
0002b2 81ee      	LDD  R30,Y+6
0002b3 5de0      	SUBI R30,-LOW(48)
                +
0002b4 01d8     +MOVW R26 , R16
0002b5 9612     +ADIW R26 , 2
0002b6 93ec     +ST X , R30
                 	__PUTB1RNS 16,2
0002b7 01f8      	MOVW R30,R16
0002b8 9633      	ADIW R30,3
0002b9 e0a0      	LDI  R26,LOW(0)
0002ba 83a0      	STD  Z+0,R26
0002bb eea8      	LDI  R26,LOW(1000)
0002bc e0b3      	LDI  R27,HIGH(1000)
0002bd d2dc      	RCALL _delay_ms
0002be e0e1      	LDI  R30,LOW(1)
0002bf e0f0      	LDI  R31,HIGH(1)
0002c0 8119      	LDD  R17,Y+1
0002c1 8108      	LDD  R16,Y+0
0002c2 9628      	ADIW R28,8
0002c3 9508      	RET
                 ; .FEND
                 _generateTone:
                 ; .FSTART _generateTone
0002c4 9a97      	SBI  0x12,7
0002c5 efa4      	LDI  R26,LOW(500)
0002c6 e0b1      	LDI  R27,HIGH(500)
0002c7 d2d2      	RCALL _delay_ms
0002c8 9897      	CBI  0x12,7
0002c9 efa4      	LDI  R26,LOW(500)
0002ca e0b1      	LDI  R27,HIGH(500)
0002cb d2ce      	RCALL _delay_ms
                 _0x2080003:
0002cc 9a97      	SBI  0x12,7
0002cd 9508      	RET
                 ; .FEND
                 _openDoor:
                 ; .FSTART _openDoor
0002ce 9ac0      	SBI  0x18,0
0002cf 98c3      	CBI  0x18,3
0002d0 d239      	RCALL SUBOPT_0x4
0002d1 9508      	RET
                 ; .FEND
                 _closeDoor:
                 ; .FSTART _closeDoor
0002d2 98c0      	CBI  0x18,0
0002d3 9ac3      	SBI  0x18,3
0002d4 d235      	RCALL SUBOPT_0x4
0002d5 98c3      	CBI  0x18,3
0002d6 9ac3      	SBI  0x18,3
0002d7 efa4      	LDI  R26,LOW(500)
0002d8 e0b1      	LDI  R27,HIGH(500)
0002d9 d2c0      	RCALL _delay_ms
0002da 98c3      	CBI  0x18,3
0002db 9508      	RET
                 ; .FEND
                 _adminMode:
                 ; .FSTART _adminMode
0002dc 97aa      	SBIW R28,42
0002dd d2ae      	RCALL __SAVELOCR6
                 ;	enteredPC -> Y+44
                 ;	enteredStudentID -> Y+40
                 ;	enteredNewPC -> Y+36
                 ;	student -> Y+22
                 ;	admin -> Y+8
                 ;	adminPCAddress -> R16,R17
                 ;	address -> R18,R19
                 ;	userFound -> R20,R21
                 ;	i -> Y+6
0002de d219      	RCALL SUBOPT_0x1
                +
0002df e040     +LDI R20 , LOW ( 0 )
0002e0 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
0002e1 e0e0      	LDI  R30,LOW(0)
0002e2 83ee      	STD  Y+6,R30
0002e3 83ef      	STD  Y+6+1,R30
                 _0x8B:
0002e4 81ae      	LDD  R26,Y+6
0002e5 81bf      	LDD  R27,Y+6+1
0002e6 9715      	SBIW R26,5
0002e7 f50c      	BRGE _0x8C
0002e8 933a      	ST   -Y,R19
0002e9 932a      	ST   -Y,R18
0002ea 01fe      	MOVW R30,R28
0002eb 963a      	ADIW R30,10
0002ec d226      	RCALL SUBOPT_0x5
0002ed 01fe      	MOVW R30,R28
0002ee 9638      	ADIW R30,8
0002ef 93fa      	ST   -Y,R31
0002f0 93ea      	ST   -Y,R30
                +
0002f1 e6a0     +LDI R26 , LOW ( _0x8E + ( 0 ) )
0002f2 e0b1     +LDI R27 , HIGH ( _0x8E + ( 0 ) )
                 	__POINTW2MN _0x8E,0
0002f3 d1eb      	RCALL _strcmp
0002f4 30e0      	CPI  R30,0
0002f5 f459      	BRNE _0x8D
0002f6 d221      	RCALL SUBOPT_0x6
0002f7 d225      	RCALL SUBOPT_0x7
0002f8 d229      	RCALL SUBOPT_0x8
0002f9 933a      	ST   -Y,R19
0002fa 932a      	ST   -Y,R18
0002fb d22c      	RCALL SUBOPT_0x9
0002fc e0a4      	LDI  R26,LOW(4)
0002fd e0b0      	LDI  R27,0
0002fe dea1      	RCALL _EE_ReadString
0002ff 0189      	MOVW R16,R18
000300 c008      	RJMP _0x8C
                 _0x8D:
                +
000301 5f2c     +SUBI R18 , LOW ( - 4 )
000302 4f3f     +SBCI R19 , HIGH ( - 4 )
                 	__ADDWRN 18,19,4
000303 81ee      	LDD  R30,Y+6
000304 81ff      	LDD  R31,Y+6+1
000305 9631      	ADIW R30,1
000306 83ee      	STD  Y+6,R30
000307 83ff      	STD  Y+6+1,R31
000308 cfdb      	RJMP _0x8B
                 _0x8C:
                +
000309 e020     +LDI R18 , LOW ( 0 )
00030a e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
00030b e6e5     +LDI R30 , LOW ( _0x8E + ( 5 ) )
00030c e0f1     +LDI R31 , HIGH ( _0x8E + ( 5 ) )
                 	__POINTW1MN _0x8E,5
00030d d21f      	RCALL SUBOPT_0xA
00030e d223      	RCALL SUBOPT_0xB
00030f 01de      	MOVW R26,R28
000310 969c      	ADIW R26,44
000311 df5a      	RCALL _enterValueWithKeypad
000312 9730      	SBIW R30,0
000313 f409      	BRNE PC+2
000314 c04d      	RJMP _0x8F
000315 d220      	RCALL SUBOPT_0xC
000316 01de      	MOVW R26,R28
000317 969e      	ADIW R26,46
000318 d1c6      	RCALL _strcmp
000319 30e0      	CPI  R30,0
00031a f009      	BREQ PC+2
00031b c046      	RJMP _0x90
                +
00031c e7e6     +LDI R30 , LOW ( _0x8E + ( 22 ) )
00031d e0f1     +LDI R31 , HIGH ( _0x8E + ( 22 ) )
                 	__POINTW1MN _0x8E,22
00031e d20e      	RCALL SUBOPT_0xA
00031f 01de      	MOVW R26,R28
000320 9698      	ADIW R26,40
000321 df4a      	RCALL _enterValueWithKeypad
000322 9730      	SBIW R30,0
000323 f1f1      	BREQ _0x91
000324 9722      	SBIW R28,2
                 ;	enteredPC -> Y+46
                 ;	enteredStudentID -> Y+42
                 ;	enteredNewPC -> Y+38
                 ;	student -> Y+24
                 ;	admin -> Y+10
                 ;	i -> Y+8
                 ;	j -> Y+0
000325 e0e0      	LDI  R30,LOW(0)
000326 83e8      	STD  Y+0,R30
000327 83e9      	STD  Y+0+1,R30
                 _0x93:
000328 81a8      	LD   R26,Y
000329 81b9      	LDD  R27,Y+1
00032a 9715      	SBIW R26,5
00032b f5ac      	BRGE _0x94
00032c d1eb      	RCALL SUBOPT_0x6
00032d 01fe      	MOVW R30,R28
00032e 96b0      	ADIW R30,32
00032f 93fa      	ST   -Y,R31
000330 93ea      	ST   -Y,R30
000331 d1f0      	RCALL SUBOPT_0x8
000332 01fe      	MOVW R30,R28
000333 967e      	ADIW R30,30
000334 93fa      	ST   -Y,R31
000335 93ea      	ST   -Y,R30
000336 d204      	RCALL SUBOPT_0xD
000337 f479      	BRNE _0x95
                +
000338 e8e9     +LDI R30 , LOW ( _0x8E + ( 41 ) )
000339 e0f1     +LDI R31 , HIGH ( _0x8E + ( 41 ) )
                 	__POINTW1MN _0x8E,41
00033a d1f2      	RCALL SUBOPT_0xA
00033b d204      	RCALL SUBOPT_0xE
00033c f049      	BREQ _0x96
00033d 933a      	ST   -Y,R19
00033e 932a      	ST   -Y,R18
00033f 01de      	MOVW R26,R28
000340 9698      	ADIW R26,40
000341 de4a      	RCALL _EE_WriteString
                +
000342 eae2     +LDI R30 , LOW ( _0x8E + ( 66 ) )
000343 e0f1     +LDI R31 , HIGH ( _0x8E + ( 66 ) )
                 	__POINTW1MN _0x8E,66
000344 d200      	RCALL SUBOPT_0xF
000345 c01b      	RJMP _0x94
                 _0x96:
000346 c012      	RJMP _0x97
                 _0x95:
000347 d1d5      	RCALL SUBOPT_0x7
000348 d1f2      	RCALL SUBOPT_0xD
000349 f479      	BRNE _0x98
                +
00034a ebe7     +LDI R30 , LOW ( _0x8E + ( 87 ) )
00034b e0f1     +LDI R31 , HIGH ( _0x8E + ( 87 ) )
                 	__POINTW1MN _0x8E,87
00034c d1e0      	RCALL SUBOPT_0xA
00034d d1e4      	RCALL SUBOPT_0xB
00034e d1f1      	RCALL SUBOPT_0xE
00034f f049      	BREQ _0x99
000350 931a      	ST   -Y,R17
000351 930a      	ST   -Y,R16
000352 01de      	MOVW R26,R28
000353 9698      	ADIW R26,40
000354 de37      	RCALL _EE_WriteString
                +
000355 eceb     +LDI R30 , LOW ( _0x8E + ( 107 ) )
000356 e0f1     +LDI R31 , HIGH ( _0x8E + ( 107 ) )
                 	__POINTW1MN _0x8E,107
000357 d1ed      	RCALL SUBOPT_0xF
000358 c008      	RJMP _0x94
                 _0x99:
                 _0x98:
                 _0x97:
                +
000359 5f2c     +SUBI R18 , LOW ( - 4 )
00035a 4f3f     +SBCI R19 , HIGH ( - 4 )
                 	__ADDWRN 18,19,4
00035b 81e8      	LD   R30,Y
00035c 81f9      	LDD  R31,Y+1
00035d 9631      	ADIW R30,1
00035e 83e8      	ST   Y,R30
00035f 83f9      	STD  Y+1,R31
000360 cfc7      	RJMP _0x93
                 _0x94:
000361 9622      	ADIW R28,2
                 _0x91:
                 _0x90:
                 _0x8F:
000362 2e04      	MOV  R0,R20
000363 2a05      	OR   R0,R21
000364 f429      	BRNE _0x9A
                +
000365 eded     +LDI R30 , LOW ( _0x8E + ( 125 ) )
000366 e0f1     +LDI R31 , HIGH ( _0x8E + ( 125 ) )
                 	__POINTW1MN _0x8E,125
000367 d1c5      	RCALL SUBOPT_0xA
000368 df5b      	RCALL _generateTone
000369 df5a      	RCALL _generateTone
                 _0x9A:
00036a d1e2      	RCALL SUBOPT_0x10
00036b d227      	RCALL __LOADLOCR6
00036c 96e0      	ADIW R28,48
00036d 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x8E:
000160           	.BYTE 0x8B
                 
                 	.CSEG
                 _setPCMode:
                 ; .FSTART _setPCMode
00036e 976d      	SBIW R28,29
00036f d21c      	RCALL __SAVELOCR6
                 ;	enteredID -> Y+30
                 ;	currentUser -> Y+16
                 ;	address -> R16,R17
                 ;	userFound -> R18,R19
                 ;	i -> R20,R21
                 ;	enteredNewPC -> Y+11
                 ;	reenteredNewPC -> Y+6
000370 d187      	RCALL SUBOPT_0x1
000371 d116      	RCALL _lcd_clear
                +
000372 eeeb     +LDI R30 , LOW ( _0x9B + ( 0 ) )
000373 e0f1     +LDI R31 , HIGH ( _0x9B + ( 0 ) )
                 	__POINTW1MN _0x9B,0
000374 d1b8      	RCALL SUBOPT_0xA
000375 d1bc      	RCALL SUBOPT_0xB
000376 01de      	MOVW R26,R28
000377 965e      	ADIW R26,30
000378 def3      	RCALL _enterValueWithKeypad
000379 9730      	SBIW R30,0
00037a f409      	BRNE PC+2
00037b c05f      	RJMP _0x9C
00037c 9725      	SBIW R28,5
                 ;	enteredID -> Y+35
                 ;	currentUser -> Y+21
                 ;	enteredNewPC -> Y+16
                 ;	reenteredNewPC -> Y+11
                 ;	enteredOldPC -> Y+0
                +
00037d e040     +LDI R20 , LOW ( 0 )
00037e e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x9E:
                +
00037f 3045     +CPI R20 , LOW ( 5 )
000380 e0e0     +LDI R30 , HIGH ( 5 )
000381 075e     +CPC R21 , R30
                 	__CPWRN 20,21,5
000382 f00c      	BRLT PC+2
000383 c04d      	RJMP _0x9F
000384 d1cc      	RCALL SUBOPT_0x11
000385 01fe      	MOVW R30,R28
000386 967d      	ADIW R30,29
000387 d1ce      	RCALL SUBOPT_0x12
000388 01fe      	MOVW R30,R28
000389 967b      	ADIW R30,27
00038a 93fa      	ST   -Y,R31
00038b 93ea      	ST   -Y,R30
00038c 01de      	MOVW R26,R28
00038d 9695      	ADIW R26,37
00038e d150      	RCALL _strcmp
00038f 30e0      	CPI  R30,0
000390 f5e1      	BRNE _0xA0
000391 d1c9      	RCALL SUBOPT_0x13
000392 01fe      	MOVW R30,R28
000393 96b1      	ADIW R30,33
000394 d1c1      	RCALL SUBOPT_0x12
                +
000395 efea     +LDI R30 , LOW ( _0x9B + ( 15 ) )
000396 e0f1     +LDI R31 , HIGH ( _0x9B + ( 15 ) )
                 	__POINTW1MN _0x9B,15
000397 d195      	RCALL SUBOPT_0xA
000398 d199      	RCALL SUBOPT_0xB
000399 d1c6      	RCALL SUBOPT_0x14
00039a f179      	BREQ _0xA1
00039b 01fe      	MOVW R30,R28
00039c 967f      	ADIW R30,31
00039d 93fa      	ST   -Y,R31
00039e 93ea      	ST   -Y,R30
00039f d1c4      	RCALL SUBOPT_0x15
0003a0 f521      	BRNE _0xA2
                +
0003a1 e0e8     +LDI R30 , LOW ( _0x9B + ( 29 ) )
0003a2 e0f2     +LDI R31 , HIGH ( _0x9B + ( 29 ) )
                 	__POINTW1MN _0x9B,29
0003a3 d189      	RCALL SUBOPT_0xA
0003a4 d18d      	RCALL SUBOPT_0xB
0003a5 01de      	MOVW R26,R28
0003a6 9650      	ADIW R26,16
0003a7 dec4      	RCALL _enterValueWithKeypad
0003a8 d0df      	RCALL _lcd_clear
                +
0003a9 e1e6     +LDI R30 , LOW ( _0x9B + ( 43 ) )
0003aa e0f2     +LDI R31 , HIGH ( _0x9B + ( 43 ) )
                 	__POINTW1MN _0x9B,43
0003ab d181      	RCALL SUBOPT_0xA
0003ac d185      	RCALL SUBOPT_0xB
0003ad 01de      	MOVW R26,R28
0003ae 961b      	ADIW R26,11
0003af debc      	RCALL _enterValueWithKeypad
0003b0 d16c      	RCALL SUBOPT_0x7
0003b1 01de      	MOVW R26,R28
0003b2 961d      	ADIW R26,13
0003b3 d12b      	RCALL _strcmp
0003b4 30e0      	CPI  R30,0
0003b5 f449      	BRNE _0xA3
0003b6 931a      	ST   -Y,R17
0003b7 930a      	ST   -Y,R16
0003b8 01de      	MOVW R26,R28
0003b9 9652      	ADIW R26,18
0003ba ddd1      	RCALL _EE_WriteString
                +
0003bb e2e7     +LDI R30 , LOW ( _0x9B + ( 60 ) )
0003bc e0f2     +LDI R31 , HIGH ( _0x9B + ( 60 ) )
                 	__POINTW1MN _0x9B,60
0003bd d1ab      	RCALL SUBOPT_0x16
0003be c005      	RJMP _0xA4
                 _0xA3:
                +
0003bf e3e5     +LDI R30 , LOW ( _0x9B + ( 74 ) )
0003c0 e0f2     +LDI R31 , HIGH ( _0x9B + ( 74 ) )
                 	__POINTW1MN _0x9B,74
0003c1 d1a7      	RCALL SUBOPT_0x16
0003c2 df01      	RCALL _generateTone
0003c3 df00      	RCALL _generateTone
                 _0xA4:
0003c4 c005      	RJMP _0xA5
                 _0xA2:
                +
0003c5 e5e4     +LDI R30 , LOW ( _0x9B + ( 105 ) )
0003c6 e0f2     +LDI R31 , HIGH ( _0x9B + ( 105 ) )
                 	__POINTW1MN _0x9B,105
0003c7 d1a1      	RCALL SUBOPT_0x16
0003c8 defb      	RCALL _generateTone
0003c9 defa      	RCALL _generateTone
                 _0xA5:
                 _0xA1:
                +
0003ca e021     +LDI R18 , LOW ( 1 )
0003cb e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
0003cc c004      	RJMP _0x9F
                 _0xA0:
0003cd d1a0      	RCALL SUBOPT_0x17
                +
0003ce 5f4f     +SUBI R20 , LOW ( - 1 )
0003cf 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
0003d0 cfae      	RJMP _0x9E
                 _0x9F:
0003d1 2e02      	MOV  R0,R18
0003d2 2a03      	OR   R0,R19
0003d3 f429      	BRNE _0xA6
                +
0003d4 e7e2     +LDI R30 , LOW ( _0x9B + ( 135 ) )
0003d5 e0f2     +LDI R31 , HIGH ( _0x9B + ( 135 ) )
                 	__POINTW1MN _0x9B,135
0003d6 d156      	RCALL SUBOPT_0xA
0003d7 deec      	RCALL _generateTone
0003d8 deeb      	RCALL _generateTone
                 _0xA6:
0003d9 d173      	RCALL SUBOPT_0x10
0003da 9625      	ADIW R28,5
                 _0x9C:
0003db d1b7      	RCALL __LOADLOCR6
0003dc 96a3      	ADIW R28,35
0003dd 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x9B:
0001eb           	.BYTE 0x90
                 
                 	.CSEG
                 _openCloseDoorMode:
                 ; .FSTART _openCloseDoorMode
0003de 9762      	SBIW R28,18
0003df d1ac      	RCALL __SAVELOCR6
                 ;	enteredID -> Y+20
                 ;	currentUser -> Y+6
                 ;	address -> R16,R17
                 ;	userFound -> R18,R19
                 ;	i -> R20,R21
0003e0 d117      	RCALL SUBOPT_0x1
                +
0003e1 e7eb     +LDI R30 , LOW ( _0xA7 + ( 0 ) )
0003e2 e0f2     +LDI R31 , HIGH ( _0xA7 + ( 0 ) )
                 	__POINTW1MN _0xA7,0
0003e3 d149      	RCALL SUBOPT_0xA
0003e4 d14d      	RCALL SUBOPT_0xB
0003e5 01de      	MOVW R26,R28
0003e6 9654      	ADIW R26,20
0003e7 de84      	RCALL _enterValueWithKeypad
0003e8 9730      	SBIW R30,0
0003e9 f409      	BRNE PC+2
0003ea c040      	RJMP _0xA8
0003eb 9724      	SBIW R28,4
                 ;	enteredID -> Y+24
                 ;	currentUser -> Y+10
                 ;	enteredPC -> Y+0
                +
0003ec e040     +LDI R20 , LOW ( 0 )
0003ed e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0xAA:
                +
0003ee 3045     +CPI R20 , LOW ( 5 )
0003ef e0e0     +LDI R30 , HIGH ( 5 )
0003f0 075e     +CPC R21 , R30
                 	__CPWRN 20,21,5
0003f1 f5c4      	BRGE _0xAB
0003f2 931a      	ST   -Y,R17
0003f3 930a      	ST   -Y,R16
0003f4 01fe      	MOVW R30,R28
0003f5 963c      	ADIW R30,12
0003f6 d11c      	RCALL SUBOPT_0x5
0003f7 d159      	RCALL SUBOPT_0x11
0003f8 d13d      	RCALL SUBOPT_0xC
0003f9 e0a4      	LDI  R26,LOW(4)
0003fa e0b0      	LDI  R27,0
0003fb dda4      	RCALL _EE_ReadString
0003fc d120      	RCALL SUBOPT_0x7
0003fd 01de      	MOVW R26,R28
0003fe 965a      	ADIW R26,26
0003ff d0df      	RCALL _strcmp
000400 30e0      	CPI  R30,0
000401 f521      	BRNE _0xAC
000402 d158      	RCALL SUBOPT_0x13
000403 01fe      	MOVW R30,R28
000404 9676      	ADIW R30,22
000405 d150      	RCALL SUBOPT_0x12
                +
000406 e8eb     +LDI R30 , LOW ( _0xA7 + ( 16 ) )
000407 e0f2     +LDI R31 , HIGH ( _0xA7 + ( 16 ) )
                 	__POINTW1MN _0xA7,16
000408 d124      	RCALL SUBOPT_0xA
000409 d128      	RCALL SUBOPT_0xB
00040a d155      	RCALL SUBOPT_0x14
00040b f0b9      	BREQ _0xAD
00040c d11b      	RCALL SUBOPT_0x9
00040d d156      	RCALL SUBOPT_0x15
00040e f481      	BRNE _0xAE
00040f d078      	RCALL _lcd_clear
                +
000410 e9ab     +LDI R26 , LOW ( _0xA7 + ( 32 ) )
000411 e0b2     +LDI R27 , HIGH ( _0xA7 + ( 32 ) )
                 	__POINTW2MN _0xA7,32
000412 d092      	RCALL _lcd_puts
000413 01de      	MOVW R26,R28
000414 961a      	ADIW R26,10
000415 d08f      	RCALL _lcd_puts
000416 deb7      	RCALL _openDoor
000417 eda0      	LDI  R26,LOW(2000)
000418 e0b7      	LDI  R27,HIGH(2000)
000419 d180      	RCALL _delay_ms
00041a deb7      	RCALL _closeDoor
00041b eda0      	LDI  R26,LOW(2000)
00041c e0b7      	LDI  R27,HIGH(2000)
00041d d17c      	RCALL _delay_ms
00041e c004      	RJMP _0xAF
                 _0xAE:
                +
00041f eae5     +LDI R30 , LOW ( _0xA7 + ( 42 ) )
000420 e0f2     +LDI R31 , HIGH ( _0xA7 + ( 42 ) )
                 	__POINTW1MN _0xA7,42
000421 d147      	RCALL SUBOPT_0x16
000422 dea1      	RCALL _generateTone
                 _0xAF:
                 _0xAD:
                +
000423 e021     +LDI R18 , LOW ( 1 )
000424 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
000425 c004      	RJMP _0xAB
                 _0xAC:
000426 d147      	RCALL SUBOPT_0x17
                +
000427 5f4f     +SUBI R20 , LOW ( - 1 )
000428 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
000429 cfc4      	RJMP _0xAA
                 _0xAB:
00042a 9624      	ADIW R28,4
                 _0xA8:
00042b 2e02      	MOV  R0,R18
00042c 2a03      	OR   R0,R19
00042d f429      	BRNE _0xB0
                +
00042e ebe4     +LDI R30 , LOW ( _0xA7 + ( 57 ) )
00042f e0f2     +LDI R31 , HIGH ( _0xA7 + ( 57 ) )
                 	__POINTW1MN _0xA7,57
000430 d138      	RCALL SUBOPT_0x16
000431 de92      	RCALL _generateTone
000432 de91      	RCALL _generateTone
                 _0xB0:
000433 d054      	RCALL _lcd_clear
000434 d15e      	RCALL __LOADLOCR6
000435 9668      	ADIW R28,24
000436 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0xA7:
00027b           	.BYTE 0x42
                 ;void main(void)
                 ; 0000 000C {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 000D char input;
                 ; 0000 000E 
                 ; 0000 000F // Initialize Hardware
                 ; 0000 0010 initializeHardware();
                 ;	input -> R17
000437 dd8a      	RCALL _initializeHardware
                 ; 0000 0011 
                 ; 0000 0012 // Initialize user data in EEPROM
                 ; 0000 0013 initializeUsers();
000438 de10      	RCALL _initializeUsers
                 ; 0000 0014 
                 ; 0000 0015 // Initialize interrupts for various modes
                 ; 0000 0016 initializeIntrrupts();
000439 ddef      	RCALL _initializeIntrrupts
                 ; 0000 0017 
                 ; 0000 0018 // If user need to open the door must press '*' on the keypad
                 ; 0000 0019 while (1)
                 _0xB1:
                 ; 0000 001A {
                 ; 0000 001B input = keypad();
00043a dd92      	RCALL _keypad
00043b 2f1e      	MOV  R17,R30
                 ; 0000 001C if (input == 10) // 10 is '*' in keypad
00043c 301a      	CPI  R17,10
00043d f409      	BRNE _0xB4
                 ; 0000 001D openCloseDoorMode();
00043e df9f      	RCALL _openCloseDoorMode
                 ; 0000 001E }
                 _0xB4:
00043f cffa      	RJMP _0xB1
                 ; 0000 001F }
                 _0xB5:
000440 cfff      	RJMP _0xB5
                 ; .FEND
                 ;interrupt[3] void setPC(void)
                 ; 0000 0022 {
                 _setPC:
                 ; .FSTART _setPC
000441 d131      	RCALL SUBOPT_0x18
                 ; 0000 0023 setPCMode();
000442 df2b      	RCALL _setPCMode
                 ; 0000 0024 }
000443 c002      	RJMP _0xB9
                 ; .FEND
                 ;interrupt[2] void admin(void)
                 ; 0000 0027 {
                 _admin:
                 ; .FSTART _admin
000444 d12e      	RCALL SUBOPT_0x18
                 ; 0000 0028 adminMode();
000445 de96      	RCALL _adminMode
                 ; 0000 0029 }
                 _0xB9:
000446 91e9      	LD   R30,Y+
000447 bfef      	OUT  SREG,R30
000448 91f9      	LD   R31,Y+
000449 91e9      	LD   R30,Y+
00044a 91b9      	LD   R27,Y+
00044b 91a9      	LD   R26,Y+
00044c 9199      	LD   R25,Y+
00044d 9189      	LD   R24,Y+
00044e 9179      	LD   R23,Y+
00044f 9169      	LD   R22,Y+
000450 90f9      	LD   R15,Y+
000451 9019      	LD   R1,Y+
000452 9009      	LD   R0,Y+
000453 9518      	RETI
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
000454 931a      	ST   -Y,R17
000455 2f1a      	MOV  R17,R26
000456 b3eb      	IN   R30,0x1B
000457 70ef      	ANDI R30,LOW(0xF)
000458 2fae      	MOV  R26,R30
000459 2fe1      	MOV  R30,R17
00045a 7fe0      	ANDI R30,LOW(0xF0)
00045b 2bea      	OR   R30,R26
00045c bbeb      	OUT  0x1B,R30
                +
00045d e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00045e 958a     +DEC R24
00045f f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000460 9ada      	SBI  0x1B,2
                +
000461 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000462 958a     +DEC R24
000463 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000464 98da      	CBI  0x1B,2
                +
000465 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000466 958a     +DEC R24
000467 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000468 c074      	RJMP _0x2080001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000469 93aa      	ST   -Y,R26
00046a 81a8      	LD   R26,Y
00046b dfe8      	RCALL __lcd_write_nibble_G100
00046c 81e8          ld    r30,y
00046d 95e2          swap  r30
00046e 83e8          st    y,r30
00046f 81a8      	LD   R26,Y
000470 dfe3      	RCALL __lcd_write_nibble_G100
                +
000471 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
000472 958a     +DEC R24
000473 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
000474 9621      	ADIW R28,1
000475 9508      	RET
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000476 931a      	ST   -Y,R17
000477 930a      	ST   -Y,R16
000478 2f1a      	MOV  R17,R26
000479 810a      	LDD  R16,Y+2
00047a 2fe1      	MOV  R30,R17
00047b e0f0      	LDI  R31,0
00047c 5fed      	SUBI R30,LOW(-__base_y_G100)
00047d 4ffc      	SBCI R31,HIGH(-__base_y_G100)
00047e 81e0      	LD   R30,Z
00047f 0fe0      	ADD  R30,R16
000480 2fae      	MOV  R26,R30
000481 dfe7      	RCALL __lcd_write_data
000482 2e50      	MOV  R5,R16
000483 2e41      	MOV  R4,R17
000484 8119      	LDD  R17,Y+1
000485 8108      	LDD  R16,Y+0
000486 9623      	ADIW R28,3
000487 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000488 e0a2      	LDI  R26,LOW(2)
000489 d0f7      	RCALL SUBOPT_0x19
00048a e0ac      	LDI  R26,LOW(12)
00048b dfdd      	RCALL __lcd_write_data
00048c e0a1      	LDI  R26,LOW(1)
00048d d0f3      	RCALL SUBOPT_0x19
00048e e0e0      	LDI  R30,LOW(0)
00048f 2e4e      	MOV  R4,R30
000490 2e5e      	MOV  R5,R30
000491 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000492 931a      	ST   -Y,R17
000493 2f1a      	MOV  R17,R26
000494 301a      	CPI  R17,10
000495 f011      	BREQ _0x2000005
000496 1457      	CP   R5,R7
000497 f038      	BRLO _0x2000004
                 _0x2000005:
000498 e0e0      	LDI  R30,LOW(0)
000499 93ea      	ST   -Y,R30
00049a 9443      	INC  R4
00049b 2da4      	MOV  R26,R4
00049c dfd9      	RCALL _lcd_gotoxy
00049d 301a      	CPI  R17,10
00049e f1f1      	BREQ _0x2080001
                 _0x2000004:
00049f 9453      	INC  R5
0004a0 9ad8      	SBI  0x1B,0
0004a1 2fa1      	MOV  R26,R17
0004a2 dfc6      	RCALL __lcd_write_data
0004a3 98d8      	CBI  0x1B,0
0004a4 c038      	RJMP _0x2080001
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0004a5 d0e8      	RCALL __SAVELOCR4
0004a6 019d      	MOVW R18,R26
                 _0x2000008:
0004a7 01d9      	MOVW R26,R18
                +
0004a8 5f2f     +SUBI R18 , LOW ( - 1 )
0004a9 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0004aa 91ec      	LD   R30,X
0004ab 2f1e      	MOV  R17,R30
0004ac 30e0      	CPI  R30,0
0004ad f019      	BREQ _0x200000A
0004ae 2fa1      	MOV  R26,R17
0004af dfe2      	RCALL _lcd_putchar
0004b0 cff6      	RJMP _0x2000008
                 _0x200000A:
                 _0x2080002:
0004b1 d0e3      	RCALL __LOADLOCR4
0004b2 9624      	ADIW R28,4
0004b3 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
0004b4 931a      	ST   -Y,R17
0004b5 2f1a      	MOV  R17,R26
0004b6 b3ea      	IN   R30,0x1A
0004b7 6fe0      	ORI  R30,LOW(0xF0)
0004b8 bbea      	OUT  0x1A,R30
0004b9 9ad2      	SBI  0x1A,2
0004ba 9ad0      	SBI  0x1A,0
0004bb 9ad1      	SBI  0x1A,1
0004bc 98da      	CBI  0x1B,2
0004bd 98d8      	CBI  0x1B,0
0004be 98d9      	CBI  0x1B,1
0004bf 2e71      	MOV  R7,R17
0004c0 2fe1      	MOV  R30,R17
0004c1 58e0      	SUBI R30,-LOW(128)
                +
0004c2 93e0 0305+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
0004c4 2fe1      	MOV  R30,R17
0004c5 54e0      	SUBI R30,-LOW(192)
                +
0004c6 93e0 0306+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
0004c8 e1a4      	LDI  R26,LOW(20)
0004c9 e0b0      	LDI  R27,0
0004ca d0cf      	RCALL _delay_ms
0004cb d0b9      	RCALL SUBOPT_0x1A
0004cc d0b8      	RCALL SUBOPT_0x1A
0004cd d0b7      	RCALL SUBOPT_0x1A
0004ce e2a0      	LDI  R26,LOW(32)
0004cf df84      	RCALL __lcd_write_nibble_G100
                +
0004d0 ec88     +LDI R24 , LOW ( 200 )
0004d1 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0004d2 9701     +SBIW R24 , 1
0004d3 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0004d4 e2a8      	LDI  R26,LOW(40)
0004d5 df93      	RCALL __lcd_write_data
0004d6 e0a4      	LDI  R26,LOW(4)
0004d7 df91      	RCALL __lcd_write_data
0004d8 e8a5      	LDI  R26,LOW(133)
0004d9 df8f      	RCALL __lcd_write_data
0004da e0a6      	LDI  R26,LOW(6)
0004db df8d      	RCALL __lcd_write_data
0004dc dfab      	RCALL _lcd_clear
                 _0x2080001:
0004dd 9119      	LD   R17,Y+
0004de 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _strcmp:
                 ; .FSTART _strcmp
0004df 93ba      	ST   -Y,R27
0004e0 93aa      	ST   -Y,R26
0004e1 91e9          ld   r30,y+
0004e2 91f9          ld   r31,y+
0004e3 91a9          ld   r26,y+
0004e4 91b9          ld   r27,y+
                 strcmp0:
0004e5 916d          ld   r22,x+
0004e6 9171          ld   r23,z+
0004e7 1767          cp   r22,r23
0004e8 f421          brne strcmp1
0004e9 2366          tst  r22
0004ea f7d1          brne strcmp0
                 strcmp3:
0004eb 27ee          clr  r30
0004ec 9508          ret
                 strcmp1:
0004ed 1b67          sub  r22,r23
0004ee f3e1          breq strcmp3
0004ef e0e1          ldi  r30,1
0004f0 f408          brcc strcmp2
0004f1 50e2          subi r30,2
                 strcmp2:
0004f2 9508          ret
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _users:
0002bd           	.BYTE 0x46
                 __base_y_G100:
000303           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
0004f3 d09a      	RCALL __SAVELOCR4
0004f4 018d      	MOVW R16,R26
                +
0004f5 812c     +LDD R18 , Y + 4
0004f6 813d     +LDD R19 , Y + 4 + 1
                 	__GETWRS 18,19,4
0004f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1:
                +
0004f8 e000     +LDI R16 , LOW ( 0 )
0004f9 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
0004fa e020     +LDI R18 , LOW ( 0 )
0004fb e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
0004fc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x2:
0004fd 931a      	ST   -Y,R17
0004fe 930a      	ST   -Y,R16
                +
0004ff e0ae     +LDI R26 , 14
000500 9fa2     +MUL R26 , R18
000501 01f0     +MOVW R30 , R0
000502 9fa3     +MUL R26 , R19
000503 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,14
000504 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
000505 01df      	MOVW R26,R30
000506 dc85      	RCALL _EE_WriteString
                +
000507 5f0c     +SUBI R16 , LOW ( - 4 )
000508 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
000509 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x4:
00050a efa4      	LDI  R26,LOW(500)
00050b e0b1      	LDI  R27,HIGH(500)
00050c d08d      	RCALL _delay_ms
00050d 9ac4      	SBI  0x18,4
00050e eea8      	LDI  R26,LOW(1000)
00050f e0b3      	LDI  R27,HIGH(1000)
000510 d089      	RCALL _delay_ms
000511 98c4      	CBI  0x18,4
000512 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x5:
000513 93fa      	ST   -Y,R31
000514 93ea      	ST   -Y,R30
000515 e0a6      	LDI  R26,LOW(6)
000516 e0b0      	LDI  R27,0
000517 cc88      	RJMP _EE_ReadString
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
                +
000518 5f2a     +SUBI R18 , LOW ( - 6 )
000519 4f3f     +SBCI R19 , HIGH ( - 6 )
                 	__ADDWRN 18,19,6
00051a 933a      	ST   -Y,R19
00051b 932a      	ST   -Y,R18
00051c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x7:
00051d 01fe      	MOVW R30,R28
00051e 9670      	ADIW R30,16
00051f 93fa      	ST   -Y,R31
000520 93ea      	ST   -Y,R30
000521 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x8:
000522 e0a4      	LDI  R26,LOW(4)
000523 e0b0      	LDI  R27,0
000524 dc7b      	RCALL _EE_ReadString
                +
000525 5f2c     +SUBI R18 , LOW ( - 4 )
000526 4f3f     +SBCI R19 , HIGH ( - 4 )
                 	__ADDWRN 18,19,4
000527 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
000528 01fe      	MOVW R30,R28
000529 9674      	ADIW R30,20
00052a 93fa      	ST   -Y,R31
00052b 93ea      	ST   -Y,R30
00052c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:42 WORDS
                 SUBOPT_0xA:
00052d 93fa      	ST   -Y,R31
00052e 93ea      	ST   -Y,R30
00052f e0a0      	LDI  R26,LOW(0)
000530 e0b0      	LDI  R27,0
000531 cd31      	RJMP _displayMessage
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0xB:
000532 e0e0      	LDI  R30,LOW(0)
000533 93ea      	ST   -Y,R30
000534 e0a1      	LDI  R26,LOW(1)
000535 cf40      	RJMP _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
000536 01fe      	MOVW R30,R28
000537 9672      	ADIW R30,18
000538 93fa      	ST   -Y,R31
000539 93ea      	ST   -Y,R30
00053a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
00053b 01de      	MOVW R26,R28
00053c 969c      	ADIW R26,44
00053d dfa1      	RCALL _strcmp
00053e 30e0      	CPI  R30,0
00053f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
000540 01de      	MOVW R26,R28
000541 9696      	ADIW R26,38
000542 dd29      	RCALL _enterValueWithKeypad
000543 9730      	SBIW R30,0
000544 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xF:
000545 93fa      	ST   -Y,R31
000546 93ea      	ST   -Y,R30
000547 eea8      	LDI  R26,LOW(1000)
000548 e0b3      	LDI  R27,HIGH(1000)
000549 dd19      	RCALL _displayMessage
                +
00054a e041     +LDI R20 , LOW ( 1 )
00054b e050     +LDI R21 , HIGH ( 1 )
                 	__GETWRN 20,21,1
00054c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
00054d e8a8      	LDI  R26,LOW(5000)
00054e e1b3      	LDI  R27,HIGH(5000)
00054f d04a      	RCALL _delay_ms
000550 cf37      	RJMP _lcd_clear
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
                +
000551 5f0a     +SUBI R16 , LOW ( - 6 )
000552 4f1f     +SBCI R17 , HIGH ( - 6 )
                 	__ADDWRN 16,17,6
000553 931a      	ST   -Y,R17
000554 930a      	ST   -Y,R16
000555 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x12:
000556 93fa      	ST   -Y,R31
000557 93ea      	ST   -Y,R30
000558 e0a4      	LDI  R26,LOW(4)
000559 e0b0      	LDI  R27,0
00055a cc45      	RJMP _EE_ReadString
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13:
                +
00055b 5f0c     +SUBI R16 , LOW ( - 4 )
00055c 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
00055d 931a      	ST   -Y,R17
00055e 930a      	ST   -Y,R16
00055f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x14:
000560 01de      	MOVW R26,R28
000561 dd0a      	RCALL _enterValueWithKeypad
000562 9730      	SBIW R30,0
000563 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15:
000564 01de      	MOVW R26,R28
000565 9612      	ADIW R26,2
000566 df78      	RCALL _strcmp
000567 30e0      	CPI  R30,0
000568 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x16:
000569 93fa      	ST   -Y,R31
00056a 93ea      	ST   -Y,R30
00056b eea8      	LDI  R26,LOW(1000)
00056c e0b3      	LDI  R27,HIGH(1000)
00056d ccf5      	RJMP _displayMessage
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x17:
                +
00056e 5f0c     +SUBI R16 , LOW ( - 4 )
00056f 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                +
000570 5f0c     +SUBI R16 , LOW ( - 4 )
000571 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
000572 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x18:
000573 920a      	ST   -Y,R0
000574 921a      	ST   -Y,R1
000575 92fa      	ST   -Y,R15
000576 936a      	ST   -Y,R22
000577 937a      	ST   -Y,R23
000578 938a      	ST   -Y,R24
000579 939a      	ST   -Y,R25
00057a 93aa      	ST   -Y,R26
00057b 93ba      	ST   -Y,R27
00057c 93ea      	ST   -Y,R30
00057d 93fa      	ST   -Y,R31
00057e b7ef      	IN   R30,SREG
00057f 93ea      	ST   -Y,R30
000580 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19:
000581 dee7      	RCALL __lcd_write_data
000582 e0a3      	LDI  R26,LOW(3)
000583 e0b0      	LDI  R27,0
000584 c015      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x1A:
000585 e3a0      	LDI  R26,LOW(48)
000586 decd      	RCALL __lcd_write_nibble_G100
                +
000587 ec88     +LDI R24 , LOW ( 200 )
000588 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000589 9701     +SBIW R24 , 1
00058a f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00058b 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
00058c 935a      	ST   -Y,R21
                 __SAVELOCR5:
00058d 934a      	ST   -Y,R20
                 __SAVELOCR4:
00058e 933a      	ST   -Y,R19
                 __SAVELOCR3:
00058f 932a      	ST   -Y,R18
                 __SAVELOCR2:
000590 931a      	ST   -Y,R17
000591 930a      	ST   -Y,R16
000592 9508      	RET
                 
                 __LOADLOCR6:
000593 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000594 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000595 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000596 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000597 8119      	LDD  R17,Y+1
000598 8108      	LD   R16,Y
000599 9508      	RET
                 
                 _delay_ms:
00059a 9610      	adiw r26,0
00059b f039      	breq __delay_ms1
                 __delay_ms0:
00059c 95a8      	wdr
                +
00059d ed80     +LDI R24 , LOW ( 0x7D0 )
00059e e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00059f 9701     +SBIW R24 , 1
0005a0 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0005a1 9711      	sbiw r26,1
0005a2 f7c9      	brne __delay_ms0
                 __delay_ms1:
0005a3 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  14 r1 :   3 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   2 
r16:  42 r17:  50 r18:  32 r19:  26 r20:  14 r21:  14 r22:   8 r23:   5 
r24:  23 r25:   7 r26: 144 r27:  38 r28:  51 r29:   1 r30: 240 r31:  59 
x  :  11 y  : 164 z  :  11 
Registers used: 25 out of 35 (71.4%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   3 add   :   5 
adiw  :  48 and   :   0 andi  :   4 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  14 
brge  :   4 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   1 
brlt  :   1 brmi  :   0 brne  :  46 brpl  :   0 brsh  :   1 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   0 
cbi   :  17 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   3 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   3 cpc   :   4 cpi   :  28 cpse  :   0 dec   :   5 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :  16 inc   :   2 jmp   :  23 ld    :  32 ldd   :  42 ldi   : 171 
lds   :   0 lpm   :   7 lsl   :   0 lsr   :   0 mov   :  24 movw  :  54 
mul   :   2 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   4 
ori   :   8 out   :  25 pop   :   2 push  :   2 rcall : 185 ret   :  56 
reti  :   1 rjmp  :  59 rol   :   0 ror   :   0 sbc   :   0 sbci  :  21 
sbi   :  25 sbic  :   2 sbis  :  12 sbiw  :  28 sbr   :   0 sbrc  :   0 
sbrs  :   0 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  91 std   :  14 sts   :   2 sub   :   1 subi  :  30 swap  :   1 
tst   :   1 wdr   :   1 
Instructions used: 51 out of 116 (44.0%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000b48   2318    570   2888   16384  17.6%
[.dseg] 0x000060 0x000307      0    423    423    1024  41.3%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 4 warnings
